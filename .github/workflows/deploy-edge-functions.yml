name: Deploy Supabase Edge Functions

on:
  push:
    branches:
      - main
    paths:
      - 'supabase/functions/**'
  workflow_dispatch:

env:
  SUPABASE_PROJECT_ID: haffcubwactwjpngcpdf

jobs:
  deploy:
    name: Deploy Edge Functions
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
      
      - name: üîß Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      
      - name: üì¶ Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: üîê Login to Supabase
        run: |
          echo "${{ secrets.SUPABASE_ACCESS_TOKEN }}" | supabase login --token
      
      - name: üîó Link to Supabase project
        run: |
          supabase link --project-ref $SUPABASE_PROJECT_ID
      
      - name: üîê Deploy Identity Verification Functions
        run: |
          echo ""
          echo "============================================"
          echo "üîê Deploying Identity Verification Functions"
          echo "============================================"
          
          VERIFICATION_FUNCTIONS=(
            "smile-id-verification"
            "oneci-verification"
            "cnam-verification"
            "face-verification"
            "passport-verification"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${VERIFICATION_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä Identity Verification Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üîè Deploy CryptoNeo Functions
        run: |
          echo ""
          echo "============================================"
          echo "üîè Deploying CryptoNeo Functions"
          echo "============================================"
          
          CRYPTONEO_FUNCTIONS=(
            "cryptoneo-callback"
            "cryptoneo-sign-document"
            "cryptoneo-sign-lease"
            "cryptoneo-auth"
            "cryptoneo-send-otp"
            "cryptoneo-verify-signature"
            "cryptoneo-verify-status"
            "cryptoneo-generate-certificate"
            "cryptoneo-generate-cert"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${CRYPTONEO_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä CryptoNeo Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üí∞ Deploy Payment Functions
        run: |
          echo ""
          echo "============================================"
          echo "üí∞ Deploying Payment Functions"
          echo "============================================"
          
          PAYMENT_FUNCTIONS=(
            "mobile-money-payment"
            "mobile-money-webhook"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${PAYMENT_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä Payment Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üìÑ Deploy Document Generation Functions
        run: |
          echo ""
          echo "============================================"
          echo "üìÑ Deploying Document Functions"
          echo "============================================"
          
          DOCUMENT_FUNCTIONS=(
            "generate-lease-pdf"
            "generate-receipt"
            "generate-report"
            "generate-illustration"
            "generate-property-images"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${DOCUMENT_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä Document Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üîß Deploy Utility Functions
        run: |
          echo ""
          echo "============================================"
          echo "üîß Deploying Utility Functions"
          echo "============================================"
          
          UTILITY_FUNCTIONS=(
            "switch-role-v2"
            "switch-role"
            "add-role"
            "tenant-scoring"
            "generate-recommendations"
            "send-email"
            "send-certification-email"
            "send-reminders"
            "send-guest-message"
            "send-mfa-notification"
            "sarah-chat"
            "geocode-address"
            "get-weather"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${UTILITY_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä Utility Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üè† Deploy Property Management Functions
        run: |
          echo ""
          echo "============================================"
          echo "üè† Deploying Property Management Functions"
          echo "============================================"
          
          PROPERTY_FUNCTIONS=(
            "book-property-visit"
            "check-property-alerts"
            "verify-visit-qr-code"
            "request-visit-refund"
            "expire-stale-visit-requests"
            "analyze-market-trends"
            "track-search"
            "update-preferences"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${PROPERTY_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä Property Management Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üõ°Ô∏è Deploy Security & Admin Functions
        run: |
          echo ""
          echo "============================================"
          echo "üõ°Ô∏è Deploying Security & Admin Functions"
          echo "============================================"
          
          SECURITY_FUNCTIONS=(
            "alert-suspicious-activity"
            "track-admin-login"
            "moderate-review"
            "process-overdue-applications"
            "seed-demo-data"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${SECURITY_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä Security & Admin Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üìä Final Summary
        run: |
          echo ""
          echo "============================================"
          echo "üéâ DEPLOYMENT COMPLETE"
          echo "============================================"
          echo "All Edge Functions have been deployed!"
          echo "Check the logs above for details."
          echo ""
          echo "üìç Dashboard: https://supabase.com/dashboard/project/haffcubwactwjpngcpdf/functions"
          echo "============================================"
