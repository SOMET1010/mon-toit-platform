import { useNavigate } from 'react-router-dom';
import { useAuth } from '@/contexts/AuthContext';
import { useRoleSwitchV2 } from '@/hooks/useRoleSwitchV2';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { CheckCircle2, Circle, ArrowRight, Shield, FileText, Phone, Mail } from 'lucide-react';
import { Progress } from '@/components/ui/progress';

interface Requirement {
  id: string;
  label: string;
  description: string;
  icon: React.ReactNode;
  completed: boolean;
  action: () => void;
  actionLabel: string;
}

/**
 * Page pour devenir propri√©taire
 * - Affichage des pr√©requis
 * - V√©rification Smile ID
 * - Activation du r√¥le
 */
export const BecomeProprietaire = () => {
  const navigate = useNavigate();
  const { user, profile } = useAuth();
  const { addRole, isAddingRole, availableRoles } = useRoleSwitchV2();

  // V√©rifier si l'utilisateur a d√©j√† le r√¥le propri√©taire
  const hasProprietaireRole = availableRoles.includes('proprietaire');

  // D√©finir les pr√©requis
  const requirements: Requirement[] = [
    {
      id: 'oneci',
      label: 'V√©rification Smile ID (CNI)',
      description: 'V√©rifiez votre identit√© avec votre Carte Nationale d\'Identit√© ivoirienne',
      icon: <Shield className="h-5 w-5" />,
      completed: profile?.smile_id_verified || false,
      action: () => navigate('/verification/oneci'),
      actionLabel: 'V√©rifier mon identit√©'
    },
    {
      id: 'phone',
      label: 'T√©l√©phone v√©rifi√©',
      description: 'Confirmez votre num√©ro de t√©l√©phone avec un code OTP',
      icon: <Phone className="h-5 w-5" />,
      completed: profile?.phone_verified || false,
      action: () => navigate('/verification/phone'),
      actionLabel: 'V√©rifier mon t√©l√©phone'
    },
    {
      id: 'email',
      label: 'Email v√©rifi√©',
      description: 'Confirmez votre adresse email pour recevoir les notifications',
      icon: <Mail className="h-5 w-5" />,
      completed: user?.email_confirmed_at !== null,
      action: () => navigate('/verification/email'),
      actionLabel: 'V√©rifier mon email'
    },
    {
      id: 'profile',
      label: 'Profil compl√©t√© (80%)',
      description: 'Compl√©tez votre profil avec vos informations personnelles',
      icon: <FileText className="h-5 w-5" />,
      completed: (profile?.profile_completion || 0) >= 80,
      action: () => navigate('/profile/edit'),
      actionLabel: 'Compl√©ter mon profil'
    }
  ];

  const completedCount = requirements.filter(r => r.completed).length;
  const totalCount = requirements.length;
  const progressPercentage = (completedCount / totalCount) * 100;
  const allCompleted = completedCount === totalCount;

  const handleActivateRole = () => {
    addRole({ role: 'proprietaire', verificationMethod: 'oneci' });
  };

  // Si l'utilisateur a d√©j√† le r√¥le
  if (hasProprietaireRole) {
    return (
      <div className="container max-w-2xl mx-auto py-8 px-4">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <CheckCircle2 className="h-6 w-6 text-green-600" />
              Vous √™tes d√©j√† propri√©taire !
            </CardTitle>
            <CardDescription>
              Vous avez acc√®s √† toutes les fonctionnalit√©s de publication et gestion de biens.
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex gap-3">
              <Button onClick={() => navigate('/mes-biens')}>
                Voir mes biens
              </Button>
              <Button variant="outline" onClick={() => navigate('/publier')}>
                Publier un bien
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="container max-w-3xl mx-auto py-8 px-4">
      {/* En-t√™te */}
      <div className="mb-8">
        <h1 className="text-3xl font-bold mb-2 flex items-center gap-2">
          üîë Devenir Propri√©taire
        </h1>
        <p className="text-muted-foreground">
          Pour publier des biens sur Mon Toit, vous devez compl√©ter les √©tapes de v√©rification suivantes.
        </p>
      </div>

      {/* Progression globale */}
      <Card className="mb-6">
        <CardContent className="pt-6">
          <div className="space-y-2">
            <div className="flex items-center justify-between text-sm">
              <span className="font-medium">Progression</span>
              <span className="text-muted-foreground">
                {completedCount}/{totalCount} √©tapes compl√©t√©es
              </span>
            </div>
            <Progress value={progressPercentage} className="h-2" />
          </div>
        </CardContent>
      </Card>

      {/* Liste des pr√©requis */}
      <div className="space-y-4 mb-8">
        {requirements.map((req, index) => (
          <Card key={req.id} className={req.completed ? 'border-green-200 bg-green-50/50' : ''}>
            <CardContent className="p-6">
              <div className="flex items-start gap-4">
                {/* Ic√¥ne de statut */}
                <div className="flex-shrink-0 mt-1">
                  {req.completed ? (
                    <CheckCircle2 className="h-6 w-6 text-green-600" />
                  ) : (
                    <Circle className="h-6 w-6 text-muted-foreground" />
                  )}
                </div>

                {/* Contenu */}
                <div className="flex-1 space-y-2">
                  <div className="flex items-center gap-2">
                    {req.icon}
                    <h3 className={`font-semibold ${req.completed ? 'text-green-800' : ''}`}>
                      {req.label}
                    </h3>
                    {req.completed && (
                      <Badge variant="secondary" className="bg-green-100 text-green-800">
                        Compl√©t√©
                      </Badge>
                    )}
                  </div>

                  <p className="text-sm text-muted-foreground">
                    {req.description}
                  </p>

                  {!req.completed && (
                    <Button
                      variant="outline"
                      size="sm"
                      onClick={req.action}
                      className="mt-2"
                    >
                      {req.actionLabel}
                      <ArrowRight className="ml-2 h-4 w-4" />
                    </Button>
                  )}
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* Bouton d'activation */}
      {allCompleted && (
        <Card className="border-primary bg-primary/5">
          <CardContent className="p-6">
            <div className="space-y-4">
              <div className="flex items-center gap-3">
                <CheckCircle2 className="h-8 w-8 text-green-600" />
                <div>
                  <h3 className="font-semibold text-lg">F√©licitations ! üéâ</h3>
                  <p className="text-sm text-muted-foreground">
                    Vous avez compl√©t√© toutes les √©tapes requises.
                  </p>
                </div>
              </div>

              <Button
                size="lg"
                className="w-full"
                onClick={handleActivateRole}
                disabled={isAddingRole}
              >
                {isAddingRole ? (
                  <>
                    <Circle className="mr-2 h-4 w-4 animate-spin" />
                    Activation en cours...
                  </>
                ) : (
                  <>
                    ‚úÖ Activer le r√¥le Propri√©taire
                  </>
                )}
              </Button>

              <p className="text-xs text-center text-muted-foreground">
                En activant ce r√¥le, vous acceptez les{' '}
                <a href="/conditions-proprietaire" className="underline">
                  conditions d'utilisation pour les propri√©taires
                </a>
              </p>
            </div>
          </CardContent>
        </Card>
      )}

      {/* Avantages */}
      <Card className="mt-8">
        <CardHeader>
          <CardTitle>Avantages du compte Propri√©taire</CardTitle>
          <CardDescription>
            Ce que vous pourrez faire une fois votre compte activ√©
          </CardDescription>
        </CardHeader>
        <CardContent>
          <ul className="space-y-3">
            {[
              'Publier des annonces de location',
              'G√©rer vos biens immobiliers',
              'Recevoir des candidatures de locataires',
              'Signer des baux √©lectroniques certifi√©s ANSUT',
              'Recevoir des paiements s√©curis√©s via InTouch',
              'Acc√©der aux statistiques de vos biens'
            ].map((advantage, index) => (
              <li key={index} className="flex items-center gap-2 text-sm">
                <CheckCircle2 className="h-4 w-4 text-primary flex-shrink-0" />
                <span>{advantage}</span>
              </li>
            ))}
          </ul>
        </CardContent>
      </Card>
    </div>
  );
};

