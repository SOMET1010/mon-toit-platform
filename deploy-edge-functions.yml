name: Deploy Supabase Edge Functions

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'supabase/functions/**'
      - '.github/workflows/deploy-edge-functions.yml'
  workflow_dispatch:  # Permet le d√©clenchement manuel

env:
  SUPABASE_PROJECT_ID: haffcubwactwjpngcpdf

jobs:
  deploy:
    name: Deploy Edge Functions
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
      
      - name: üîß Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      
      - name: üì¶ Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: üîê Login to Supabase
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "Authenticating with Supabase..."
          supabase login --token $SUPABASE_ACCESS_TOKEN
      
      - name: üîó Link to Supabase project
        run: |
          echo "Linking to project $SUPABASE_PROJECT_ID..."
          supabase link --project-ref $SUPABASE_PROJECT_ID
      
      - name: üöÄ Deploy Priority Functions
        run: |
          echo "============================================"
          echo "üöÄ Deploying Priority Edge Functions"
          echo "============================================"
          
          # Fonctions prioritaires (v√©rifications d'identit√©)
          PRIORITY_FUNCTIONS=(
            "smile-id-verification"
            "oneci-verification"
            "cnam-verification"
            "face-verification"
            "passport-verification"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${PRIORITY_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä Priority Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üîê Deploy CryptoNeo Functions
        run: |
          echo ""
          echo "============================================"
          echo "üîê Deploying CryptoNeo Functions"
          echo "============================================"
          
          CRYPTONEO_FUNCTIONS=(
            "cryptoneo-callback"
            "cryptoneo-sign-document"
            "cryptoneo-auth"
            "cryptoneo-send-otp"
            "cryptoneo-verify-signature"
            "cryptoneo-generate-certificate"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${CRYPTONEO_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä CryptoNeo Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üí∞ Deploy Payment Functions
        run: |
          echo ""
          echo "============================================"
          echo "üí∞ Deploying Payment Functions"
          echo "============================================"
          
          PAYMENT_FUNCTIONS=(
            "mobile-money-payment"
            "mobile-money-webhook"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${PAYMENT_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä Payment Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üìÑ Deploy Document Generation Functions
        run: |
          echo ""
          echo "============================================"
          echo "üìÑ Deploying Document Functions"
          echo "============================================"
          
          DOCUMENT_FUNCTIONS=(
            "generate-lease-pdf"
            "generate-receipt"
            "generate-report"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${DOCUMENT_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä Document Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üîß Deploy Utility Functions
        run: |
          echo ""
          echo "============================================"
          echo "üîß Deploying Utility Functions"
          echo "============================================"
          
          UTILITY_FUNCTIONS=(
            "switch-role-v2"
            "add-role"
            "tenant-scoring"
            "generate-recommendations"
            "send-email"
            "send-certification-email"
            "send-reminders"
            "sarah-chat"
            "geocode-address"
          )
          
          DEPLOYED=0
          FAILED=0
          
          for func in "${UTILITY_FUNCTIONS[@]}"; do
            if [ -d "supabase/functions/${func}" ]; then
              echo ""
              echo "üì¶ Deploying: ${func}"
              if supabase functions deploy "${func}" --project-ref $SUPABASE_PROJECT_ID --no-verify-jwt; then
                echo "‚úÖ Deployed: ${func}"
                ((DEPLOYED++))
              else
                echo "‚ùå Failed: ${func}"
                ((FAILED++))
              fi
            else
              echo "‚ö†Ô∏è  Skipped (not found): ${func}"
            fi
          done
          
          echo ""
          echo "============================================"
          echo "üìä Utility Functions Summary"
          echo "‚úÖ Deployed: ${DEPLOYED}"
          echo "‚ùå Failed: ${FAILED}"
          echo "============================================"
      
      - name: üìä Final Summary
        run: |
          echo ""
          echo "============================================"
          echo "üéâ DEPLOYMENT COMPLETE"
          echo "============================================"
          echo "All Edge Functions have been deployed!"
          echo "Check the logs above for details."
          echo "============================================"
