{"version":3,"mappings":"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","names":["Logger","__publicField","level","message","context","formattedMessage","Sentry.captureException","Sentry.addBreadcrumb","error","errorInfo","err","logger","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","t","toast","listeners","memoryState","listener","props","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","illustrationPaths","cn","inputs","twMerge","clsx","getIllustrationPath","name","TooltipProvider","TooltipPrimitive.Provider","Tooltip","TooltipPrimitive.Root","TooltipTrigger","TooltipPrimitive.Trigger","TooltipContent","React.forwardRef","className","sideOffset","ref","jsx","TooltipPrimitive.Content","SUPABASE_URL","SUPABASE_PUBLISHABLE_KEY","supabase","createClient","AuthContext","createContext","AuthProvider","children","user","setUser","useState","session","setSession","profile","setProfile","roles","setRoles","loading","setLoading","fetchProfile","userId","data","fetchUserRoles","r","refreshProfile","profileData","userRoles","useEffect","subscription","event","signUp","email","password","fullName","userType","redirectUrl","signIn","signOut","clearCacheOnLogout","__vitePreload","n","hasRole","role","useAuth","useContext","alertVariants","cva","Alert","variant","AlertTitle","AlertDescription","buttonVariants","Button","size","asChild","Comp","Slot","Input","type","ScrollArea","ScrollAreaPrimitive.Root","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","orientation","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","Avatar","AvatarPrimitive.Root","AvatarImage","AvatarPrimitive.Image","AvatarFallback","AvatarPrimitive.Fallback","MOBILE_BREAKPOINT","useIsMobile","isMobile","setIsMobile","mql","onChange","useNotifications","notifications","setNotifications","unreadCount","setUnreadCount","fetchNotifications","channel","payload","newNotification","prev","updatedNotification","notif","recalculateUnreadCount","notificationId","now","useContrastMode","isHighContrast","setIsHighContrast","mediaQuery","handleChange","e","badgeVariants","Badge","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","Skeleton","Separator","decorative","SeparatorPrimitive.Root","Sheet","SheetPrimitive.Root","SheetTrigger","SheetPrimitive.Trigger","SheetPortal","SheetPrimitive.Portal","SheetOverlay","SheetPrimitive.Overlay","sheetVariants","SheetContent","side","jsxs","SheetPrimitive.Content","SheetPrimitive.Close","X","SheetHeader","SheetTitle","SheetPrimitive.Title","SheetDescription","SheetPrimitive.Description","SIDEBAR_COOKIE_NAME","SIDEBAR_COOKIE_MAX_AGE","SIDEBAR_WIDTH","SIDEBAR_WIDTH_MOBILE","SIDEBAR_WIDTH_ICON","SIDEBAR_KEYBOARD_SHORTCUT","SidebarContext","React.createContext","useSidebar","React.useContext","SidebarProvider","defaultOpen","openProp","setOpenProp","style","openMobile","setOpenMobile","_open","_setOpen","setOpen","React.useCallback","value","openState","toggleSidebar","handleKeyDown","contextValue","React.useMemo","Sidebar","collapsible","SidebarTrigger","onClick","PanelLeft","SidebarRail","SidebarInset","SidebarInput","SidebarHeader","SidebarFooter","SidebarSeparator","SidebarContent","SidebarGroup","SidebarGroupLabel","SidebarGroupAction","SidebarGroupContent","SidebarMenu","SidebarMenuItem","sidebarMenuButtonVariants","SidebarMenuButton","isActive","tooltip","button","SidebarMenuAction","showOnHover","SidebarMenuBadge","SidebarMenuSkeleton","showIcon","width","SidebarMenuSub","SidebarMenuSubItem","SidebarMenuSubButton","usePermissions","permissions","ownerId","resourceOwnerId","monToitLogo","DropdownMenu","DropdownMenuPrimitive.Root","DropdownMenuTrigger","DropdownMenuPrimitive.Trigger","DropdownMenuGroup","DropdownMenuPrimitive.Group","DropdownMenuSubTrigger","inset","DropdownMenuPrimitive.SubTrigger","ChevronRight","DropdownMenuSubContent","DropdownMenuPrimitive.SubContent","DropdownMenuContent","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuItem","DropdownMenuPrimitive.Item","DropdownMenuCheckboxItem","checked","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","Check","DropdownMenuRadioItem","DropdownMenuPrimitive.RadioItem","Circle","DropdownMenuLabel","DropdownMenuPrimitive.Label","DropdownMenuSeparator","DropdownMenuPrimitive.Separator","useAgencyMandates","queryClient","useQueryClient","mandates","isLoading","useQuery","createMandate","useMutation","mandate","acceptMandate","mandateId","refuseMandate","reason","terminateMandate","suspendMandate","updateMandatePermissions","activeMandates","m","pendingMandates","asAgency","asOwner","Tabs","TabsPrimitive.Root","TabsList","TabsPrimitive.List","TabsTrigger","TabsPrimitive.Trigger","TabsContent","TabsPrimitive.Content","getNotificationIcon","category","FileText","CheckCircle","XCircle","AlertTriangle","Building2","MessageSquare","Home","DollarSign","Bell","NotificationBell","markAsRead","markAllAsRead","requestPermission","navigate","useNavigate","handleNotificationClick","notification","url","groupedNotifications","useMemo","groups","categoryUnreadCount","counts","renderNotificationItem","NotificationIcon","_a","fr","Settings","CertificationNotificationBadge","setCount","fetchPendingCount","pendingCount","MobileMenu","handleNavClick","Menu","Link","Search","PlusCircle","ShieldCheck","HelpCircle","Fragment","LayoutDashboard","User","LogOut","RoleBadge","config","Icon","Navbar","canAccessAdminDashboard","Shield","Footer","Facebook","Twitter","Linkedin","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDown","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUp","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","position","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","DialogFooter","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","PROPERTY_STATUS_LABELS","PROPERTY_STATUS_COLORS","STATUS_VARIANTS","STATUS_ICONS","Lock","Clock","PROPERTY_TYPES","FILE_LIMITS","VALIDATION_LIMITS","PROPERTY_LIMITS","ERROR_MESSAGES","SUCCESS_MESSAGES","CITIES","formatPrice","price","validateImageType","file","validateVideoType","getPropertyStatusLabel","status","labelVariants","Label","LabelPrimitive.Root","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","Textarea","Switch","SwitchPrimitives.Root","SwitchPrimitives.Thumb","Progress","ProgressPrimitive.Root","ProgressPrimitive.Indicator","AlertDialog","AlertDialogPrimitive.Root","AlertDialogTrigger","AlertDialogPrimitive.Trigger","AlertDialogPortal","AlertDialogPrimitive.Portal","AlertDialogOverlay","AlertDialogPrimitive.Overlay","AlertDialogContent","AlertDialogPrimitive.Content","AlertDialogHeader","AlertDialogFooter","AlertDialogTitle","AlertDialogPrimitive.Title","AlertDialogDescription","AlertDialogPrimitive.Description","AlertDialogAction","AlertDialogPrimitive.Action","AlertDialogCancel","AlertDialogPrimitive.Cancel","AppError","code","isSupabaseError","_b","handleError","fallbackMessage","userMessage","handleSuccess","description","StickyHeader","offsetTop","blur","AdminSidebar","activeTab","onTabChange","badges","menuGroups","Users","BarChart3","Flag","FileBarChart","PenTool","Image","group","item","AdminStats","stats","setStats","securityStats","setSecurityStats","fetchStats","propertiesRes","usersRes","leasesRes","certifiedRes","pendingProps","oneDayAgo","failedCount","massActionsData","suspiciousActions","_","i","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","RadioGroup","RadioGroupPrimitive.Root","RadioGroupItem","RadioGroupPrimitive.Item","RadioGroupPrimitive.Indicator","AdminProperties","properties","setProperties","selectedProperties","setSelectedProperties","showStatusDialog","setShowStatusDialog","showRentDialog","setShowRentDialog","showArchiveDialog","setShowArchiveDialog","bulkStatus","setBulkStatus","rentModificationType","setRentModificationType","rentModificationValue","setRentModificationValue","confirmationChecked","setConfirmationChecked","fetchProperties","ownerIds","p","profilesData","profilesMap","propertiesWithProfiles","property","updatePropertyStatus","propertyId","newStatus","toggleSelectAll","toggleSelectProperty","clearSelection","handleBulkStatusChange","handleBulkRentChange","updates","prop","currentRent","newRent","handleBulkArchive","getPreviewData","getStatusBadge","CheckSquare","Edit","Archive","Eye","idx","v","AdminUsers","users","setUsers","fetchUsers","getUserTypeBadge","labels","ANSUTCertifiedBadge","certifiedAt","LeaseCertificationReview","leaseId","onOpenChange","onClose","onStatusUpdated","handleClose","lease","setLease","actionLoading","setActionLoading","adminNotes","setAdminNotes","fetchLeaseDetails","handleCertification","actionType","updateData","userData","emailAction","emailError","isFullySigned","bothVerified","_c","_d","_e","_f","_g","_h","_i","_j","_k","Loader2","AdminLeases","leases","setLeases","selectedLeaseId","setSelectedLeaseId","reviewDialogOpen","setReviewDialogOpen","fetchLeases","handleReviewLease","variants","COLORS","PlatformAnalytics","setData","metrics","setMetrics","funnelData","setFunnelData","heatmapData","setHeatmapData","scatterData","setScatterData","period","setPeriod","selectedCity","setSelectedCity","cities","setCities","fetchAnalytics","daysAgo","startDate","profiles","profilesError","applications","applicationsError","propertiesQuery","propertiesError","leasesError","searches","searchesError","favorites","favoritesError","uniqueCities","userGrowthMap","date","userGrowth","a","b","applicationsByWeekMap","app","week","applicationsByWeek","cityMap","propertyDistribution","city","topProperties","totalApplications","acceptedApplications","conversionRate","reviewedApplications","avgResponseTime","sum","created","reviewed","totalUsers","activeUserIds","s","f","activeUsersRate","totalLeases","certifiedLeases","l","certificationRate","thirtyDaysAgo","returningUsers","retentionRate","signups","searchCount","applicationsCount","signedLeases","activityByDayHour","day","hour","key","days","heatmap","scatter","exportToCSV","csvContent","row","blob","link","Download","TrendingUp","Activity","ResponsiveContainer","BarChart","CartesianGrid","XAxis","YAxis","Legend","Bar","LineChart","Line","PieChart","Pie","percent","entry","Cell","FunnelChart","Funnel","LabelList","activity","d","maxActivity","opacity","ScatterChart","ZAxis","active","Scatter","DisputeTimeline","disputeId","logs","setLogs","fetchLogs","getActionBadge","log","format","DisputeManager","disputes","setDisputes","selectedDispute","setSelectedDispute","filter","setFilter","admins","setAdmins","fetchDisputes","fetchAdmins","filteredData","allDisputes","in_review","resolved_last_30d","resolvedWithTime","avg_resolution_hours","differenceInHours","updateDispute","sendNotification","getPriorityIcon","priority","dispute","att","admin","AdminVerificationStats","verifications","pending","oneci_verified","cnam_verified","verified","rejected","reviewedVerifications","avgProcessingTime","scoresWithValues","avgScore","approvalRate","rejectionRate","CheckCircle2","Award","AdminVerificationQueue","setVerifications","passportVerifications","setPassportVerifications","selectedVerification","setSelectedVerification","reviewNotes","setReviewNotes","submitting","setSubmitting","fetchPendingVerifications","enrichedData","verification","passportData","passportError","handleAction","functionName","Globe","ReviewModeration","reviews","setReviews","selectedReview","setSelectedReview","moderationNotes","setModerationNotes","analyzing","setAnalyzing","analysis","setAnalysis","setActiveTab","reviewTypeFilter","setReviewTypeFilter","fetchReviews","query","analyzeReviewContent","review","moderateReview","reviewId","getToxicityBadge","score","Filter","Star","Popover","PopoverPrimitive.Root","PopoverTrigger","PopoverPrimitive.Trigger","PopoverContent","align","PopoverPrimitive.Portal","PopoverPrimitive.Content","Calendar","classNames","showOutsideDays","DayPicker","_props","ChevronLeft","CHART_COLORS","AdvancedReporting","setStartDate","endDate","setEndDate","periodPreset","setPeriodPreset","end","start","subDays","fetchReportData","handlePresetChange","preset","profilesQuery","applicationsQuery","landlordMap","current","topLandlords","tenantMap","topTenants","verificationStats","totalViews","avgViews","totalProperties","totalRevenue","ansutCommission","revenueByType","propertyType","timelineData","daysInPeriod","groupBy","dateGroups","citiesMap","citiesData","typesMap","propertyTypes","periodDuration","previousStart","previousEnd","prevProperties","prevApplications","prevProfiles","calculateDelta","previous","delta","dataToExport","filename","headers","rows","csv","handleExportPDF","reportType","response","CalendarIcon","isPositive","ArrowUpRight","ArrowDownRight","landlord","tenant","colors","csvData","revenue","_l","LeaseCertificationQueue","pendingLeases","setPendingLeases","reviewOpen","setReviewOpen","fetchPendingLeases","handleReviewClick","handleReviewClose","getStatusLabel","MapPin","DataTable","columns","onRowClick","emptyMessage","column","rowIndex","colIndex","Pagination","PaginationContent","PaginationItem","PaginationLink","PaginationPrevious","PaginationNext","PaginationEllipsis","MoreHorizontal","actionTypeLabels","getActionBadgeVariant","ITEMS_PER_PAGE","AuditLogViewer","filteredLogs","setFilteredLogs","searchTerm","setSearchTerm","actionFilter","setActionFilter","targetFilter","setTargetFilter","expandedRows","setExpandedRows","currentPage","setCurrentPage","dateRange","setDateRange","startOfToday","endOfDay","suspiciousActivities","setSuspiciousActivities","isSuperAdmin","fetchAuditLogs","filterLogs","suspicious","detectSuspiciousActivity","sendSuspiciousActivityAlerts","logsData","adminIds","profileMap","enrichedLogs","oneMinuteAgo","officeHoursStart","officeHoursEnd","logsByAdmin","acc","adminId","adminLogs","adminIPs","ips","adminLog","criticalActions","offHoursByAdmin","deletionsByAdmin","activities","filtered","cell","toggleRowExpansion","newSet","setDatePreset","today","startOfDay","kpis","totalPages","paginatedLogs","uniqueActions","uniqueTargets","target","page","STANDARD_VARIABLES","LeaseTemplateManager","templates","setTemplates","editingTemplate","setEditingTemplate","previewTemplate","setPreviewTemplate","showDialog","setShowDialog","showPreview","setShowPreview","formData","setFormData","activeSectionIndex","setActiveSectionIndex","fetchTemplates","handleCreate","handleEdit","template","handleDuplicate","handleDelete","handleSave","templateData","insertVariable","variable","section","newContent","newSections","updateSection","field","addSection","removeSection","renderPreview","sampleData","content","Copy","Trash2","Plus","PromoteToSuperAdmin","handlePromote","SensitiveDataAccessMonitor","filterDataType","setFilterDataType","searchUserId","setSearchUserId","fetchAccessLogs","getDataTypeIcon","dataType","getAccessBadge","granted","getRelationshipBadge","relationship","suspiciousLogs","recentUnauthorized","logTime","oneHourAgo","useMfaCompliance","setError","calculateStatus","expiresAt","daysRemaining","fetchCompliance","useCallback","rpcError","processedAdmins","interval","refresh","compliantCount","warningCount","criticalCount","EnhancedMfaSecurityMonitor","sendingNotification","setSendingNotification","handleSendReminder","resolve","getStatusIcon","getGracePeriodText","RefreshCw","ProcessingConfigPanel","saving","setSaving","deadlineHours","setDeadlineHours","autoActionEnabled","setAutoActionEnabled","autoActionType","setAutoActionType","fetchConfig","configValue","Save","ProcessingAnalytics","setKpis","totalProcessed","processedApps","avgProcessingTimeHours","totalHours","diffMs","allProcessed","complianceRate","withinDeadline","currentOverdue","autoProcessed","handleExportOverdue","AlertCircle","EMPTY_RESULT","SeedDemoDataButton","setStatus","progress","setProgress","abortRef","useRef","mountedRef","dialogOpen","setDialogOpen","steps","escalateProgress","safeSet","setter","next","resetAll","invokeSeed","functionError","handleSeedData","merged","startTransition","seeding","success","failed","StatusIcon","Database","statusText","RotateCcw","ElectronicSignaturesDashboard","recentSignatures","setRecentSignatures","fetchMetrics","fetchRecentSignatures","totalCerts","activeCerts","expiringDate","expiring","totalSigs","successSigs","failedSigs","EXPIRY_WARNING_DAYS","REFRESH_DELAY","PAGE_SIZE","CertificateManager","certificates","setCertificates","revokeDialogOpen","setRevokeDialogOpen","selectedCertificate","setSelectedCertificate","statusFilter","setStatusFilter","expiryFilter","setExpiryFilter","fetchCertificates","isExpiringSoon","expiryDate","daysUntilExpiry","c","expired","revoked","expiringSoon","filteredCertificates","cert","matchesSearch","matchesStatus","matchesExpiry","paginatedCertificates","confirmRevoke","certificateId","handleRevokeCertificate","handleRegenerateCertificate","handleExportCSV","clearFilters","hasActiveFilters","showWarning","isRevoked","MoreVertical","PropertyAlertsMonitor","recentAlerts","setRecentAlerts","analytics","setAnalytics","fetchData","statsData","statsError","alertsData","alertsError","enrichedAlerts","alert","propertyData","sevenDaysAgo","analyticsData","analyticsError","byType","existing","byMethod","dailyTrend","Mail","Smartphone","ReportGenerator","selectedOwner","setSelectedOwner","setReportType","owners","setOwners","loadOwners","uniqueOwners","handleGenerateAndSend","owner","Send","ILLUSTRATIONS","IllustrationGenerator","generating","setGenerating","currentIllustration","setCurrentIllustration","generatedImages","setGeneratedImages","generateAllIllustrations","illustration","downloadImage","imageUrl","downloadAllImages","ill","AdminDashboard","pendingCertifications","setPendingCertifications","openDisputes","setOpenDisputes","pendingProperties","setPendingProperties","overdueApplications","setOverdueApplications","fetchOpenDisputes","openCount","fetchPendingProperties","fetchOverdueApplications","leasesChannel","disputesChannel","Navigate","useRequireRole","redirectTo","CertificationStats","totalCertified","totalRejected","totalPending","processingTimes","requested","avgProcessingDays","thisMonthCertified","rejectionNotes","reasonCounts","note","topRejectionReasons","AdminCertifications","selectedTab","setSelectedTab"],"ignoreList":[],"sources":["../../src/services/logger.ts","../../src/hooks/use-toast.ts","../../src/assets/illustrations/ivorian/illustrationPaths.ts","../../src/lib/utils.ts","../../src/components/ui/tooltip.tsx","../../src/lib/supabase.ts","../../src/hooks/useAuth.tsx","../../src/components/ui/alert.tsx","../../src/components/ui/button.tsx","../../src/components/ui/input.tsx","../../src/components/ui/scroll-area.tsx","../../src/components/ui/avatar.tsx","../../src/hooks/use-mobile.tsx","../../src/hooks/useNotifications.ts","../../src/hooks/useContrastMode.ts","../../src/components/ui/badge.tsx","../../src/components/ui/card.tsx","../../src/components/ui/skeleton.tsx","../../src/components/ui/separator.tsx","../../src/components/ui/sheet.tsx","../../src/components/ui/sidebar.tsx","../../src/hooks/usePermissions.tsx","../../src/assets/logo/mon-toit-logo.png","../../src/components/ui/dropdown-menu.tsx","../../src/hooks/useAgencyMandates.ts","../../src/components/ui/tabs.tsx","../../src/components/NotificationBell.tsx","../../src/components/admin/CertificationNotificationBadge.tsx","../../src/components/navigation/MobileMenu.tsx","../../src/components/navigation/RoleBadge.tsx","../../src/components/Navbar.tsx","../../src/components/Footer.tsx","../../src/components/ui/select.tsx","../../src/components/ui/dialog.tsx","../../src/constants/index.ts","../../src/components/ui/label.tsx","../../src/components/ui/checkbox.tsx","../../src/components/ui/textarea.tsx","../../src/components/ui/switch.tsx","../../src/components/ui/progress.tsx","../../src/components/ui/alert-dialog.tsx","../../src/lib/errorHandler.ts","../../src/components/ui/sticky-header.tsx","../../src/components/admin/AdminSidebar.tsx","../../src/components/admin/AdminStats.tsx","../../src/components/ui/table.tsx","../../src/components/ui/radio-group.tsx","../../src/components/admin/AdminProperties.tsx","../../src/components/admin/AdminUsers.tsx","../../src/components/ui/ansut-certified-badge.tsx","../../src/components/admin/LeaseCertificationReview.tsx","../../src/components/admin/AdminLeases.tsx","../../src/components/admin/PlatformAnalytics.tsx","../../src/components/admin/DisputeTimeline.tsx","../../src/components/admin/DisputeManager.tsx","../../src/components/admin/AdminVerificationStats.tsx","../../src/components/admin/AdminVerificationQueue.tsx","../../src/components/admin/ReviewModeration.tsx","../../src/components/ui/popover.tsx","../../src/components/ui/calendar.tsx","../../src/components/admin/AdvancedReporting.tsx","../../src/components/admin/LeaseCertificationQueue.tsx","../../src/components/admin/DataTable.tsx","../../src/components/ui/pagination.tsx","../../src/components/admin/AuditLogViewer.tsx","../../src/components/admin/LeaseTemplateManager.tsx","../../src/components/admin/PromoteToSuperAdmin.tsx","../../src/components/admin/SensitiveDataAccessMonitor.tsx","../../src/hooks/useMfaCompliance.tsx","../../src/components/admin/EnhancedMfaSecurityMonitor.tsx","../../src/components/admin/ProcessingConfigPanel.tsx","../../src/components/admin/ProcessingAnalytics.tsx","../../src/components/admin/SeedDemoDataButton.tsx","../../src/components/admin/ElectronicSignaturesDashboard.tsx","../../src/components/admin/CertificateManager.tsx","../../src/components/admin/PropertyAlertsMonitor.tsx","../../src/components/admin/ReportGenerator.tsx","../../src/components/admin/IllustrationGenerator.tsx","../../src/pages/AdminDashboard.tsx","../../src/hooks/useRequireRole.tsx","../../src/components/admin/CertificationStats.tsx","../../src/pages/AdminCertifications.tsx"],"sourcesContent":["/**\n * Centralized logging service for Mon Toit platform\n * \n * Replaces direct console.* calls with structured logging that:\n * - Provides consistent log formatting with timestamps\n * - Sends logs to Sentry in production for monitoring\n * - Allows environment-specific behavior (dev vs production)\n * - Prevents sensitive data leaks in production logs\n * \n * @example\n * import { logger } from '@/services/logger';\n * \n * logger.error('Failed to fetch properties', { userId: '123', endpoint: '/api/properties' });\n * logger.logError(error, { context: 'PropertyCard', action: 'delete' });\n */\n\nimport * as Sentry from \"@sentry/react\";\n\ntype LogLevel = 'error' | 'warn' | 'info' | 'debug';\n\ninterface LogContext {\n  [key: string]: unknown;\n}\n\nclass Logger {\n  private isDevelopment = import.meta.env.DEV;\n\n  private formatMessage(level: LogLevel, message: string, context?: LogContext): string {\n    const timestamp = new Date().toISOString();\n    return `[${timestamp}] [${level.toUpperCase()}] ${message}`;\n  }\n\n  error(message: string, context?: LogContext): void {\n    const formattedMessage = this.formatMessage('error', message, context);\n    \n    if (this.isDevelopment) {\n      console.error(formattedMessage, context || '');\n    } else {\n      // Send to Sentry in production\n      Sentry.captureException(new Error(message), {\n        level: 'error',\n        extra: context,\n      });\n      console.error(formattedMessage, context || '');\n    }\n  }\n\n  warn(message: string, context?: LogContext): void {\n    const formattedMessage = this.formatMessage('warn', message, context);\n    \n    if (this.isDevelopment) {\n      console.warn(formattedMessage, context || '');\n    } else {\n      // Send warnings as breadcrumbs to Sentry\n      Sentry.addBreadcrumb({\n        message,\n        level: 'warning',\n        data: context,\n      });\n      console.warn(formattedMessage, context || '');\n    }\n  }\n\n  info(message: string, context?: LogContext): void {\n    const formattedMessage = this.formatMessage('info', message, context);\n    \n    if (this.isDevelopment) {\n      console.info(formattedMessage, context || '');\n    }\n  }\n\n  debug(message: string, context?: LogContext): void {\n    if (this.isDevelopment) {\n      const formattedMessage = this.formatMessage('debug', message, context);\n      console.debug(formattedMessage, context || '');\n    }\n  }\n\n  /**\n   * Parse and log any error type with full context\n   */\n  logError(error: unknown, context?: LogContext): void {\n    const errorInfo = this.parseError(error);\n    \n    // Send to Sentry in production with full error object\n    if (!this.isDevelopment) {\n      Sentry.captureException(error, {\n        level: 'error',\n        tags: {\n          errorType: errorInfo.type,\n          errorCode: errorInfo.code,\n        },\n        extra: {\n          ...context,\n          stack: errorInfo.stack,\n          url: typeof window !== 'undefined' ? window.location.href : undefined,\n        },\n      });\n    }\n    \n    this.error(errorInfo.message, {\n      ...context,\n      stack: errorInfo.stack,\n      code: errorInfo.code,\n      type: errorInfo.type,\n      url: typeof window !== 'undefined' ? window.location.href : undefined,\n    });\n  }\n\n  /**\n   * Parse error from various formats\n   */\n  private parseError(error: unknown): { \n    message: string; \n    stack?: string; \n    code?: string; \n    type: string;\n  } {\n    if (error instanceof Error) {\n      return { \n        message: error.message, \n        stack: error.stack,\n        code: (error as any).code,\n        type: error.name,\n      };\n    }\n    \n    if (typeof error === 'string') {\n      return { message: error, type: 'string' };\n    }\n    \n    if (error && typeof error === 'object') {\n      const err = error as any;\n      return {\n        message: err.message || err.error_description || JSON.stringify(error),\n        code: err.code || err.error,\n        type: 'object',\n      };\n    }\n    \n    return { message: 'Unknown error', type: 'unknown' };\n  }\n}\n\nexport const logger = new Logger();\n","import * as React from \"react\";\n\nimport type { ToastActionElement, ToastProps } from \"@/components/ui/toast\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),\n      };\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t,\n        ),\n      };\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  };\n}\n\nexport { useToast, toast };\n","/**\n * Mapping des illustrations ivoiriennes générées par l'IA\n * Ces illustrations sont utilisées à travers l'application pour enrichir l'expérience visuelle\n */\n\nexport const illustrationPaths = {\n  // Famille et maison ivoirienne - Hero, Features\n  'ivorian-family-house': '/src/assets/illustrations/ivorian/ivorian-family-house.png',\n  \n  // Visite d'appartement - Features, Explorer\n  'apartment-visit': '/src/assets/illustrations/ivorian/apartment-visit.png',\n  \n  // Agent immobilier - Features, Certification\n  'real-estate-agent': '/src/assets/illustrations/ivorian/real-estate-agent.png',\n  \n  // Quartier d'Abidjan - Explorer, HowItWorks\n  'abidjan-neighborhood': '/src/assets/illustrations/ivorian/abidjan-neighborhood.png',\n  \n  // Salon moderne - PropertyCard, Explorer\n  'modern-living-room': '/src/assets/illustrations/ivorian/modern-living-room.png',\n  \n  // Skyline d'Abidjan - Hero alternatif, Footer\n  'abidjan-skyline': '/src/assets/illustrations/ivorian/abidjan-skyline.png',\n  \n  // Remise de clés - Testimonials, Success page\n  'key-handover': '/src/assets/illustrations/ivorian/key-handover.png',\n  \n  // Famille en déménagement - HowItWorks, Onboarding\n  'family-moving': '/src/assets/illustrations/ivorian/family-moving.png',\n  \n  // Réunion copropriété - Admin, Agence Dashboard\n  'co-ownership-meeting': '/src/assets/illustrations/ivorian/co-ownership-meeting.png',\n  \n  // Certification ANSUT - Certification, CertificationBanner\n  'certification-ansut-illustration': '/src/assets/illustrations/ivorian/certification-ansut-illustration.png',\n} as const;\n\nexport type IllustrationKey = keyof typeof illustrationPaths;\n\n/**\n * Helper pour obtenir le chemin d'une illustration\n * @param key - La clé de l'illustration\n * @returns Le chemin de l'illustration ou undefined si non trouvée\n */\nexport const getIllustrationPath = (key: IllustrationKey): string | undefined => {\n  return illustrationPaths[key];\n};\n\n/**\n * Helper pour obtenir le chemin optimisé d'une illustration (WebP)\n * @param key - La clé de l'illustration\n * @param format - Format souhaité ('webp' ou 'png')\n * @returns Le chemin optimisé de l'illustration ou undefined si non trouvée\n */\nexport const getOptimizedIllustrationPath = (\n  key: IllustrationKey, \n  format: 'webp' | 'png' = 'webp'\n): string | undefined => {\n  const path = illustrationPaths[key];\n  if (!path) return undefined;\n  \n  if (format === 'webp') {\n    return path.replace('.png', '.webp');\n  }\n  return path;\n};\n\n/**\n * Vérifier si une illustration existe\n * @param key - La clé de l'illustration\n */\nexport const hasIllustration = (key: IllustrationKey): boolean => {\n  return key in illustrationPaths;\n};\n","import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nimport { type IllustrationKey, illustrationPaths } from \"@/assets/illustrations/ivorian/illustrationPaths\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Get the path of an illustration by key\n * @param name - The illustration key\n * @returns The illustration path or undefined if not found\n */\nexport function getIllustrationPath(name: IllustrationKey): string | undefined {\n  return illustrationPaths[name];\n}\n","import * as React from \"react\";\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst TooltipProvider = TooltipPrimitive.Provider;\n\nconst Tooltip = TooltipPrimitive.Root;\n\nconst TooltipTrigger = TooltipPrimitive.Trigger;\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nTooltipContent.displayName = TooltipPrimitive.Content.displayName;\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider };\n","import { createClient } from '@supabase/supabase-js';\nimport type { Database } from '@/integrations/supabase/types';\n\n// Hardcoded values as fallback since Vite env vars aren't loading properly\nconst SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || 'https://btxhuqtirylvkgvoutoc.supabase.co';\nconst SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ0eGh1cXRpcnlsdmtndm91dG9jIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk1ODA0MDcsImV4cCI6MjA3NTE1NjQwN30.yjG6Xp3y6ZiJLRM1AInfP84U1AAL333u80iRXGnSnc4';\n\nexport const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {\n  auth: {\n    storage: localStorage,\n    persistSession: true,\n    autoRefreshToken: true,\n  }\n});\n","import { useState, useEffect, createContext, useContext } from 'react';\nimport { User, Session, AuthError } from '@supabase/supabase-js';\nimport { supabase } from '@/lib/supabase';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from '@/hooks/use-toast';\nimport { logger } from '@/services/logger';\nimport type { Profile } from '@/types';\n\ninterface AuthContextType {\n  user: User | null;\n  session: Session | null;\n  profile: Profile | null;\n  roles: string[];\n  loading: boolean;\n  signUp: (email: string, password: string, fullName: string, userType: string) => Promise<{ error: AuthError | null }>;\n  signIn: (email: string, password: string) => Promise<{ error: AuthError | null }>;\n  signOut: () => Promise<void>;\n  refreshProfile: () => Promise<void>;\n  hasRole: (role: string) => boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [profile, setProfile] = useState<Profile | null>(null);\n  const [roles, setRoles] = useState<string[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchProfile = async (userId: string) => {\n    logger.info('Fetching profile for user', { userId });\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', userId)\n      .single();\n\n    if (error) {\n      logger.error('Error fetching profile', { error, userId });\n      return null;\n    }\n    logger.info('Profile fetched successfully', { userId });\n    return data;\n  };\n\n  const fetchUserRoles = async (userId: string) => {\n    logger.info('Fetching roles for user', { userId });\n    const { data, error } = await supabase\n      .from('user_roles')\n      .select('role')\n      .eq('user_id', userId);\n\n    if (error) {\n      logger.error('Error fetching roles', { error, userId });\n      return [];\n    }\n    logger.info('Roles fetched successfully', { userId, roles: data });\n    return data?.map(r => r.role) || [];\n  };\n\n  const refreshProfile = async () => {\n    if (user) {\n      const profileData = await fetchProfile(user.id);\n      setProfile(profileData);\n      const userRoles = await fetchUserRoles(user.id);\n      setRoles(userRoles);\n    }\n  };\n\n  useEffect(() => {\n    logger.info('Setting up auth listener');\n    // Set up auth state listener FIRST\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        logger.info('Auth state changed', { event, hasSession: !!session });\n        setSession(session);\n        setUser(session?.user ?? null);\n        \n        if (session?.user) {\n          // Defer profile fetching to avoid deadlock\n          setTimeout(async () => {\n            const profileData = await fetchProfile(session.user.id);\n            setProfile(profileData);\n            const userRoles = await fetchUserRoles(session.user.id);\n            setRoles(userRoles);\n          }, 0);\n        } else {\n          setProfile(null);\n          setRoles([]);\n        }\n      }\n    );\n\n    // THEN check for existing session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      logger.info('Initial session check', { hasSession: !!session });\n      setSession(session);\n      setUser(session?.user ?? null);\n      \n      if (session?.user) {\n        setTimeout(async () => {\n          const profileData = await fetchProfile(session.user.id);\n          setProfile(profileData);\n          const userRoles = await fetchUserRoles(session.user.id);\n          setRoles(userRoles);\n          setLoading(false);\n          logger.info('Auth loading complete');\n        }, 0);\n      } else {\n        setLoading(false);\n        logger.info('No session, loading complete');\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signUp = async (email: string, password: string, fullName: string, userType: string) => {\n    const redirectUrl = `${window.location.origin}/`;\n    \n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        emailRedirectTo: redirectUrl,\n        data: {\n          full_name: fullName,\n          user_type: userType,\n        }\n      }\n    });\n\n    if (error) {\n      toast({\n        title: \"Erreur d'inscription\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    } else {\n      toast({\n        title: \"Inscription réussie\",\n        description: \"Votre compte a été créé avec succès !\",\n      });\n    }\n\n    return { error };\n  };\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n\n    if (error) {\n      toast({\n        title: \"Erreur de connexion\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    } else {\n      toast({\n        title: \"Connexion réussie\",\n        description: \"Bienvenue sur Mon Toit !\",\n      });\n    }\n\n    return { error };\n  };\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (!error) {\n      setRoles([]);\n      \n      // ✅ SÉCURITÉ : Nettoyer le cache lors de la déconnexion\n      const { clearCacheOnLogout } = await import('@/lib/queryClient');\n      clearCacheOnLogout();\n      \n      toast({\n        title: \"Déconnexion\",\n        description: \"À bientôt sur Mon Toit !\",\n      });\n    }\n  };\n\n  const hasRole = (role: string): boolean => {\n    return roles.includes(role);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, session, profile, roles, loading, signUp, signIn, signOut, refreshProfile, hasRole }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n","import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive: \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div ref={ref} role=\"alert\" className={cn(alertVariants({ variant }), className)} {...props} />\n));\nAlert.displayName = \"Alert\";\n\nconst AlertTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h5 ref={ref} className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)} {...props} />\n  ),\n);\nAlertTitle.displayName = \"AlertTitle\";\n\nconst AlertDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"text-sm [&_p]:leading-relaxed\", className)} {...props} />\n  ),\n);\nAlertDescription.displayName = \"AlertDescription\";\n\nexport { Alert, AlertTitle, AlertDescription };\n","import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-all duration-200 hover:scale-105 active:scale-95 cursor-pointer focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 disabled:hover:scale-100 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90 shadow-sm\",\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline: \"border-2 border-primary bg-background text-primary hover:bg-primary hover:text-white\",\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/90\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        \"primary-gradient\": \"bg-gradient-to-r from-secondary via-secondary-700 to-secondary bg-[length:200%_auto] text-white hover:shadow-xl transition-all duration-300 animate-gradient\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        xl: \"h-14 rounded-lg px-10 text-base\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />;\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground transition-all duration-200 focus-visible:outline-none focus-visible:border-2 focus-visible:border-primary focus-visible:ring-2 focus-visible:ring-primary/20 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n","import * as React from \"react\";\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root ref={ref} className={cn(\"relative overflow-hidden\", className)} {...props}>\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">{children}</ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n));\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName;\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" && \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" && \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className,\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n));\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName;\n\nexport { ScrollArea, ScrollBar };\n","import * as React from \"react\";\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\", className)}\n    {...props}\n  />\n));\nAvatar.displayName = AvatarPrimitive.Root.displayName;\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image ref={ref} className={cn(\"aspect-square h-full w-full\", className)} {...props} />\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\"flex h-full w-full items-center justify-center rounded-full bg-muted\", className)}\n    {...props}\n  />\n));\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nexport { Avatar, AvatarImage, AvatarFallback };\n","import * as React from \"react\";\n\nconst MOBILE_BREAKPOINT = 768;\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined);\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    };\n    mql.addEventListener(\"change\", onChange);\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    return () => mql.removeEventListener(\"change\", onChange);\n  }, []);\n\n  return !!isMobile;\n}\n","import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from './useAuth';\nimport { logger } from '@/services/logger';\n\n// Local notification type for the hook\ninterface NotificationData {\n  id: string;\n  type: string;\n  title: string;\n  message: string | null;\n  link: string | null;\n  is_read: boolean;\n  created_at: string;\n  metadata: any;\n  read_at: string | null;\n  action_url: string | null;\n  category: string;\n}\n\nexport const useNotifications = () => {\n  const { user } = useAuth();\n  const [notifications, setNotifications] = useState<NotificationData[]>([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!user) {\n      setNotifications([]);\n      setUnreadCount(0);\n      setLoading(false);\n      return;\n    }\n\n    fetchNotifications();\n\n    // Realtime subscription\n    const channel = supabase\n      .channel('notifications-realtime')\n      .on(\n        'postgres_changes',\n        {\n          event: 'INSERT',\n          schema: 'public',\n          table: 'notifications',\n          filter: `user_id=eq.${user.id}`,\n        },\n        (payload) => {\n          const newNotification = payload.new as NotificationData;\n          setNotifications((prev) => [newNotification, ...prev]);\n          setUnreadCount((prev) => prev + 1);\n          \n          // Show browser notification if permitted\n          if (Notification.permission === 'granted') {\n            new Notification(newNotification.title, {\n              body: newNotification.message || '',\n              icon: '/favicon.ico'\n            });\n          }\n        }\n      )\n      .on(\n        'postgres_changes',\n        {\n          event: 'UPDATE',\n          schema: 'public',\n          table: 'notifications',\n          filter: `user_id=eq.${user.id}`,\n        },\n        (payload) => {\n          const updatedNotification = payload.new as NotificationData;\n          setNotifications((prev) =>\n            prev.map((notif) =>\n              notif.id === updatedNotification.id ? updatedNotification : notif\n            )\n          );\n          recalculateUnreadCount();\n        }\n      )\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [user]);\n\n  const fetchNotifications = async () => {\n    if (!user) return;\n\n    try {\n      const { data, error } = await supabase\n        .from('notifications')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false })\n        .limit(50);\n\n      if (error) throw error;\n\n      setNotifications(data || []);\n      setUnreadCount(data?.filter((n) => !n.is_read).length || 0);\n    } catch (error) {\n      logger.logError(error, { context: 'useNotifications', action: 'fetch' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const recalculateUnreadCount = async () => {\n    if (!user) return;\n\n    const { count } = await supabase\n      .from('notifications')\n      .select('*', { count: 'exact', head: true })\n      .eq('user_id', user.id)\n      .eq('is_read', false);\n\n    setUnreadCount(count || 0);\n  };\n\n  const markAsRead = async (notificationId: string) => {\n    try {\n      const { error } = await supabase\n        .from('notifications')\n        .update({ \n          is_read: true,\n          read_at: new Date().toISOString()\n        })\n        .eq('id', notificationId);\n\n      if (error) throw error;\n\n      setNotifications((prev) =>\n        prev.map((notif) =>\n          notif.id === notificationId \n            ? { ...notif, is_read: true, read_at: new Date().toISOString() } \n            : notif\n        )\n      );\n      setUnreadCount((prev) => Math.max(0, prev - 1));\n    } catch (error) {\n      logger.logError(error, { context: 'useNotifications', action: 'markAsRead' });\n    }\n  };\n\n  const markAllAsRead = async () => {\n    if (!user) return;\n\n    try {\n      const { error } = await supabase\n        .from('notifications')\n        .update({ \n          is_read: true,\n          read_at: new Date().toISOString()\n        })\n        .eq('user_id', user.id)\n        .eq('is_read', false);\n\n      if (error) throw error;\n\n      const now = new Date().toISOString();\n      setNotifications((prev) =>\n        prev.map((notif) => ({ ...notif, is_read: true, read_at: now }))\n      );\n      setUnreadCount(0);\n    } catch (error) {\n      logger.logError(error, { context: 'useNotifications', action: 'markAllAsRead' });\n    }\n  };\n\n  const requestPermission = async () => {\n    if ('Notification' in window && Notification.permission === 'default') {\n      await Notification.requestPermission();\n    }\n  };\n\n  return {\n    notifications,\n    unreadCount,\n    loading,\n    markAsRead,\n    markAllAsRead,\n    requestPermission,\n    refetch: fetchNotifications,\n  };\n};\n","import { useState, useEffect } from 'react';\n\n/**\n * Hook pour détecter si l'utilisateur préfère un mode high contrast\n * Utile pour accessibilité visuelle (malvoyants)\n */\nexport const useContrastMode = () => {\n  const [isHighContrast, setIsHighContrast] = useState(false);\n\n  useEffect(() => {\n    // Détecter la préférence système\n    const mediaQuery = window.matchMedia('(prefers-contrast: high)');\n    setIsHighContrast(mediaQuery.matches);\n\n    // Écouter les changements\n    const handleChange = (e: MediaQueryListEvent) => {\n      setIsHighContrast(e.matches);\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  return isHighContrast;\n};\n","import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { useContrastMode } from \"@/hooks/useContrastMode\";\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default: \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive: \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  const isHighContrast = useContrastMode();\n  \n  return (\n    <div \n      className={cn(\n        badgeVariants({ variant }), \n        isHighContrast && \"border-2 font-bold\",\n        className\n      )} \n      {...props} \n    />\n  );\n}\n\nexport { Badge, badgeVariants };\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'form';\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant = 'default', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n        variant === 'form' && \"form-card\",\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n  ),\n);\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h3 ref={ref} className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)} {...props} />\n  ),\n);\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, ...props }, ref) => (\n    <p ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n  ),\n);\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />,\n);\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"flex items-center p-6 pt-0\", className)} {...props} />\n  ),\n);\nCardFooter.displayName = \"CardFooter\";\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n","import { cn } from \"@/lib/utils\";\n\nfunction Skeleton({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return <div className={cn(\"animate-pulse rounded-md bg-muted\", className)} {...props} />;\n}\n\nexport { Skeleton };\n","import * as React from \"react\";\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(({ className, orientation = \"horizontal\", decorative = true, ...props }, ref) => (\n  <SeparatorPrimitive.Root\n    ref={ref}\n    decorative={decorative}\n    orientation={orientation}\n    className={cn(\"shrink-0 bg-border\", orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\", className)}\n    {...props}\n  />\n));\nSeparator.displayName = SeparatorPrimitive.Root.displayName;\n\nexport { Separator };\n","import * as SheetPrimitive from \"@radix-ui/react-dialog\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { X } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Sheet = SheetPrimitive.Root;\n\nconst SheetTrigger = SheetPrimitive.Trigger;\n\nconst SheetClose = SheetPrimitive.Close;\n\nconst SheetPortal = SheetPrimitive.Portal;\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className,\n    )}\n    {...props}\n    ref={ref}\n  />\n));\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName;\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  },\n);\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<React.ElementRef<typeof SheetPrimitive.Content>, SheetContentProps>(\n  ({ side = \"right\", className, children, ...props }, ref) => (\n    <SheetPortal>\n      <SheetOverlay />\n      <SheetPrimitive.Content ref={ref} className={cn(sheetVariants({ side }), className)} {...props}>\n        {children}\n        <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity data-[state=open]:bg-secondary hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\">\n          <X className=\"h-4 w-4\" />\n          <span className=\"sr-only\">Close</span>\n        </SheetPrimitive.Close>\n      </SheetPrimitive.Content>\n    </SheetPortal>\n  ),\n);\nSheetContent.displayName = SheetPrimitive.Content.displayName;\n\nconst SheetHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"flex flex-col space-y-2 text-center sm:text-left\", className)} {...props} />\n);\nSheetHeader.displayName = \"SheetHeader\";\n\nconst SheetFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", className)} {...props} />\n);\nSheetFooter.displayName = \"SheetFooter\";\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title ref={ref} className={cn(\"text-lg font-semibold text-foreground\", className)} {...props} />\n));\nSheetTitle.displayName = SheetPrimitive.Title.displayName;\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n));\nSheetDescription.displayName = SheetPrimitive.Description.displayName;\n\nexport {\n  Sheet,\n  SheetClose,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetOverlay,\n  SheetPortal,\n  SheetTitle,\n  SheetTrigger,\n};\n","import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { VariantProps, cva } from \"class-variance-authority\";\nimport { PanelLeft } from \"lucide-react\";\n\nimport { useIsMobile } from \"@/hooks/use-mobile\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\";\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;\nconst SIDEBAR_WIDTH = \"16rem\";\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\";\nconst SIDEBAR_WIDTH_ICON = \"3rem\";\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\";\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\";\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  openMobile: boolean;\n  setOpenMobile: (open: boolean) => void;\n  isMobile: boolean;\n  toggleSidebar: () => void;\n};\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null);\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext);\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\");\n  }\n\n  return context;\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean;\n    open?: boolean;\n    onOpenChange?: (open: boolean) => void;\n  }\n>(({ defaultOpen = true, open: openProp, onOpenChange: setOpenProp, className, style, children, ...props }, ref) => {\n  const isMobile = useIsMobile();\n  const [openMobile, setOpenMobile] = React.useState(false);\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen);\n  const open = openProp ?? _open;\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value;\n      if (setOpenProp) {\n        setOpenProp(openState);\n      } else {\n        _setOpen(openState);\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\n    },\n    [setOpenProp, open],\n  );\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open);\n  }, [isMobile, setOpen, setOpenMobile]);\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === SIDEBAR_KEYBOARD_SHORTCUT && (event.metaKey || event.ctrlKey)) {\n        event.preventDefault();\n        toggleSidebar();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [toggleSidebar]);\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\";\n\n  const contextValue = React.useMemo<SidebarContext>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar],\n  );\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\", className)}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  );\n});\nSidebarProvider.displayName = \"SidebarProvider\";\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\";\n    variant?: \"sidebar\" | \"floating\" | \"inset\";\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\";\n  }\n>(({ side = \"left\", variant = \"sidebar\", collapsible = \"offcanvas\", className, children, ...props }, ref) => {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar();\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        className={cn(\"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\", className)}\n        ref={ref}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"group peer hidden text-sidebar-foreground md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        className={cn(\n          \"relative h-svh w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n            : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\",\n        )}\n      />\n      <div\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className,\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n});\nSidebar.displayName = \"Sidebar\";\n\nconst SidebarTrigger = React.forwardRef<React.ElementRef<typeof Button>, React.ComponentProps<typeof Button>>(\n  ({ className, onClick, ...props }, ref) => {\n    const { toggleSidebar } = useSidebar();\n\n    return (\n      <Button\n        ref={ref}\n        data-sidebar=\"trigger\"\n        variant=\"ghost\"\n        size=\"icon\"\n        className={cn(\"h-7 w-7\", className)}\n        onClick={(event) => {\n          onClick?.(event);\n          toggleSidebar();\n        }}\n        {...props}\n      >\n        <PanelLeft />\n        <span className=\"sr-only\">Toggle Sidebar</span>\n      </Button>\n    );\n  },\n);\nSidebarTrigger.displayName = \"SidebarTrigger\";\n\nconst SidebarRail = React.forwardRef<HTMLButtonElement, React.ComponentProps<\"button\">>(\n  ({ className, ...props }, ref) => {\n    const { toggleSidebar } = useSidebar();\n\n    return (\n      <button\n        ref={ref}\n        data-sidebar=\"rail\"\n        aria-label=\"Toggle Sidebar\"\n        tabIndex={-1}\n        onClick={toggleSidebar}\n        title=\"Toggle Sidebar\"\n        className={cn(\n          \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] group-data-[side=left]:-right-4 group-data-[side=right]:left-0 hover:after:bg-sidebar-border sm:flex\",\n          \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n          \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n          \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n          \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n          \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n          className,\n        )}\n        {...props}\n      />\n    );\n  },\n);\nSidebarRail.displayName = \"SidebarRail\";\n\nconst SidebarInset = React.forwardRef<HTMLDivElement, React.ComponentProps<\"main\">>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nSidebarInset.displayName = \"SidebarInset\";\n\nconst SidebarInput = React.forwardRef<React.ElementRef<typeof Input>, React.ComponentProps<typeof Input>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <Input\n        ref={ref}\n        data-sidebar=\"input\"\n        className={cn(\n          \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n          className,\n        )}\n        {...props}\n      />\n    );\n  },\n);\nSidebarInput.displayName = \"SidebarInput\";\n\nconst SidebarHeader = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(({ className, ...props }, ref) => {\n  return <div ref={ref} data-sidebar=\"header\" className={cn(\"flex flex-col gap-2 p-2\", className)} {...props} />;\n});\nSidebarHeader.displayName = \"SidebarHeader\";\n\nconst SidebarFooter = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(({ className, ...props }, ref) => {\n  return <div ref={ref} data-sidebar=\"footer\" className={cn(\"flex flex-col gap-2 p-2\", className)} {...props} />;\n});\nSidebarFooter.displayName = \"SidebarFooter\";\n\nconst SidebarSeparator = React.forwardRef<React.ElementRef<typeof Separator>, React.ComponentProps<typeof Separator>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <Separator\n        ref={ref}\n        data-sidebar=\"separator\"\n        className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n        {...props}\n      />\n    );\n  },\n);\nSidebarSeparator.displayName = \"SidebarSeparator\";\n\nconst SidebarContent = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nSidebarContent.displayName = \"SidebarContent\";\n\nconst SidebarGroup = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  );\n});\nSidebarGroup.displayName = \"SidebarGroup\";\n\nconst SidebarGroupLabel = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\"> & { asChild?: boolean }>(\n  ({ className, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"div\";\n\n    return (\n      <Comp\n        ref={ref}\n        data-sidebar=\"group-label\"\n        className={cn(\n          \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n          \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n          className,\n        )}\n        {...props}\n      />\n    );\n  },\n);\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\";\n\nconst SidebarGroupAction = React.forwardRef<HTMLButtonElement, React.ComponentProps<\"button\"> & { asChild?: boolean }>(\n  ({ className, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n\n    return (\n      <Comp\n        ref={ref}\n        data-sidebar=\"group-action\"\n        className={cn(\n          \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n          // Increases the hit area of the button on mobile.\n          \"after:absolute after:-inset-2 after:md:hidden\",\n          \"group-data-[collapsible=icon]:hidden\",\n          className,\n        )}\n        {...props}\n      />\n    );\n  },\n);\nSidebarGroupAction.displayName = \"SidebarGroupAction\";\n\nconst SidebarGroupContent = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} data-sidebar=\"group-content\" className={cn(\"w-full text-sm\", className)} {...props} />\n  ),\n);\nSidebarGroupContent.displayName = \"SidebarGroupContent\";\n\nconst SidebarMenu = React.forwardRef<HTMLUListElement, React.ComponentProps<\"ul\">>(({ className, ...props }, ref) => (\n  <ul ref={ref} data-sidebar=\"menu\" className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)} {...props} />\n));\nSidebarMenu.displayName = \"SidebarMenu\";\n\nconst SidebarMenuItem = React.forwardRef<HTMLLIElement, React.ComponentProps<\"li\">>(({ className, ...props }, ref) => (\n  <li ref={ref} data-sidebar=\"menu-item\" className={cn(\"group/menu-item relative\", className)} {...props} />\n));\nSidebarMenuItem.displayName = \"SidebarMenuItem\";\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean;\n    isActive?: boolean;\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>;\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(({ asChild = false, isActive = false, variant = \"default\", size = \"default\", tooltip, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\";\n  const { isMobile, state } = useSidebar();\n\n  const button = (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  );\n\n  if (!tooltip) {\n    return button;\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    };\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent side=\"right\" align=\"center\" hidden={state !== \"collapsed\" || isMobile} {...tooltip} />\n    </Tooltip>\n  );\n});\nSidebarMenuButton.displayName = \"SidebarMenuButton\";\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean;\n    showOnHover?: boolean;\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform peer-hover/menu-button:text-sidebar-accent-foreground hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nSidebarMenuAction.displayName = \"SidebarMenuAction\";\n\nconst SidebarMenuBadge = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\";\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean;\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`;\n  }, []);\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && <Skeleton className=\"size-4 rounded-md\" data-sidebar=\"menu-skeleton-icon\" />}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  );\n});\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\";\n\nconst SidebarMenuSub = React.forwardRef<HTMLUListElement, React.ComponentProps<\"ul\">>(\n  ({ className, ...props }, ref) => (\n    <ul\n      ref={ref}\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nSidebarMenuSub.displayName = \"SidebarMenuSub\";\n\nconst SidebarMenuSubItem = React.forwardRef<HTMLLIElement, React.ComponentProps<\"li\">>(({ ...props }, ref) => (\n  <li ref={ref} {...props} />\n));\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\";\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean;\n    size?: \"sm\" | \"md\";\n    isActive?: boolean;\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\";\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring aria-disabled:pointer-events-none aria-disabled:opacity-50 hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\";\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n};\n","import { useAuth } from './useAuth';\n\n/**\n * Hook centralisé pour gérer toutes les permissions de l'application\n * Combine les vérifications de rôles et de user_type\n */\nexport const usePermissions = () => {\n  const { user, profile, roles, hasRole } = useAuth();\n\n  const permissions = {\n    // Permissions admin\n    canAccessAdminDashboard: hasRole('admin') || hasRole('super_admin'),\n    canManageUsers: hasRole('super_admin'),\n    canModerateProperties: hasRole('admin') || hasRole('super_admin'),\n    canCertifyLeases: hasRole('admin') || hasRole('super_admin'),\n    canResolveDisputes: hasRole('admin') || hasRole('super_admin'),\n    canViewAuditLogs: hasRole('admin') || hasRole('super_admin'),\n    canPromoteToSuperAdmin: hasRole('super_admin'),\n    \n    // Permissions tiers de confiance\n    canAccessTiersDashboard: hasRole('tiers_de_confiance'),\n    canValidateDossiers: hasRole('tiers_de_confiance'),\n    \n    // Permissions propriétaire/agence\n    canManageProperties: profile?.user_type === 'proprietaire' || profile?.user_type === 'agence',\n    canCreateProperty: profile?.user_type === 'proprietaire' || profile?.user_type === 'agence',\n    canViewApplications: profile?.user_type === 'proprietaire' || profile?.user_type === 'agence',\n    canCreateLease: profile?.user_type === 'proprietaire' || profile?.user_type === 'agence',\n    \n    // Permissions locataire\n    canApplyToProperties: profile?.user_type === 'locataire',\n    canSaveFavorites: profile?.user_type === 'locataire',\n    canViewRecommendations: profile?.user_type === 'locataire',\n    \n    // Permissions communes\n    isAuthenticated: !!user,\n    canSendMessages: !!user,\n    canLeaveReviews: !!user,\n    canUpdateProfile: !!user,\n  };\n\n  /**\n   * Vérifier si l'utilisateur peut modifier une propriété spécifique\n   */\n  const canEditProperty = (ownerId: string): boolean => {\n    if (!user || !profile) return false;\n    return permissions.canManageProperties && user.id === ownerId;\n  };\n\n  /**\n   * Vérifier si l'utilisateur peut accéder à une ressource\n   */\n  const canAccessResource = (resourceOwnerId: string): boolean => {\n    if (!user) return false;\n    return user.id === resourceOwnerId || permissions.canAccessAdminDashboard;\n  };\n\n  return {\n    ...permissions,\n    canEditProperty,\n    canAccessResource,\n    user,\n    profile,\n    roles,\n  };\n};\n","export default \"__VITE_ASSET__CYUSoTg1__\"","import * as React from \"react\";\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { Check, ChevronRight, Circle } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst DropdownMenu = DropdownMenuPrimitive.Root;\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[state=open]:bg-accent focus:bg-accent\",\n      inset && \"pl-8\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName;\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName;\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className,\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground\",\n      inset && \"pl-8\",\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground\",\n      className,\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName;\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", inset && \"pl-8\", className)}\n    {...props}\n  />\n));\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator ref={ref} className={cn(\"-mx-1 my-1 h-px bg-muted\", className)} {...props} />\n));\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\n\nconst DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {\n  return <span className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)} {...props} />;\n};\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\";\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n};\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from './useAuth';\nimport { toast } from '@/hooks/use-toast';\n\nexport interface AgencyMandate {\n  id: string;\n  agency_id: string;\n  owner_id: string;\n  property_id: string | null;\n  mandate_type: 'location' | 'gestion_complete' | 'vente';\n  commission_rate: number | null;\n  fixed_fee: number | null;\n  billing_frequency: 'mensuel' | 'trimestriel' | 'annuel' | 'par_transaction' | null;\n  permissions: {\n    can_view_properties: boolean;\n    can_edit_properties: boolean;\n    can_create_properties: boolean;\n    can_delete_properties: boolean;\n    can_view_applications: boolean;\n    can_manage_applications: boolean;\n    can_create_leases: boolean;\n    can_view_financials: boolean;\n    can_manage_maintenance: boolean;\n    can_communicate_tenants: boolean;\n    can_manage_documents: boolean;\n  };\n  start_date: string;\n  end_date: string | null;\n  status: 'pending' | 'active' | 'suspended' | 'terminated' | 'expired';\n  notes: string | null;\n  created_at: string;\n  updated_at: string;\n  accepted_at: string | null;\n  terminated_at: string | null;\n  terminated_by: string | null;\n  termination_reason: string | null;\n}\n\n/**\n * Hook pour gérer les mandats d'agence\n */\nexport const useAgencyMandates = () => {\n  const { user } = useAuth();\n  const queryClient = useQueryClient();\n\n  // Récupérer tous les mandats de l'utilisateur (agence ou propriétaire)\n  const { data: mandates = [], isLoading } = useQuery({\n    queryKey: ['agency-mandates', user?.id],\n    queryFn: async () => {\n      if (!user) return [];\n      \n      const { data, error } = await supabase\n        .from('agency_mandates')\n        .select('*')\n        .or(`agency_id.eq.${user.id},owner_id.eq.${user.id}`)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      return data as AgencyMandate[];\n    },\n    enabled: !!user,\n  });\n\n  // Créer un nouveau mandat (propriétaire invite une agence)\n  const createMandate = useMutation({\n    mutationFn: async (mandate: {\n      agency_id: string;\n      property_id?: string | null;\n      mandate_type: 'location' | 'gestion_complete' | 'vente';\n      commission_rate?: number;\n      fixed_fee?: number;\n      billing_frequency?: 'mensuel' | 'trimestriel' | 'annuel' | 'par_transaction';\n      permissions?: Partial<AgencyMandate['permissions']>;\n      start_date: string;\n      end_date?: string | null;\n      notes?: string;\n    }) => {\n      const { data, error } = await supabase\n        .from('agency_mandates')\n        .insert([{ ...mandate, owner_id: user?.id, status: 'pending' }])\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['agency-mandates'] });\n      toast({\n        title: \"Invitation envoyée\",\n        description: \"L'agence a été invitée à gérer vos biens\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Erreur\",\n        description: `Impossible d'envoyer l'invitation: ${error.message}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Accepter un mandat (agence)\n  const acceptMandate = useMutation({\n    mutationFn: async (mandateId: string) => {\n      const { data, error } = await supabase\n        .from('agency_mandates')\n        .update({ \n          status: 'active', \n          accepted_at: new Date().toISOString() \n        })\n        .eq('id', mandateId)\n        .eq('agency_id', user?.id)\n        .eq('status', 'pending')\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['agency-mandates'] });\n      queryClient.invalidateQueries({ queryKey: ['properties'] });\n      toast({\n        title: \"Mandat accepté\",\n        description: \"Vous pouvez maintenant gérer ces biens\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Erreur\",\n        description: `Impossible d'accepter le mandat: ${error.message}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Refuser un mandat (agence)\n  const refuseMandate = useMutation({\n    mutationFn: async ({ mandateId, reason }: { mandateId: string; reason?: string }) => {\n      const { data, error } = await supabase\n        .from('agency_mandates')\n        .update({ \n          status: 'terminated',\n          terminated_at: new Date().toISOString(),\n          terminated_by: user?.id,\n          termination_reason: reason || 'Refusé par l\\'agence'\n        })\n        .eq('id', mandateId)\n        .eq('agency_id', user?.id)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['agency-mandates'] });\n      toast({\n        title: \"Mandat refusé\",\n        description: \"Le mandat a été refusé\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Erreur\",\n        description: `Impossible de refuser le mandat: ${error.message}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Résilier un mandat (propriétaire ou agence)\n  const terminateMandate = useMutation({\n    mutationFn: async ({ mandateId, reason }: { mandateId: string; reason: string }) => {\n      const { data, error } = await supabase\n        .from('agency_mandates')\n        .update({ \n          status: 'terminated',\n          terminated_at: new Date().toISOString(),\n          terminated_by: user?.id,\n          termination_reason: reason\n        })\n        .eq('id', mandateId)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['agency-mandates'] });\n      queryClient.invalidateQueries({ queryKey: ['properties'] });\n      toast({\n        title: \"Mandat résilié\",\n        description: \"Le mandat a été résilié avec succès\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Erreur\",\n        description: `Impossible de résilier le mandat: ${error.message}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Suspendre un mandat (agence)\n  const suspendMandate = useMutation({\n    mutationFn: async ({ mandateId, reason }: { mandateId: string; reason?: string }) => {\n      const { data, error } = await supabase\n        .from('agency_mandates')\n        .update({ \n          status: 'suspended',\n          notes: reason \n        })\n        .eq('id', mandateId)\n        .eq('agency_id', user?.id)\n        .eq('status', 'active')\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['agency-mandates'] });\n      toast({\n        title: \"Mandat suspendu\",\n        description: \"Le mandat a été suspendu temporairement\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Erreur\",\n        description: `Impossible de suspendre le mandat: ${error.message}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Mettre à jour les permissions d'un mandat (propriétaire)\n  const updateMandatePermissions = useMutation({\n    mutationFn: async ({ \n      mandateId, \n      permissions \n    }: { \n      mandateId: string; \n      permissions: Partial<AgencyMandate['permissions']> \n    }) => {\n      const { data, error } = await supabase\n        .from('agency_mandates')\n        .update({ permissions })\n        .eq('id', mandateId)\n        .eq('owner_id', user?.id)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['agency-mandates'] });\n      toast({\n        title: \"Permissions mises à jour\",\n        description: \"Les permissions du mandat ont été modifiées\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Erreur\",\n        description: `Impossible de modifier les permissions: ${error.message}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Filtres utiles\n  const activeMandates = mandates.filter(m => m.status === 'active');\n  const pendingMandates = mandates.filter(m => m.status === 'pending');\n  const asAgency = mandates.filter(m => m.agency_id === user?.id);\n  const asOwner = mandates.filter(m => m.owner_id === user?.id);\n\n  return {\n    mandates,\n    activeMandates,\n    pendingMandates,\n    asAgency,\n    asOwner,\n    isLoading,\n    createMandate: createMandate.mutate,\n    acceptMandate: acceptMandate.mutate,\n    refuseMandate: refuseMandate.mutate,\n    terminateMandate: terminateMandate.mutate,\n    suspendMandate: suspendMandate.mutate,\n    updateMandatePermissions: updateMandatePermissions.mutate,\n  };\n};\n","import * as React from \"react\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n","import { Bell, MessageSquare, FileText, Home, DollarSign, Settings, CheckCircle, XCircle, AlertTriangle, Building2 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Badge } from '@/components/ui/badge';\nimport { useNotifications } from '@/hooks/useNotifications';\nimport { useAgencyMandates } from '@/hooks/useAgencyMandates';\nimport { useNavigate } from 'react-router-dom';\nimport { formatDistanceToNow } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { useEffect, useMemo } from 'react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\n// Local type matching useNotifications hook\ninterface NotificationItem {\n  id: string;\n  type: string;\n  title: string;\n  message: string | null;\n  link: string | null;\n  action_url: string | null;\n  category: string;\n  is_read: boolean;\n  created_at: string;\n}\n\nconst getNotificationIcon = (type: string, category: string) => {\n  // Mandate-specific icons\n  if (type === 'mandate_invited') return FileText;\n  if (type === 'mandate_accepted') return CheckCircle;\n  if (type === 'mandate_refused') return XCircle;\n  if (type === 'mandate_terminated') return AlertTriangle;\n  if (type.startsWith('mandate_')) return Building2;\n  \n  // Category-based fallback\n  switch (category) {\n    case 'messages':\n      return MessageSquare;\n    case 'applications':\n      return FileText;\n    case 'properties':\n      return Home;\n    case 'payments':\n      return DollarSign;\n    default:\n      return Bell;\n  }\n};\n\nconst getCategoryLabel = (category: string) => {\n  switch (category) {\n    case 'messages':\n      return 'Messages';\n    case 'applications':\n      return 'Candidatures';\n    case 'properties':\n      return 'Biens';\n    case 'payments':\n      return 'Paiements';\n    case 'system':\n      return 'Système';\n    default:\n      return 'Général';\n  }\n};\n\nconst NotificationBell = () => {\n  const { notifications, unreadCount, markAsRead, markAllAsRead, requestPermission } = useNotifications();\n  const { acceptMandate, refuseMandate } = useAgencyMandates();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    requestPermission();\n  }, []);\n\n  const handleNotificationClick = (notification: NotificationItem) => {\n    markAsRead(notification.id);\n    const url = notification.action_url || notification.link;\n    if (url) {\n      navigate(url);\n    }\n  };\n\n  const groupedNotifications = useMemo(() => {\n    const groups: Record<string, NotificationItem[]> = {\n      all: notifications,\n      messages: [],\n      applications: [],\n      properties: [],\n      payments: [],\n      system: [],\n    };\n\n    notifications.forEach(notif => {\n      const category = notif.category || 'system';\n      if (groups[category]) {\n        groups[category].push(notif);\n      }\n    });\n\n    return groups;\n  }, [notifications]);\n\n  const categoryUnreadCount = useMemo(() => {\n    const counts: Record<string, number> = {};\n    Object.keys(groupedNotifications).forEach(category => {\n      counts[category] = groupedNotifications[category].filter(n => !n.is_read).length;\n    });\n    return counts;\n  }, [groupedNotifications]);\n\n  const renderNotificationItem = (notification: NotificationItem) => {\n    const NotificationIcon = getNotificationIcon(notification.type, notification.category || 'system');\n    const mandateId = (notification as any).metadata?.mandate_id;\n    \n    return (\n      <DropdownMenuItem\n        key={notification.id}\n        className={`cursor-pointer p-4 ${\n          !notification.is_read ? 'bg-muted/50' : ''\n        }`}\n        onClick={() => handleNotificationClick(notification)}\n        onSelect={(e) => {\n          if ((e.target as HTMLElement).closest('button[data-action]')) {\n            e.preventDefault();\n          }\n        }}\n      >\n        <div className=\"flex gap-3 w-full\">\n          <div className={`p-2 rounded-full ${\n            !notification.is_read \n              ? notification.type === 'mandate_accepted' \n                ? 'bg-green-500/10' \n                : notification.type === 'mandate_refused' || notification.type === 'mandate_terminated'\n                ? 'bg-red-500/10'\n                : 'bg-primary/10'\n              : 'bg-muted'\n          }`}>\n            <NotificationIcon className={`h-4 w-4 ${\n              !notification.is_read \n                ? notification.type === 'mandate_accepted' \n                  ? 'text-green-500' \n                  : notification.type === 'mandate_refused' || notification.type === 'mandate_terminated'\n                  ? 'text-red-500'\n                  : 'text-primary'\n                : 'text-muted-foreground'\n            }`} />\n          </div>\n          <div className=\"flex flex-col gap-1 flex-1 min-w-0\">\n            <div className=\"flex items-start justify-between gap-2\">\n              <p className=\"font-semibold text-sm line-clamp-1\">{notification.title}</p>\n              {!notification.is_read && (\n                <div className=\"h-2 w-2 rounded-full bg-primary flex-shrink-0 mt-1\" />\n              )}\n            </div>\n            {notification.message && (\n              <p className=\"text-sm text-muted-foreground line-clamp-2\">\n                {notification.message}\n              </p>\n            )}\n            <p className=\"text-xs text-muted-foreground\">\n              {formatDistanceToNow(new Date(notification.created_at), {\n                addSuffix: true,\n                locale: fr,\n              })}\n            </p>\n            \n            {/* Actions rapides pour les invitations de mandat */}\n            {notification.type === 'mandate_invited' && mandateId && (\n              <div className=\"flex gap-2 mt-2\" onClick={(e) => e.stopPropagation()}>\n                <Button\n                  data-action=\"accept\"\n                  size=\"sm\"\n                  variant=\"default\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    acceptMandate(mandateId);\n                    markAsRead(notification.id);\n                  }}\n                  className=\"h-7 text-xs\"\n                >\n                  <CheckCircle className=\"h-3 w-3 mr-1\" />\n                  Accepter\n                </Button>\n                <Button\n                  data-action=\"refuse\"\n                  size=\"sm\"\n                  variant=\"outline\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    refuseMandate({ mandateId, reason: 'Refusé depuis les notifications' });\n                    markAsRead(notification.id);\n                  }}\n                  className=\"h-7 text-xs\"\n                >\n                  <XCircle className=\"h-3 w-3 mr-1\" />\n                  Refuser\n                </Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </DropdownMenuItem>\n    );\n  };\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\" className=\"relative\">\n          <Bell className=\"h-5 w-5\" />\n          {unreadCount > 0 && (\n            <Badge \n              variant=\"destructive\" \n              className=\"absolute -top-1 -right-1 h-5 w-5 flex items-center justify-center p-0 text-xs\"\n            >\n              {unreadCount > 9 ? '9+' : unreadCount}\n            </Badge>\n          )}\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-96\">\n        <DropdownMenuLabel className=\"flex items-center justify-between\">\n          <span>Notifications</span>\n          <div className=\"flex gap-2\">\n            {unreadCount > 0 && (\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                className=\"h-auto p-0 text-xs\"\n                onClick={markAllAsRead}\n              >\n                Tout marquer comme lu\n              </Button>\n            )}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"h-auto p-0\"\n              onClick={() => navigate('/profile')}\n            >\n              <Settings className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        \n        <Tabs defaultValue=\"all\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-3 h-auto p-1\">\n            <TabsTrigger value=\"all\" className=\"text-xs\">\n              Tout {categoryUnreadCount.all > 0 && `(${categoryUnreadCount.all})`}\n            </TabsTrigger>\n            <TabsTrigger value=\"messages\" className=\"text-xs\">\n              Messages {categoryUnreadCount.messages > 0 && `(${categoryUnreadCount.messages})`}\n            </TabsTrigger>\n            <TabsTrigger value=\"system\" className=\"text-xs\">\n              Système {categoryUnreadCount.system > 0 && `(${categoryUnreadCount.system})`}\n            </TabsTrigger>\n          </TabsList>\n\n          <ScrollArea className=\"h-[400px]\">\n            <TabsContent value=\"all\" className=\"m-0\">\n              {groupedNotifications.all.length === 0 ? (\n                <div className=\"p-4 text-center text-muted-foreground\">\n                  <Bell className=\"h-12 w-12 mx-auto mb-2 opacity-50\" />\n                  <p>Aucune notification</p>\n                </div>\n              ) : (\n                groupedNotifications.all.map(renderNotificationItem)\n              )}\n            </TabsContent>\n\n            <TabsContent value=\"messages\" className=\"m-0\">\n              {groupedNotifications.messages.length === 0 ? (\n                <div className=\"p-4 text-center text-muted-foreground\">\n                  <MessageSquare className=\"h-12 w-12 mx-auto mb-2 opacity-50\" />\n                  <p>Aucun message</p>\n                </div>\n              ) : (\n                groupedNotifications.messages.map(renderNotificationItem)\n              )}\n            </TabsContent>\n\n            <TabsContent value=\"system\" className=\"m-0\">\n              {groupedNotifications.system.length === 0 ? (\n                <div className=\"p-4 text-center text-muted-foreground\">\n                  <Bell className=\"h-12 w-12 mx-auto mb-2 opacity-50\" />\n                  <p>Aucune notification système</p>\n                </div>\n              ) : (\n                groupedNotifications.system.map(renderNotificationItem)\n              )}\n            </TabsContent>\n          </ScrollArea>\n        </Tabs>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n};\n\nexport default NotificationBell;\n","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Badge } from '@/components/ui/badge';\n\nconst CertificationNotificationBadge = () => {\n  const [count, setCount] = useState(0);\n\n  const fetchPendingCount = async () => {\n    const { count: pendingCount, error } = await supabase\n      .from('leases')\n      .select('*', { count: 'exact', head: true })\n      .eq('certification_status', 'pending');\n\n    if (!error && pendingCount !== null) {\n      setCount(pendingCount);\n    }\n  };\n\n  useEffect(() => {\n    fetchPendingCount();\n\n    // Real-time subscription\n    const channel = supabase\n      .channel('certification-notifications')\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'leases',\n          filter: 'certification_status=eq.pending'\n        },\n        () => {\n          fetchPendingCount();\n        }\n      )\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, []);\n\n  if (count === 0) return null;\n\n  return (\n    <Badge variant=\"destructive\" className=\"ml-2 px-2 py-0.5 text-xs\">\n      {count}\n    </Badge>\n  );\n};\n\nexport default CertificationNotificationBadge;\n","import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';\nimport { Menu, LayoutDashboard, User, LogOut, ShieldCheck, HelpCircle, DollarSign, Search, PlusCircle } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '@/hooks/useAuth';\nimport { cn } from '@/lib/utils';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\n\nexport const MobileMenu = () => {\n  const { user, profile, signOut } = useAuth();\n  const [open, setOpen] = useState(false);\n\n  const handleNavClick = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Sheet open={open} onOpenChange={setOpen}>\n      <SheetTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\">\n          <Menu className=\"h-5 w-5\" />\n        </Button>\n      </SheetTrigger>\n      <SheetContent side=\"right\" className=\"w-[300px] overflow-y-auto bg-background\">\n        <div className=\"flex flex-col gap-6 mt-8\">\n          {/* Navigation Links */}\n          <div className=\"flex flex-col gap-1\">\n            <Link\n              to=\"/recherche\"\n              onClick={handleNavClick}\n              className=\"flex items-center gap-3 px-3 py-2.5 rounded-lg text-sm font-medium hover:bg-accent transition-colors\"\n            >\n              <Search className=\"h-5 w-5 text-primary\" />\n              <span>Rechercher un bien</span>\n            </Link>\n            <Link\n              to=\"/publier\"\n              onClick={handleNavClick}\n              className=\"flex items-center gap-3 px-3 py-2.5 rounded-lg text-sm font-medium hover:bg-accent transition-colors\"\n            >\n              <PlusCircle className=\"h-5 w-5 text-primary\" />\n              <span>Publier une annonce</span>\n            </Link>\n            <Link\n              to=\"/certification\"\n              onClick={handleNavClick}\n              className=\"flex items-center gap-3 px-3 py-2.5 rounded-lg text-sm font-semibold bg-primary/5 border-l-2 border-primary hover:bg-primary/10 transition-colors\"\n            >\n              <ShieldCheck className=\"h-5 w-5 text-primary\" />\n              <span>Certification ANSUT</span>\n            </Link>\n            <Link\n              to=\"/#comment-ca-marche\"\n              onClick={handleNavClick}\n              className=\"flex items-center gap-3 px-3 py-2.5 rounded-lg text-sm font-medium hover:bg-accent transition-colors\"\n            >\n              <HelpCircle className=\"h-5 w-5 text-primary\" />\n              <span>Comment ça marche</span>\n            </Link>\n            <Link\n              to=\"/tarifs\"\n              onClick={handleNavClick}\n              className=\"flex items-center gap-3 px-3 py-2.5 rounded-lg text-sm font-medium hover:bg-accent transition-colors\"\n            >\n              <DollarSign className=\"h-5 w-5 text-primary\" />\n              <span>Tarifs</span>\n            </Link>\n          </div>\n\n          {user && (\n            <>\n              <Separator />\n              {/* User Info */}\n              <div className=\"px-3\">\n                <p className=\"text-sm font-semibold text-foreground mb-1\">{profile?.full_name}</p>\n                <p className=\"text-xs text-muted-foreground mb-2\">{user.email}</p>\n                {(profile?.oneci_verified || profile?.cnam_verified) && (\n                  <Badge variant=\"outline\" className=\"text-xs border-primary text-primary\">\n                    ✓ Certifié ANSUT\n                  </Badge>\n                )}\n              </div>\n\n              <Separator />\n              \n              {/* Account Links */}\n              <div className=\"flex flex-col gap-1\">\n                <Link\n                  to=\"/dashboard\"\n                  onClick={handleNavClick}\n                  className=\"flex items-center gap-3 px-3 py-2.5 rounded-lg text-sm font-medium hover:bg-accent transition-colors\"\n                >\n                  <LayoutDashboard className=\"h-5 w-5 text-primary\" />\n                  <span>Tableau de bord</span>\n                </Link>\n\n                <Link\n                  to=\"/profil\"\n                  onClick={handleNavClick}\n                  className=\"flex items-center gap-3 px-3 py-2.5 rounded-lg text-sm font-medium hover:bg-accent transition-colors\"\n                >\n                  <User className=\"h-5 w-5 text-primary\" />\n                  <span>Mon profil</span>\n                </Link>\n\n                <Link\n                  to=\"/verification\"\n                  onClick={handleNavClick}\n                  className=\"flex items-center gap-3 px-3 py-2.5 rounded-lg text-sm font-medium hover:bg-accent transition-colors\"\n                >\n                  <ShieldCheck className=\"h-5 w-5 text-primary\" />\n                  <span>Vérification</span>\n                </Link>\n              </div>\n\n              <Separator />\n              \n              {/* Logout */}\n              <Button\n                variant=\"outline\"\n                className=\"w-full gap-2 text-destructive hover:text-destructive hover:bg-destructive/10\"\n                onClick={() => {\n                  signOut();\n                  setOpen(false);\n                }}\n              >\n                <LogOut className=\"h-4 w-4\" />\n                Déconnexion\n              </Button>\n            </>\n          )}\n\n          {!user && (\n            <>\n              <Separator />\n              <div className=\"flex flex-col gap-3\">\n                <Button \n                  variant=\"outline\" \n                  className=\"w-full border-primary text-primary hover:bg-primary/5\" \n                  asChild\n                >\n                  <Link to=\"/auth?type=locataire\" onClick={handleNavClick}>\n                    Je suis locataire\n                  </Link>\n                </Button>\n                <Button className=\"w-full\" asChild>\n                  <Link to=\"/auth?type=proprietaire\" onClick={handleNavClick}>\n                    Je suis propriétaire\n                  </Link>\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </SheetContent>\n    </Sheet>\n  );\n};\n","import { useAuth } from \"@/hooks/useAuth\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { User, Home, Building2 } from \"lucide-react\";\n\nexport const RoleBadge = () => {\n  const { profile } = useAuth();\n\n  if (!profile?.user_type) return null;\n\n  const roleConfig = {\n    locataire: {\n      icon: User,\n      label: \"Mode Locataire\",\n      className: \"bg-blue-500/10 text-blue-600 border-blue-500/20 hover:bg-blue-500/20\"\n    },\n    proprietaire: {\n      icon: Home,\n      label: \"Mode Propriétaire\",\n      className: \"bg-green-500/10 text-green-600 border-green-500/20 hover:bg-green-500/20\"\n    },\n    agence: {\n      icon: Building2,\n      label: \"Mode Agence\",\n      className: \"bg-purple-500/10 text-purple-600 border-purple-500/20 hover:bg-purple-500/20\"\n    }\n  };\n\n  const config = roleConfig[profile.user_type as keyof typeof roleConfig];\n  if (!config) return null;\n\n  const Icon = config.icon;\n\n  return (\n    <Badge variant=\"outline\" className={`gap-1.5 font-medium ${config.className}`}>\n      <Icon className=\"h-3.5 w-3.5\" />\n      <span className=\"hidden lg:inline\">{config.label}</span>\n    </Badge>\n  );\n};\n","import { Button } from \"@/components/ui/button\";\nimport { User, LogOut, LayoutDashboard, ShieldCheck, Shield, Search, PlusCircle, HelpCircle, FileText } from \"lucide-react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { usePermissions } from \"@/hooks/usePermissions\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n  DropdownMenuGroup,\n} from \"@/components/ui/dropdown-menu\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport monToitLogo from \"@/assets/logo/mon-toit-logo.png\";\nimport NotificationBell from \"@/components/NotificationBell\";\nimport CertificationNotificationBadge from \"@/components/admin/CertificationNotificationBadge\";\nimport { VerificationProgress } from \"@/components/navigation/VerificationProgress\";\nimport { MobileMenu } from \"@/components/navigation/MobileMenu\";\nimport { RoleSwitcherCompact } from \"@/components/navigation/RoleSwitcherCompact\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\nimport { RoleBadge } from \"@/components/navigation/RoleBadge\";\n\nconst Navbar = () => {\n  const { user, profile, signOut } = useAuth();\n  const { canAccessAdminDashboard } = usePermissions();\n  const isMobile = useIsMobile();\n\n  return (<>\n    <nav className={`fixed top-0 left-0 right-0 z-50 bg-background/98 backdrop-blur-md border-b border-border shadow-sm ${isMobile && user ? 'mb-16' : ''}`}>\n      <div className=\"container mx-auto px-4 sm:px-6\">\n        <div className=\"flex items-center justify-between h-14\">\n          {/* Logo */}\n          <Link to=\"/\" className=\"flex items-center gap-3 group\">\n            <picture>\n              <source srcSet={monToitLogo.replace('.png', '.webp')} type=\"image/webp\" />\n              <img \n                src={monToitLogo} \n                alt=\"Mon Toit - Plateforme Immobilière Certifiée ANSUT\" \n                className=\"h-16 w-auto group-hover:scale-105 transition-smooth\"\n                loading=\"eager\"\n                fetchPriority=\"high\"\n                decoding=\"async\"\n                width=\"64\"\n                height=\"64\"\n              />\n            </picture>\n            <div className=\"hidden sm:flex flex-col\">\n              <span className=\"text-2xl font-bold text-primary leading-tight\">\n                Mon Toit\n              </span>\n              <span className=\"text-xs text-secondary leading-tight flex items-center gap-1 font-semibold\">\n                <ShieldCheck className=\"h-3.5 w-3.5\" />\n                Certifié ANSUT\n              </span>\n            </div>\n          </Link>\n\n          {/* Navigation Links - Simplified to 3 core items */}\n          <div className=\"hidden md:flex items-center gap-6\">\n            <Link \n              to=\"/explorer\" \n              className=\"text-sm font-medium text-foreground/80 hover:text-primary hover:underline decoration-2 underline-offset-4 transition-all duration-150\"\n            >\n              Explorer\n            </Link>\n            <Link \n              to=\"/publier\" \n              className=\"text-sm font-medium text-foreground/80 hover:text-primary hover:underline decoration-2 underline-offset-4 transition-all duration-150\"\n            >\n              Publier\n            </Link>\n            <Link \n              to=\"/guide\" \n              className=\"text-sm font-medium text-foreground/80 hover:text-primary hover:underline decoration-2 underline-offset-4 transition-all duration-150\"\n            >\n              Aide\n            </Link>\n          </div>\n\n          {/* Right Side Actions */}\n          <div className=\"flex items-center gap-3\">\n            {user ? (\n              <>\n                <RoleBadge />\n                <NotificationBell />\n                <DropdownMenu>\n                  <DropdownMenuTrigger asChild>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"rounded-full\">\n                      <Avatar>\n                        <AvatarFallback className=\"bg-primary text-primary-foreground\">\n                          {profile?.full_name?.charAt(0).toUpperCase() || 'U'}\n                        </AvatarFallback>\n                      </Avatar>\n                    </Button>\n                  </DropdownMenuTrigger>\n                  <DropdownMenuContent align=\"end\" className=\"w-64 bg-background border border-border shadow-lg\">\n                    <DropdownMenuLabel className=\"pb-2\">\n                      <div className=\"flex flex-col space-y-1\">\n                        <p className=\"text-sm font-semibold text-foreground\">{profile?.full_name}</p>\n                        <p className=\"text-xs text-muted-foreground\">{user.email}</p>\n                        {(profile?.oneci_verified || profile?.cnam_verified) && (\n                          <Badge variant=\"outline\" className=\"w-fit mt-1 text-xs border-primary text-primary\">\n                            ✓ Certifié ANSUT\n                          </Badge>\n                        )}\n                      </div>\n                    </DropdownMenuLabel>\n                    <DropdownMenuSeparator />\n                    \n                    <DropdownMenuGroup>\n                      <DropdownMenuItem asChild>\n                        <Link to=\"/dashboard\" className=\"cursor-pointer flex items-center\">\n                          <LayoutDashboard className=\"mr-3 h-4 w-4 text-primary\" />\n                          <span>Tableau de bord</span>\n                        </Link>\n                      </DropdownMenuItem>\n                      {profile?.user_type === 'locataire' && (\n                        <DropdownMenuItem asChild>\n                          <Link to=\"/dashboard/tenant\" className=\"cursor-pointer flex items-center\">\n                            <LayoutDashboard className=\"mr-3 h-4 w-4 text-primary\" />\n                            <span>Dashboard Locataire</span>\n                          </Link>\n                        </DropdownMenuItem>\n                      )}\n                      {profile?.user_type === 'agence' && (\n                        <DropdownMenuItem asChild>\n                          <Link to=\"/dashboard/agence\" className=\"cursor-pointer flex items-center\">\n                            <LayoutDashboard className=\"mr-3 h-4 w-4 text-primary\" />\n                            <span>Dashboard Agence</span>\n                          </Link>\n                        </DropdownMenuItem>\n                      )}\n                      {(profile?.user_type === 'proprietaire' || profile?.user_type === 'agence') && (\n                        <DropdownMenuItem asChild>\n                          <Link to=\"/my-mandates\" className=\"cursor-pointer flex items-center\">\n                            <FileText className=\"mr-3 h-4 w-4 text-primary\" />\n                            <span>Mes Mandats</span>\n                          </Link>\n                        </DropdownMenuItem>\n                      )}\n                      <DropdownMenuItem asChild>\n                        <Link to=\"/profil\" className=\"cursor-pointer flex items-center\">\n                          <User className=\"mr-3 h-4 w-4 text-primary\" />\n                          <span>Mon profil</span>\n                        </Link>\n                      </DropdownMenuItem>\n                      <DropdownMenuItem asChild>\n                        <Link to=\"/verification\" className=\"cursor-pointer flex items-center\">\n                          <ShieldCheck className=\"mr-3 h-4 w-4 text-primary\" />\n                          <span>Vérification</span>\n                        </Link>\n                      </DropdownMenuItem>\n                    </DropdownMenuGroup>\n\n                    {canAccessAdminDashboard && (\n                      <>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuGroup>\n                          <DropdownMenuItem asChild>\n                            <Link to=\"/admin\" className=\"cursor-pointer flex items-center\">\n                              <Shield className=\"mr-3 h-4 w-4 text-primary\" />\n                              <span>Admin Dashboard</span>\n                            </Link>\n                          </DropdownMenuItem>\n                          <DropdownMenuItem asChild>\n                            <Link to=\"/admin/certifications\" className=\"cursor-pointer flex items-center\">\n                              <Shield className=\"mr-3 h-4 w-4 text-primary\" />\n                              <span>Certifications ANSUT</span>\n                              <CertificationNotificationBadge />\n                            </Link>\n                          </DropdownMenuItem>\n                        </DropdownMenuGroup>\n                      </>\n                    )}\n\n                    <DropdownMenuSeparator />\n                    <DropdownMenuItem onClick={signOut} className=\"cursor-pointer text-destructive focus:text-destructive\">\n                      <LogOut className=\"mr-3 h-4 w-4\" />\n                      <span>Déconnexion</span>\n                    </DropdownMenuItem>\n                  </DropdownMenuContent>\n                </DropdownMenu>\n              </>\n            ) : (\n              <Button \n                size=\"sm\" \n                variant=\"default\"\n                className=\"font-semibold\" \n                asChild\n              >\n                <Link to=\"/auth\">\n                  <User className=\"h-4 w-4 md:mr-2\" />\n                  <span className=\"hidden md:inline\">Connexion</span>\n                </Link>\n              </Button>\n            )}\n            \n            {/* Mobile Menu */}\n            <MobileMenu />\n          </div>\n        </div>\n      </div>\n    </nav>\n    {/* Barre de couleurs identité */}\n    <div className=\"fixed top-14 left-0 right-0 h-1 bg-gradient-to-r from-primary via-secondary to-primary z-40\" />\n  </>);\n};\n\nexport default Navbar;\n","import { Shield, Facebook, Linkedin, Twitter } from \"lucide-react\";\nimport { Link } from \"react-router-dom\";\nimport monToitLogo from \"@/assets/logo/mon-toit-logo.png\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"py-8 bg-gray-900 text-white\">\n      <div className=\"container mx-auto px-4 max-w-7xl\">\n        <div className=\"flex flex-col md:flex-row justify-between items-center gap-6 text-sm\">\n          \n          {/* Zone gauche : Logo + Copyright + Badge ANSUT */}\n          <div className=\"flex items-center gap-4\">\n            <img src={monToitLogo} alt=\"Mon Toit\" className=\"h-6 w-auto brightness-0 invert\" />\n            <span className=\"text-gray-300\">© 2025 Mon Toit</span>\n            <div className=\"flex items-center gap-1.5 px-2 py-1 bg-primary/20 border border-primary/30 rounded\">\n              <Shield className=\"h-3 w-3 text-primary\" />\n              <span className=\"text-xs\">ANSUT</span>\n            </div>\n          </div>\n\n          {/* Zone centrale : Liens essentiels */}\n          <nav className=\"flex gap-6\" aria-label=\"Footer navigation\">\n            <Link to=\"/mentions-legales\" className=\"text-gray-300 hover:text-white transition-colors\">\n              Mentions légales\n            </Link>\n            <Link to=\"/confidentialite\" className=\"text-gray-300 hover:text-white transition-colors\">\n              Confidentialité\n            </Link>\n            <Link to=\"/aide\" className=\"text-gray-300 hover:text-white transition-colors\">\n              Aide\n            </Link>\n            <Link to=\"/contact\" className=\"text-gray-300 hover:text-white transition-colors\">\n              Contact\n            </Link>\n          </nav>\n\n          {/* Zone droite : Icônes réseaux sociaux */}\n          <div className=\"flex gap-4\" aria-label=\"Réseaux sociaux\">\n            <a \n              href=\"https://facebook.com/montoit\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-gray-300 hover:text-white transition-colors\"\n              aria-label=\"Facebook\"\n            >\n              <Facebook className=\"h-5 w-5\" />\n            </a>\n            <a \n              href=\"https://twitter.com/montoit\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-gray-300 hover:text-white transition-colors\"\n              aria-label=\"Twitter\"\n            >\n              <Twitter className=\"h-5 w-5\" />\n            </a>\n            <a \n              href=\"https://linkedin.com/company/montoit\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-gray-300 hover:text-white transition-colors\"\n              aria-label=\"LinkedIn\"\n            >\n              <Linkedin className=\"h-5 w-5\" />\n            </a>\n          </div>\n\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\",\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label ref={ref} className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)} {...props} />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator ref={ref} className={cn(\"-mx-1 my-1 h-px bg-muted\", className)} {...props} />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n","import * as React from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { X } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity data-[state=open]:bg-accent data-[state=open]:text-muted-foreground hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"flex flex-col space-y-1.5 text-center sm:text-left\", className)} {...props} />\n);\nDialogHeader.displayName = \"DialogHeader\";\n\nconst DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", className)} {...props} />\n);\nDialogFooter.displayName = \"DialogFooter\";\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n","// ============= CENTRALIZED CONSTANTS =============\n// Single source of truth for all application constants\n// Single source of truth for all application constants\n\nimport type { ApplicationStatus, PropertyStatus, VerificationStatus } from '@/types';\n\n// ============= 1. STATUSES & LABELS =============\n\nexport const PROPERTY_STATUS_LABELS: Record<string, string> = {\n  disponible: 'Disponible',\n  loué: 'Loué',\n  loue: 'Loué',\n  en_attente: 'En attente',\n  retiré: 'Retiré',\n  retire: 'Retiré',\n  refuse: 'Refusé',\n} as const;\n\nexport const PROPERTY_STATUS_COLORS: Record<string, string> = {\n  disponible: 'bg-green-500',\n  loué: 'bg-blue-500',\n  loue: 'bg-blue-500',\n  en_attente: 'bg-yellow-500',\n  retiré: 'bg-gray-500',\n  retire: 'bg-gray-500',\n  refuse: 'bg-red-500',\n} as const;\n\n// Status semantic variants for StatusBadge\nexport const STATUS_VARIANTS = {\n  disponible: 'success',\n  loué: 'info',\n  loue: 'info',\n  en_attente: 'warning',\n  retiré: 'neutral',\n  retire: 'neutral',\n  refuse: 'danger',\n} as const;\n\n// Status icons mapping\nimport { CheckCircle, Clock, Lock, XCircle, AlertTriangle, type LucideIcon } from 'lucide-react';\n\nexport const STATUS_ICONS: Record<string, LucideIcon> = {\n  disponible: CheckCircle,\n  loué: Lock,\n  loue: Lock,\n  en_attente: Clock,\n  retiré: XCircle,\n  retire: XCircle,\n  refuse: AlertTriangle,\n} as const;\n\nexport const APPLICATION_STATUS_LABELS: Record<string, string> = {\n  pending: 'En attente',\n  approved: 'Approuvée',\n  rejected: 'Rejetée',\n  withdrawn: 'Retirée',\n} as const;\n\nexport const APPLICATION_STATUS_VARIANTS: Record<\n  string,\n  'default' | 'secondary' | 'destructive' | 'outline'\n> = {\n  pending: 'secondary',\n  approved: 'default',\n  rejected: 'destructive',\n  withdrawn: 'outline',\n} as const;\n\nexport const VERIFICATION_STATUS_LABELS: Record<string, string> = {\n  pending: 'En attente',\n  verified: 'Vérifié',\n  rejected: 'Rejeté',\n  not_attempted: 'Non tenté',\n} as const;\n\nexport const VERIFICATION_STATUS_VARIANTS: Record<\n  string,\n  'default' | 'secondary' | 'destructive' | 'outline'\n> = {\n  pending: 'secondary',\n  verified: 'default',\n  rejected: 'destructive',\n  not_attempted: 'outline',\n} as const;\n\nexport const CERTIFICATION_STATUS_LABELS: Record<string, string> = {\n  not_requested: 'Non demandée',\n  pending: 'En attente',\n  certified: 'Certifié',\n  rejected: 'Rejetée',\n} as const;\n\nexport const PAYMENT_STATUS_LABELS: Record<string, string> = {\n  pending: 'En attente',\n  completed: 'Complété',\n  failed: 'Échoué',\n  cancelled: 'Annulé',\n} as const;\n\nexport const LEASE_STATUS_LABELS: Record<string, string> = {\n  draft: 'Brouillon',\n  active: 'Actif',\n  terminated: 'Résilié',\n  expired: 'Expiré',\n} as const;\n\n// ============= 2. PROPERTY TYPES =============\n\nexport const PROPERTY_TYPES = [\n  'Appartement',\n  'Villa',\n  'Studio',\n  'Maison',\n] as const;\n\nexport type PropertyType = typeof PROPERTY_TYPES[number];\n\n// ============= 3. PAYMENT TYPES =============\n\nexport const PAYMENT_METHODS = {\n  MOBILE_MONEY: 'mobile_money',\n  BANK_TRANSFER: 'bank_transfer',\n  CASH: 'cash',\n  CREDIT_CARD: 'credit_card',\n} as const;\n\nexport const PAYMENT_TYPES = {\n  RENT: 'rent',\n  DEPOSIT: 'deposit',\n  CHARGES: 'charges',\n  COMMISSION: 'commission',\n} as const;\n\nexport const MOBILE_MONEY_PROVIDERS = {\n  ORANGE: 'orange_money',\n  MTN: 'mtn_money',\n  MOOV: 'moov_money',\n  WAVE: 'wave',\n} as const;\n\nexport type PaymentMethod = typeof PAYMENT_METHODS[keyof typeof PAYMENT_METHODS];\nexport type PaymentType = typeof PAYMENT_TYPES[keyof typeof PAYMENT_TYPES];\nexport type MobileMoneyProvider = typeof MOBILE_MONEY_PROVIDERS[keyof typeof MOBILE_MONEY_PROVIDERS];\n\n// ============= 4. LIMITS & VALIDATIONS =============\n\nexport const FILE_LIMITS = {\n  MAX_IMAGE_SIZE: 5 * 1024 * 1024, // 5MB\n  MAX_VIDEO_SIZE: 100 * 1024 * 1024, // 100MB\n  MAX_DOCUMENT_SIZE: 10 * 1024 * 1024, // 10MB\n  MAX_PANORAMA_SIZE: 8 * 1024 * 1024, // 8MB\n  MAX_FLOOR_PLAN_SIZE: 5 * 1024 * 1024, // 5MB\n  MAX_IMAGES_PER_PROPERTY: 10,\n  MAX_PANORAMAS_PER_PROPERTY: 5,\n  MAX_FLOOR_PLANS_PER_PROPERTY: 3,\n  MAX_ATTACHMENTS_PER_MESSAGE: 5,\n} as const;\n\nexport const VALIDATION_LIMITS = {\n  MIN_PASSWORD_LENGTH: 8,\n  MAX_PASSWORD_LENGTH: 72,\n  MIN_TITLE_LENGTH: 5,\n  MAX_TITLE_LENGTH: 100,\n  MIN_DESCRIPTION_LENGTH: 20,\n  MAX_DESCRIPTION_LENGTH: 2000,\n  MIN_COMMENT_LENGTH: 10,\n  MAX_COMMENT_LENGTH: 1000,\n  MIN_NAME_LENGTH: 2,\n  MAX_NAME_LENGTH: 100,\n  MIN_ADDRESS_LENGTH: 5,\n  MAX_ADDRESS_LENGTH: 200,\n  MIN_CITY_LENGTH: 2,\n  MAX_CITY_LENGTH: 100,\n  MAX_NEIGHBORHOOD_LENGTH: 100,\n  MAX_PHONE_LENGTH: 20,\n  MAX_BIO_LENGTH: 500,\n} as const;\n\nexport const PROPERTY_LIMITS = {\n  MIN_RENT: 10000,\n  MAX_RENT: 10000000,\n  MIN_SURFACE: 10,\n  MAX_SURFACE: 1000,\n  MIN_BEDROOMS: 0,\n  MAX_BEDROOMS: 20,\n  MIN_BATHROOMS: 0,\n  MAX_BATHROOMS: 10,\n  MIN_FLOOR: -5,\n  MAX_FLOOR: 100,\n} as const;\n\n// ============= 5. ERROR MESSAGES =============\n\nexport const ERROR_MESSAGES = {\n  // Auth errors\n  AUTH_REQUIRED: 'Vous devez être connecté pour effectuer cette action',\n  AUTH_INVALID_CREDENTIALS: 'Email ou mot de passe incorrect',\n  AUTH_EMAIL_EXISTS: 'Cette adresse email est déjà utilisée',\n  AUTH_WEAK_PASSWORD: 'Le mot de passe est trop faible',\n  AUTH_SESSION_EXPIRED: 'Votre session a expiré. Veuillez vous reconnecter.',\n  \n  // Form validation\n  FIELD_REQUIRED: 'Ce champ est requis',\n  EMAIL_INVALID: 'Adresse email invalide',\n  PHONE_INVALID: 'Numéro de téléphone invalide',\n  PASSWORD_TOO_SHORT: `Le mot de passe doit contenir au moins ${VALIDATION_LIMITS.MIN_PASSWORD_LENGTH} caractères`,\n  TITLE_TOO_SHORT: `Le titre doit contenir au moins ${VALIDATION_LIMITS.MIN_TITLE_LENGTH} caractères`,\n  TITLE_TOO_LONG: `Le titre ne peut pas dépasser ${VALIDATION_LIMITS.MAX_TITLE_LENGTH} caractères`,\n  DESCRIPTION_TOO_SHORT: `La description doit contenir au moins ${VALIDATION_LIMITS.MIN_DESCRIPTION_LENGTH} caractères`,\n  DESCRIPTION_TOO_LONG: `La description ne peut pas dépasser ${VALIDATION_LIMITS.MAX_DESCRIPTION_LENGTH} caractères`,\n  \n  // File uploads\n  FILE_TOO_LARGE: 'Le fichier est trop volumineux',\n  FILE_TYPE_INVALID: 'Type de fichier non autorisé',\n  MAX_FILES_EXCEEDED: 'Nombre maximum de fichiers dépassé',\n  IMAGE_TOO_LARGE: `L'image ne doit pas dépasser ${FILE_LIMITS.MAX_IMAGE_SIZE / 1024 / 1024}MB`,\n  VIDEO_TOO_LARGE: `La vidéo ne doit pas dépasser ${FILE_LIMITS.MAX_VIDEO_SIZE / 1024 / 1024}MB`,\n  DOCUMENT_TOO_LARGE: `Le document ne doit pas dépasser ${FILE_LIMITS.MAX_DOCUMENT_SIZE / 1024 / 1024}MB`,\n  \n  // Network errors\n  NETWORK_ERROR: 'Erreur de connexion. Veuillez réessayer.',\n  SERVER_ERROR: 'Erreur serveur. Veuillez réessayer plus tard.',\n  UNAUTHORIZED: \"Vous n'avez pas les permissions nécessaires\",\n  FORBIDDEN: 'Accès interdit',\n  NOT_FOUND: 'Ressource introuvable',\n  \n  // Business logic\n  PROPERTY_NOT_FOUND: 'Propriété introuvable',\n  APPLICATION_ALREADY_EXISTS: 'Vous avez déjà postulé pour cette propriété',\n  APPLICATION_NOT_FOUND: 'Candidature introuvable',\n  LEASE_NOT_FOUND: 'Bail introuvable',\n  PAYMENT_FAILED: 'Le paiement a échoué',\n  VERIFICATION_FAILED: 'La vérification a échoué',\n  GEOCODING_FAILED: 'Impossible de localiser l\\'adresse',\n  UPLOAD_FAILED: 'Échec du téléchargement du fichier',\n  \n  // Media & Upload\n  FILE_REQUIRED: 'Au moins une image est requise',\n  INVALID_FILE_TYPE: 'Type de fichier non autorisé',\n  DELETE_FAILED: 'Échec de la suppression',\n  MEDIA_LOAD_FAILED: 'Impossible de charger les médias',\n  \n  // Property specific\n  PROPERTY_LOAD_FAILED: 'Impossible de charger la propriété',\n  PROPERTY_CREATE_FAILED: 'Échec de la création de la propriété',\n  PROPERTY_UPDATE_FAILED: 'Échec de la mise à jour',\n  PROPERTY_DELETE_FAILED: 'Échec de la suppression',\n  \n  // Permissions\n  PERMISSION_DENIED: \"Vous n'avez pas la permission d'effectuer cette action\",\n  OWNER_ONLY: 'Seul le propriétaire peut modifier ce bien',\n  \n  // Network\n  CONNECTION_LOST: 'Connexion perdue. Veuillez vérifier votre connexion internet.',\n  TIMEOUT: 'La requête a expiré. Veuillez réessayer.',\n} as const;\n\n// ============= 6. SUCCESS MESSAGES =============\n\nexport const SUCCESS_MESSAGES = {\n  // Auth\n  LOGIN_SUCCESS: 'Connexion réussie',\n  LOGOUT_SUCCESS: 'Déconnexion réussie',\n  SIGNUP_SUCCESS: 'Compte créé avec succès',\n  PASSWORD_RESET_SENT: 'Email de réinitialisation envoyé',\n  PASSWORD_UPDATED: 'Mot de passe mis à jour',\n  \n  // Profile\n  PROFILE_UPDATED: 'Profil mis à jour avec succès',\n  AVATAR_UPDATED: 'Photo de profil mise à jour',\n  \n  // Properties\n  PROPERTY_CREATED: 'Propriété créée avec succès',\n  PROPERTY_UPDATED: 'Propriété mise à jour avec succès',\n  PROPERTY_DELETED: 'Propriété supprimée avec succès',\n  PROPERTY_FAVORITED: 'Ajouté aux favoris',\n  PROPERTY_UNFAVORITED: 'Retiré des favoris',\n  \n  // Applications\n  APPLICATION_SUBMITTED: 'Candidature envoyée avec succès',\n  APPLICATION_APPROVED: 'Candidature approuvée',\n  APPLICATION_REJECTED: 'Candidature rejetée',\n  APPLICATION_WITHDRAWN: 'Candidature retirée',\n  \n  // Payments\n  PAYMENT_SUCCESS: 'Paiement effectué avec succès',\n  PAYMENT_INITIATED: 'Paiement initié. Veuillez suivre les instructions.',\n  \n  // Reviews\n  REVIEW_SUBMITTED: 'Avis publié avec succès',\n  REVIEW_UPDATED: 'Avis mis à jour avec succès',\n  REVIEW_DELETED: 'Avis supprimé avec succès',\n  \n  // Verification\n  VERIFICATION_SUCCESS: 'Vérification réussie',\n  ONECI_VERIFIED: 'Identité ONECI vérifiée',\n  CNAM_VERIFIED: 'CNAM vérifié',\n  FACE_VERIFIED: 'Visage vérifié',\n  \n  // Lease\n  LEASE_CREATED: 'Bail créé avec succès',\n  LEASE_SIGNED: 'Bail signé avec succès',\n  LEASE_CERTIFIED: 'Bail certifié par ANSUT',\n  \n  // Messages\n  MESSAGE_SENT: 'Message envoyé',\n  \n  // Documents\n  DOCUMENT_UPLOADED: 'Document téléchargé avec succès',\n  DOCUMENT_DELETED: 'Document supprimé',\n  \n  // Media\n  MEDIA_UPLOADED: 'Médias téléchargés avec succès',\n  MEDIA_DELETED: 'Médias supprimés avec succès',\n  \n  // Property\n  PROPERTY_SAVED: 'Propriété enregistrée',\n} as const;\n\n// ============= 7. CITIES & LOCALIZATION =============\n\nexport const CITIES = [\n  'Abidjan',\n  'Yamoussoukro',\n  'Bouaké',\n  'Daloa',\n  'San-Pedro',\n  'Korhogo',\n  'Man',\n  'Gagnoa',\n  'Divo',\n  'Abengourou',\n] as const;\n\nexport type City = typeof CITIES[number];\n\nexport const MAP_CONFIG = {\n  DEFAULT_ZOOM: 13,\n  MAX_ZOOM: 18,\n  MIN_ZOOM: 5,\n  DEFAULT_CENTER: { lat: 5.3600, lng: -4.0083 }, // Abidjan\n  SEARCH_RADIUS_KM: 10,\n  MAX_SEARCH_RADIUS_KM: 50,\n} as const;\n\n// ============= 8. NOTIFICATION TYPES =============\n\nexport const NOTIFICATION_TYPES = {\n  APPLICATION_SUBMITTED: 'application_submitted',\n  APPLICATION_APPROVED: 'application_approved',\n  APPLICATION_REJECTED: 'application_rejected',\n  NEW_MESSAGE: 'new_message',\n  PROPERTY_VIEWED: 'property_viewed',\n  PROPERTY_FAVORITED: 'property_favorited',\n  VERIFICATION_COMPLETED: 'verification_completed',\n  LEASE_SIGNED: 'lease_signed',\n  PAYMENT_RECEIVED: 'payment_received',\n  REVIEW_RECEIVED: 'review_received',\n  CERTIFICATION_APPROVED: 'certification_approved',\n  CERTIFICATION_REJECTED: 'certification_rejected',\n} as const;\n\nexport const NOTIFICATION_CATEGORIES = {\n  APPLICATIONS: 'applications',\n  MESSAGES: 'messages',\n  PROPERTIES: 'properties',\n  PAYMENTS: 'payments',\n  REVIEWS: 'reviews',\n  VERIFICATION: 'verification',\n  SYSTEM: 'system',\n} as const;\n\nexport type NotificationType = typeof NOTIFICATION_TYPES[keyof typeof NOTIFICATION_TYPES];\nexport type NotificationCategory = typeof NOTIFICATION_CATEGORIES[keyof typeof NOTIFICATION_CATEGORIES];\n\n// ============= 9. HELPER FUNCTIONS =============\n\n/**\n * Check if a value is a valid property status\n */\nexport const isValidPropertyStatus = (status: string): status is PropertyStatus => {\n  return ['disponible', 'loué', 'en_attente', 'retiré'].includes(status);\n};\n\n/**\n * Check if a value is a valid application status\n */\nexport const isValidApplicationStatus = (status: string): status is ApplicationStatus => {\n  return ['pending', 'approved', 'rejected', 'withdrawn'].includes(status);\n};\n\n/**\n * Check if a value is a valid verification status\n */\nexport const isValidVerificationStatus = (status: string): status is VerificationStatus => {\n  return ['pending', 'verified', 'rejected', 'not_attempted'].includes(status);\n};\n\n/**\n * Format price with FCFA currency\n */\nexport const formatPrice = (price: number): string => {\n  return `${price.toLocaleString('fr-FR')} FCFA`;\n};\n\n/**\n * Format price per month\n */\nexport const formatMonthlyRent = (rent: number): string => {\n  return `${formatPrice(rent)}/mois`;\n};\n\n/**\n * Get file size in human readable format\n */\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];\n};\n\n/**\n * Validate file size\n */\nexport const validateFileSize = (file: File, maxSize: number): boolean => {\n  return file.size <= maxSize;\n};\n\n/**\n * Validate file type\n */\nexport const validateImageType = (file: File): boolean => {\n  const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\n  return validTypes.includes(file.type);\n};\n\nexport const validateVideoType = (file: File): boolean => {\n  const validTypes = ['video/mp4', 'video/webm', 'video/quicktime'];\n  return validTypes.includes(file.type);\n};\n\nexport const validateDocumentType = (file: File): boolean => {\n  const validTypes = ['application/pdf', 'image/jpeg', 'image/jpg', 'image/png'];\n  return validTypes.includes(file.type);\n};\n\n// ============= HELPER FUNCTIONS =============\n\n/**\n * Get property status label\n */\nexport function getPropertyStatusLabel(status: string): string {\n  return PROPERTY_STATUS_LABELS[status] || status;\n}\n\n/**\n * Get property status color class\n */\nexport function getPropertyStatusColor(status: string): string {\n  return PROPERTY_STATUS_COLORS[status] || 'bg-gray-500';\n}\n\n/**\n * Get application status label\n */\nexport function getApplicationStatusLabel(status: ApplicationStatus): string {\n  return APPLICATION_STATUS_LABELS[status] || status;\n}\n\n/**\n * Get application status variant\n */\nexport function getApplicationStatusVariant(\n  status: ApplicationStatus\n): 'default' | 'secondary' | 'destructive' | 'outline' {\n  return APPLICATION_STATUS_VARIANTS[status] || 'outline';\n}\n\n/**\n * Get verification status label\n */\nexport function getVerificationStatusLabel(status: VerificationStatus): string {\n  return VERIFICATION_STATUS_LABELS[status] || status;\n}\n\n/**\n * Get verification status variant\n */\nexport function getVerificationStatusVariant(\n  status: VerificationStatus\n): 'default' | 'secondary' | 'destructive' | 'outline' {\n  return VERIFICATION_STATUS_VARIANTS[status] || 'outline';\n}\n\n// ============= 10. DESIGN TOKENS =============\n\nexport const DESIGN_TOKENS = {\n  borderRadius: {\n    card: '16px',\n    button: '12px',\n    input: '8px',\n    badge: '9999px', // full rounded\n  },\n  shadow: {\n    sm: '0 1px 2px rgba(0, 0, 0, 0.05)',\n    md: '0 4px 6px rgba(0, 0, 0, 0.07)',\n    lg: '0 10px 15px rgba(0, 0, 0, 0.1)',\n    xl: '0 20px 25px rgba(0, 0, 0, 0.1)',\n    card: '0 2px 8px rgba(0, 0, 0, 0.08)',\n    cardHover: '0 8px 24px rgba(0, 0, 0, 0.12)',\n  },\n} as const;\n","import * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst labelVariants = cva(\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\");\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","import * as React from \"react\";\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { Check } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator className={cn(\"flex items-center justify-center text-current\")}>\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport { Textarea };\n","import * as React from \"react\";\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50\",\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import * as React from \"react\";\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\"relative h-4 w-full overflow-hidden rounded-full bg-secondary\", className)}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n","import * as React from \"react\";\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\";\n\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/components/ui/button\";\n\nconst AlertDialog = AlertDialogPrimitive.Root;\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger;\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal;\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className,\n    )}\n    {...props}\n    ref={ref}\n  />\n));\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className,\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n));\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\n\nconst AlertDialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"flex flex-col space-y-2 text-center sm:text-left\", className)} {...props} />\n);\nAlertDialogHeader.displayName = \"AlertDialogHeader\";\n\nconst AlertDialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", className)} {...props} />\n);\nAlertDialogFooter.displayName = \"AlertDialogFooter\";\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title ref={ref} className={cn(\"text-lg font-semibold\", className)} {...props} />\n));\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n));\nAlertDialogDescription.displayName = AlertDialogPrimitive.Description.displayName;\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action ref={ref} className={cn(buttonVariants(), className)} {...props} />\n));\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(buttonVariants({ variant: \"outline\" }), \"mt-2 sm:mt-0\", className)}\n    {...props}\n  />\n));\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName;\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n};\n","import { toast } from '@/hooks/use-toast';\nimport { logger } from '@/services/logger';\nimport { ERROR_MESSAGES, SUCCESS_MESSAGES } from '@/constants';\n\n/**\n * Custom application error class with typed error codes\n */\nexport class AppError extends Error {\n  constructor(\n    public code: keyof typeof ERROR_MESSAGES,\n    public context?: Record<string, any>\n  ) {\n    super(ERROR_MESSAGES[code]);\n    this.name = 'AppError';\n    Object.setPrototypeOf(this, AppError.prototype);\n  }\n}\n\n/**\n * Type guard for Supabase/Postgres errors\n */\nexport const isSupabaseError = (error: any): boolean => {\n  return error && (\n    error.code || \n    error.message?.includes('PostgrestError') ||\n    error.message?.includes('FunctionsHttpError')\n  );\n};\n\n/**\n * Centralized error handler\n * Logs error and displays user-friendly toast\n */\nexport const handleError = (\n  error: unknown,\n  fallbackMessage?: string\n): void => {\n  // Log the error with full context\n  logger.logError(error, { \n    fallback: fallbackMessage,\n    timestamp: new Date().toISOString(),\n  });\n\n  // Determine user-facing message\n  let userMessage = fallbackMessage || ERROR_MESSAGES.SERVER_ERROR;\n\n  if (error instanceof AppError) {\n    userMessage = error.message;\n  } else if (error instanceof Error) {\n    // Check for specific error patterns\n    if (error.message.includes('auth')) {\n      userMessage = ERROR_MESSAGES.AUTH_REQUIRED;\n    } else if (error.message.includes('network') || error.message.includes('fetch')) {\n      userMessage = ERROR_MESSAGES.NETWORK_ERROR;\n    } else if (isSupabaseError(error)) {\n      // Parse Supabase error codes\n      const err = error as any;\n      if (err.code === '23505') {\n        userMessage = 'Cette ressource existe déjà';\n      } else if (err.code === '23503') {\n        userMessage = 'Ressource liée introuvable';\n      } else if (err.code === 'PGRST116') {\n        userMessage = ERROR_MESSAGES.NOT_FOUND;\n      }\n    }\n  }\n\n  // Display error toast\n  toast({\n    title: \"Erreur\",\n    description: userMessage,\n    variant: \"destructive\",\n  });\n};\n\n/**\n * Centralized success handler\n * Displays success toast with consistent styling\n */\nexport const handleSuccess = (\n  code: keyof typeof SUCCESS_MESSAGES,\n  description?: string\n): void => {\n  const message = description || SUCCESS_MESSAGES[code];\n\n  toast({\n    title: \"Succès\",\n    description: message,\n  });\n\n  logger.info(`Success: ${code}`, { message });\n};\n\n/**\n * Handle async operations with error handling\n * Usage: await withErrorHandling(async () => { ... })\n */\nexport const withErrorHandling = async <T>(\n  operation: () => Promise<T>,\n  errorMessage?: string\n): Promise<T | null> => {\n  try {\n    return await operation();\n  } catch (error) {\n    handleError(error, errorMessage);\n    return null;\n  }\n};\n","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface StickyHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  offsetTop?: string; // e.g., \"top-16\" or \"top-24\"\n  blur?: boolean;\n}\n\nexport const StickyHeader = React.forwardRef<HTMLDivElement, StickyHeaderProps>(\n  ({ children, offsetTop = \"top-16\", blur = true, className, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"sticky z-20 border-b bg-background transition-all duration-200\",\n          offsetTop,\n          blur && \"backdrop-blur-sm bg-background/95\",\n          className\n        )}\n        {...props}\n      >\n        <div className=\"container mx-auto px-4 py-3\">\n          {children}\n        </div>\n      </div>\n    );\n  }\n);\nStickyHeader.displayName = \"StickyHeader\";\n","import {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from '@/components/ui/sidebar';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  LayoutDashboard,\n  Shield,\n  CheckCircle,\n  Lock,\n  FileText,\n  Clock,\n  BarChart3,\n  AlertTriangle,\n  Flag,\n  FileBarChart,\n  PenTool,\n  Home,\n  Users,\n  Settings,\n  Bell,\n  Image,\n} from 'lucide-react';\n\ninterface AdminSidebarProps {\n  activeTab: string;\n  onTabChange: (tab: string) => void;\n  badges: {\n    certifications: number;\n    disputes: number;\n    properties: number;\n    overdueApplications: number;\n  };\n}\n\nexport const AdminSidebar = ({ activeTab, onTabChange, badges }: AdminSidebarProps) => {\n  const menuGroups = [\n    {\n      label: 'Principal',\n      items: [\n        { id: 'overview', label: 'Vue d\\'ensemble', icon: LayoutDashboard },\n      ]\n    },\n    {\n      label: 'Sécurité',\n      items: [\n        { id: 'certifications', label: 'Certifications', icon: Shield, badge: badges.certifications },\n        { id: 'verifications', label: 'Vérifications', icon: CheckCircle },\n        { id: 'mfa', label: 'Sécurité 2FA', icon: Lock },\n        { id: 'audit', label: 'Audit', icon: FileText },\n        { id: 'security', label: 'Accès sensibles', icon: Lock },\n      ]\n    },\n    {\n      label: 'Gestion',\n      items: [\n        { id: 'properties', label: 'Biens', icon: Home, badge: badges.properties },\n        { id: 'users', label: 'Utilisateurs', icon: Users },\n        { id: 'leases', label: 'Baux', icon: FileText },\n      ]\n    },\n    {\n      label: 'Outils',\n      items: [\n        { id: 'processing', label: 'Traitement', icon: Clock, badge: badges.overdueApplications },\n        { id: 'analytics', label: 'Analytics', icon: BarChart3 },\n        { id: 'alerts', label: 'Alertes Propriétés', icon: Bell },\n        { id: 'disputes', label: 'Litiges', icon: AlertTriangle, badge: badges.disputes },\n        { id: 'moderation', label: 'Modération', icon: Flag },\n        { id: 'reporting', label: 'Rapports', icon: FileBarChart },\n        { id: 'electronic-signatures', label: 'Signatures Élec.', icon: PenTool },\n        { id: 'illustrations', label: 'Illustrations', icon: Image },\n      ]\n    }\n  ];\n\n  return (\n    <Sidebar className=\"border-r\">\n      <SidebarContent>\n        {menuGroups.map((group) => (\n          <SidebarGroup key={group.label}>\n            <SidebarGroupLabel>{group.label}</SidebarGroupLabel>\n            <SidebarGroupContent>\n              <SidebarMenu>\n                {group.items.map((item) => (\n                  <SidebarMenuItem key={item.id}>\n                    <SidebarMenuButton\n                      onClick={() => onTabChange(item.id)}\n                      isActive={activeTab === item.id}\n                      className=\"w-full\"\n                    >\n                      <item.icon className=\"h-4 w-4\" />\n                      <span>{item.label}</span>\n                      {item.badge !== undefined && item.badge > 0 && (\n                        <Badge variant=\"destructive\" className=\"ml-auto\">\n                          {item.badge}\n                        </Badge>\n                      )}\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                ))}\n              </SidebarMenu>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        ))}\n      </SidebarContent>\n    </Sidebar>\n  );\n};","import { useEffect, useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { supabase } from '@/lib/supabase';\nimport { Home, Users, FileText, CheckCircle, AlertTriangle, Shield } from 'lucide-react';\nimport { handleError } from '@/lib/errorHandler';\n\nconst AdminStats = () => {\n  const [stats, setStats] = useState({\n    totalProperties: 0,\n    pendingProperties: 0,\n    totalUsers: 0,\n    totalLeases: 0,\n    certifiedLeases: 0,\n  });\n  const [securityStats, setSecurityStats] = useState({\n    failedLogins: 0,\n    massActions: 0,\n    lastSuspiciousAction: null as string | null,\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchStats();\n  }, []);\n\n  const fetchStats = async () => {\n    try {\n      const [propertiesRes, usersRes, leasesRes, certifiedRes] = await Promise.all([\n        supabase.from('properties').select('id', { count: 'exact', head: true }),\n        supabase.from('profiles').select('id', { count: 'exact', head: true }),\n        supabase.from('leases').select('id', { count: 'exact', head: true }),\n        supabase.from('leases').select('id', { count: 'exact', head: true }).not('ansut_certified_at', 'is', null),\n      ]);\n\n      const pendingProps = await supabase\n        .from('properties')\n        .select('id', { count: 'exact', head: true })\n        .eq('status', 'en_attente');\n\n      setStats({\n        totalProperties: propertiesRes.count || 0,\n        pendingProperties: pendingProps.count || 0,\n        totalUsers: usersRes.count || 0,\n        totalLeases: leasesRes.count || 0,\n        certifiedLeases: certifiedRes.count || 0,\n      });\n\n      // Fetch security stats (dernières 24h)\n      const oneDayAgo = new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString();\n\n      const { count: failedCount } = await supabase\n        .from('login_attempts')\n        .select('*', { count: 'exact', head: true })\n        .eq('success', false)\n        .gte('created_at', oneDayAgo);\n\n      const { data: massActionsData } = await supabase.rpc('detect_mass_actions');\n\n      const { data: suspiciousActions } = await supabase\n        .from('admin_audit_logs')\n        .select('action_type, created_at')\n        .in('action_type', ['role_assigned', 'role_revoked', 'dispute_resolved'])\n        .gte('created_at', oneDayAgo)\n        .order('created_at', { ascending: false })\n        .limit(1);\n\n      setSecurityStats({\n        failedLogins: failedCount || 0,\n        massActions: massActionsData?.length || 0,\n        lastSuspiciousAction: suspiciousActions?.[0]\n          ? `${suspiciousActions[0].action_type} (${new Date(suspiciousActions[0].created_at).toLocaleTimeString('fr-FR')})`\n          : null,\n      });\n    } catch (error) {\n      handleError(error, 'Impossible de charger les statistiques');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"animate-pulse space-y-4\">\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {[...Array(4)].map((_, i) => (\n          <Card key={i}>\n            <CardHeader className=\"h-20 bg-muted/50\" />\n            <CardContent className=\"h-16 bg-muted/30\" />\n          </Card>\n        ))}\n      </div>\n    </div>;\n  }\n\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Biens immobiliers</CardTitle>\n          <Home className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{stats.totalProperties}</div>\n          <p className=\"text-xs text-muted-foreground mt-1\">\n            {stats.pendingProperties} en attente de validation\n          </p>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Utilisateurs</CardTitle>\n          <Users className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{stats.totalUsers}</div>\n          <p className=\"text-xs text-muted-foreground mt-1\">\n            Inscrits sur la plateforme\n          </p>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Baux</CardTitle>\n          <FileText className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{stats.totalLeases}</div>\n          <p className=\"text-xs text-muted-foreground mt-1\">\n            Total des baux\n          </p>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Baux certifiés</CardTitle>\n          <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">{stats.certifiedLeases}</div>\n          <p className=\"text-xs text-muted-foreground mt-1\">\n            {stats.totalLeases > 0 ? Math.round((stats.certifiedLeases / stats.totalLeases) * 100) : 0}% du total\n          </p>\n        </CardContent>\n      </Card>\n\n      <Card className={securityStats.failedLogins >= 3 || securityStats.massActions > 0 ? 'border-destructive' : ''}>\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Sécurité (24h)</CardTitle>\n          {securityStats.failedLogins >= 3 || securityStats.massActions > 0 ? (\n            <AlertTriangle className=\"h-4 w-4 text-destructive\" />\n          ) : (\n            <Shield className=\"h-4 w-4 text-muted-foreground\" />\n          )}\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-xs text-muted-foreground\">Échecs connexion</span>\n              <span className={`text-sm font-medium ${securityStats.failedLogins >= 3 ? 'text-destructive' : ''}`}>\n                {securityStats.failedLogins}\n              </span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-xs text-muted-foreground\">Actions massives</span>\n              <span className={`text-sm font-medium ${securityStats.massActions > 0 ? 'text-destructive' : ''}`}>\n                {securityStats.massActions}\n              </span>\n            </div>\n            {securityStats.lastSuspiciousAction && (\n              <p className=\"text-xs text-muted-foreground truncate\">\n                Dernière: {securityStats.lastSuspiciousAction}\n              </p>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default AdminStats;\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(\n  ({ className, ...props }, ref) => (\n    <div className=\"relative w-full overflow-auto\">\n      <table ref={ref} className={cn(\"w-full caption-bottom text-sm\", className)} {...props} />\n    </div>\n  ),\n);\nTable.displayName = \"Table\";\n\nconst TableHeader = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(\n  ({ className, ...props }, ref) => <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />,\n);\nTableHeader.displayName = \"TableHeader\";\n\nconst TableBody = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(\n  ({ className, ...props }, ref) => (\n    <tbody ref={ref} className={cn(\"[&_tr:last-child]:border-0\", className)} {...props} />\n  ),\n);\nTableBody.displayName = \"TableBody\";\n\nconst TableFooter = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(\n  ({ className, ...props }, ref) => (\n    <tfoot ref={ref} className={cn(\"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\", className)} {...props} />\n  ),\n);\nTableFooter.displayName = \"TableFooter\";\n\nconst TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(\n  ({ className, ...props }, ref) => (\n    <tr\n      ref={ref}\n      className={cn(\"border-b transition-colors data-[state=selected]:bg-muted hover:bg-muted/50\", className)}\n      {...props}\n    />\n  ),\n);\nTableRow.displayName = \"TableRow\";\n\nconst TableHead = React.forwardRef<HTMLTableCellElement, React.ThHTMLAttributes<HTMLTableCellElement>>(\n  ({ className, ...props }, ref) => (\n    <th\n      ref={ref}\n      className={cn(\n        \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nTableHead.displayName = \"TableHead\";\n\nconst TableCell = React.forwardRef<HTMLTableCellElement, React.TdHTMLAttributes<HTMLTableCellElement>>(\n  ({ className, ...props }, ref) => (\n    <td ref={ref} className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)} {...props} />\n  ),\n);\nTableCell.displayName = \"TableCell\";\n\nconst TableCaption = React.forwardRef<HTMLTableCaptionElement, React.HTMLAttributes<HTMLTableCaptionElement>>(\n  ({ className, ...props }, ref) => (\n    <caption ref={ref} className={cn(\"mt-4 text-sm text-muted-foreground\", className)} {...props} />\n  ),\n);\nTableCaption.displayName = \"TableCaption\";\n\nexport { Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption };\n","import * as React from \"react\";\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport { Circle } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return <RadioGroupPrimitive.Root className={cn(\"grid gap-2\", className)} {...props} ref={ref} />;\n});\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName;\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className,\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  );\n});\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName;\n\nexport { RadioGroup, RadioGroupItem };\n","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogDescription } from '@/components/ui/dialog';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { CheckCircle, XCircle, Eye, CheckSquare, Square, Edit, Archive, Trash2 } from 'lucide-react';\nimport { toast } from '@/hooks/use-toast';\nimport { Link } from 'react-router-dom';\nimport { logger } from '@/services/logger';\nimport type { Property as PropertyType } from '@/types';\nimport { PROPERTY_STATUS_LABELS, PROPERTY_STATUS_COLORS } from '@/constants';\n\ntype Property = Pick<PropertyType, \n  'id' | 'title' | 'city' | 'monthly_rent' | 'status' | 'created_at' | 'owner_id'\n> & {\n  profiles: {\n    full_name: string;\n  };\n};\n\nconst AdminProperties = () => {\n  const [properties, setProperties] = useState<Property[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedProperties, setSelectedProperties] = useState<string[]>([]);\n  \n  // Bulk action dialogs\n  const [showStatusDialog, setShowStatusDialog] = useState(false);\n  const [showRentDialog, setShowRentDialog] = useState(false);\n  const [showArchiveDialog, setShowArchiveDialog] = useState(false);\n  \n  // Bulk action values\n  const [bulkStatus, setBulkStatus] = useState('disponible');\n  const [rentModificationType, setRentModificationType] = useState<'fixed' | 'percentage'>('percentage');\n  const [rentModificationValue, setRentModificationValue] = useState('');\n  const [confirmationChecked, setConfirmationChecked] = useState(false);\n\n  useEffect(() => {\n    fetchProperties();\n  }, []);\n\n  const fetchProperties = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('properties')\n        .select(`\n          id,\n          title,\n          city,\n          monthly_rent,\n          status,\n          created_at,\n          owner_id\n        `)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      // Fetch profiles separately\n      if (data && data.length > 0) {\n        const ownerIds = [...new Set(data.map(p => p.owner_id))];\n        const { data: profilesData } = await supabase\n          .from('profiles')\n          .select('id, full_name')\n          .in('id', ownerIds);\n\n        const profilesMap = new Map(profilesData?.map(p => [p.id, p]) || []);\n        \n        const propertiesWithProfiles = data.map(property => ({\n          ...property,\n          profiles: profilesMap.get(property.owner_id) || { full_name: 'Inconnu' }\n        }));\n\n        setProperties(propertiesWithProfiles);\n      } else {\n        setProperties([]);\n      }\n    } catch (error) {\n      logger.error('Failed to fetch properties for admin', { error });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger les biens',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updatePropertyStatus = async (propertyId: string, newStatus: string) => {\n    try {\n      const { error } = await supabase\n        .from('properties')\n        .update({ status: newStatus })\n        .eq('id', propertyId);\n\n      if (error) throw error;\n\n      toast({\n        title: 'Succès',\n        description: `Bien ${newStatus === 'disponible' ? 'approuvé' : 'rejeté'}`,\n      });\n\n      fetchProperties();\n    } catch (error) {\n      logger.error('Failed to update property status', { error, propertyId, newStatus });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de mettre à jour le bien',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Bulk selection handlers\n  const toggleSelectAll = () => {\n    if (selectedProperties.length === properties.length) {\n      setSelectedProperties([]);\n    } else {\n      setSelectedProperties(properties.map(p => p.id));\n    }\n  };\n\n  const toggleSelectProperty = (propertyId: string) => {\n    setSelectedProperties(prev => \n      prev.includes(propertyId) \n        ? prev.filter(id => id !== propertyId)\n        : [...prev, propertyId]\n    );\n  };\n\n  const clearSelection = () => {\n    setSelectedProperties([]);\n    setConfirmationChecked(false);\n  };\n\n  // Bulk actions\n  const handleBulkStatusChange = async () => {\n    if (!confirmationChecked) return;\n\n    try {\n      const { error } = await supabase\n        .from('properties')\n        .update({ status: bulkStatus })\n        .in('id', selectedProperties);\n\n      if (error) throw error;\n\n      // Log audit\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        await supabase.from('admin_audit_logs').insert({\n          admin_id: user.id,\n          action_type: 'bulk_property_update',\n          target_type: 'properties',\n          target_id: selectedProperties[0],\n          notes: `Statut modifié pour ${selectedProperties.length} propriétés`,\n          new_values: { status: bulkStatus, count: selectedProperties.length }\n        });\n      }\n\n      toast({\n        title: 'Succès',\n        description: `${selectedProperties.length} propriété(s) mise(s) à jour`,\n      });\n\n      setShowStatusDialog(false);\n      clearSelection();\n      fetchProperties();\n    } catch (error) {\n      logger.error('Bulk status update failed', { error });\n      toast({\n        title: 'Erreur',\n        description: 'Échec de la modification groupée',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleBulkRentChange = async () => {\n    if (!confirmationChecked || !rentModificationValue) return;\n\n    try {\n      const selectedProps = properties.filter(p => selectedProperties.includes(p.id));\n      const updates = selectedProps.map(prop => {\n        const currentRent = prop.monthly_rent;\n        const newRent = rentModificationType === 'percentage'\n          ? currentRent * (1 + parseFloat(rentModificationValue) / 100)\n          : currentRent + parseFloat(rentModificationValue);\n        \n        return {\n          id: prop.id,\n          monthly_rent: Math.round(newRent)\n        };\n      });\n\n      // Update each property\n      for (const update of updates) {\n        const { error } = await supabase\n          .from('properties')\n          .update({ monthly_rent: update.monthly_rent })\n          .eq('id', update.id);\n        \n        if (error) throw error;\n      }\n\n      // Log audit\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        await supabase.from('admin_audit_logs').insert({\n          admin_id: user.id,\n          action_type: 'bulk_property_update',\n          target_type: 'properties',\n          target_id: selectedProperties[0],\n          notes: `Loyer modifié pour ${selectedProperties.length} propriétés (${rentModificationType}: ${rentModificationValue})`,\n          new_values: { type: rentModificationType, value: rentModificationValue, count: selectedProperties.length }\n        });\n      }\n\n      toast({\n        title: 'Succès',\n        description: `Loyer mis à jour pour ${selectedProperties.length} propriété(s)`,\n      });\n\n      setShowRentDialog(false);\n      clearSelection();\n      setRentModificationValue('');\n      fetchProperties();\n    } catch (error) {\n      logger.error('Bulk rent update failed', { error });\n      toast({\n        title: 'Erreur',\n        description: 'Échec de la modification des loyers',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleBulkArchive = async () => {\n    if (!confirmationChecked) return;\n\n    try {\n      const { error } = await supabase\n        .from('properties')\n        .update({ status: 'archivé' })\n        .in('id', selectedProperties);\n\n      if (error) throw error;\n\n      // Log audit\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        await supabase.from('admin_audit_logs').insert({\n          admin_id: user.id,\n          action_type: 'bulk_property_update',\n          target_type: 'properties',\n          target_id: selectedProperties[0],\n          notes: `${selectedProperties.length} propriétés archivées`,\n          new_values: { status: 'archivé', count: selectedProperties.length }\n        });\n      }\n\n      toast({\n        title: 'Succès',\n        description: `${selectedProperties.length} propriété(s) archivée(s)`,\n      });\n\n      setShowArchiveDialog(false);\n      clearSelection();\n      fetchProperties();\n    } catch (error) {\n      logger.error('Bulk archive failed', { error });\n      toast({\n        title: 'Erreur',\n        description: \"Échec de l'archivage groupé\",\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const getPreviewData = () => {\n    return properties\n      .filter(p => selectedProperties.includes(p.id))\n      .map(prop => {\n        if (showStatusDialog) {\n          return {\n            title: prop.title,\n            current: PROPERTY_STATUS_LABELS[prop.status] || prop.status,\n            new: PROPERTY_STATUS_LABELS[bulkStatus] || bulkStatus\n          };\n        } else if (showRentDialog && rentModificationValue) {\n          const currentRent = prop.monthly_rent;\n          const newRent = rentModificationType === 'percentage'\n            ? currentRent * (1 + parseFloat(rentModificationValue) / 100)\n            : currentRent + parseFloat(rentModificationValue);\n          return {\n            title: prop.title,\n            current: `${currentRent.toLocaleString()} FCFA`,\n            new: `${Math.round(newRent).toLocaleString()} FCFA`\n          };\n        } else if (showArchiveDialog) {\n          return {\n            title: prop.title,\n            current: PROPERTY_STATUS_LABELS[prop.status] || prop.status,\n            new: 'Archivé'\n          };\n        }\n        return null;\n      })\n      .filter(Boolean);\n  };\n\n  const getStatusBadge = (status: string) => {\n    const variant = status === 'disponible' ? 'default' : status === 'refuse' ? 'destructive' : 'outline';\n    return <Badge variant={variant}>{PROPERTY_STATUS_LABELS[status] || status}</Badge>;\n  };\n\n  if (loading) {\n    return <div className=\"flex items-center justify-center py-8\">\n      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n    </div>;\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <CardTitle>Gestion des biens immobiliers</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {selectedProperties.length > 0 && (\n            <Alert className=\"mb-4 border-primary\">\n              <AlertDescription className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <CheckSquare className=\"h-4 w-4\" />\n                  <span className=\"font-medium\">{selectedProperties.length} propriété(s) sélectionnée(s)</span>\n                </div>\n                <div className=\"flex gap-2\">\n                  <Button variant=\"outline\" size=\"sm\" onClick={clearSelection}>\n                    Désélectionner tout\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" onClick={() => setShowStatusDialog(true)}>\n                    <Edit className=\"h-4 w-4 mr-1\" />\n                    Changer statut\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" onClick={() => setShowRentDialog(true)}>\n                    <Edit className=\"h-4 w-4 mr-1\" />\n                    Modifier loyer\n                  </Button>\n                  <Button variant=\"destructive\" size=\"sm\" onClick={() => setShowArchiveDialog(true)}>\n                    <Archive className=\"h-4 w-4 mr-1\" />\n                    Archiver\n                  </Button>\n                </div>\n              </AlertDescription>\n            </Alert>\n          )}\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead className=\"w-12\">\n                  <Checkbox\n                    checked={selectedProperties.length === properties.length && properties.length > 0}\n                    onCheckedChange={toggleSelectAll}\n                  />\n                </TableHead>\n                <TableHead>Titre</TableHead>\n                <TableHead>Propriétaire</TableHead>\n                <TableHead>Ville</TableHead>\n                <TableHead>Loyer</TableHead>\n                <TableHead>Statut</TableHead>\n                <TableHead>Date</TableHead>\n                <TableHead className=\"text-right\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {properties.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={8} className=\"text-center text-muted-foreground\">\n                    Aucun bien trouvé\n                  </TableCell>\n                </TableRow>\n              ) : (\n                properties.map((property) => (\n                  <TableRow key={property.id}>\n                    <TableCell>\n                      <Checkbox\n                        checked={selectedProperties.includes(property.id)}\n                        onCheckedChange={() => toggleSelectProperty(property.id)}\n                      />\n                    </TableCell>\n                    <TableCell className=\"font-medium\">{property.title}</TableCell>\n                    <TableCell>{property.profiles.full_name}</TableCell>\n                    <TableCell>{property.city}</TableCell>\n                    <TableCell>{property.monthly_rent.toLocaleString()} FCFA</TableCell>\n                    <TableCell>{getStatusBadge(property.status)}</TableCell>\n                    <TableCell>{new Date(property.created_at).toLocaleDateString('fr-FR')}</TableCell>\n                    <TableCell className=\"text-right\">\n                      <div className=\"flex gap-2 justify-end\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          asChild\n                        >\n                          <Link to={`/property/${property.id}`}>\n                            <Eye className=\"h-4 w-4\" />\n                          </Link>\n                        </Button>\n                        {property.status === 'en_attente' && (\n                          <>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => updatePropertyStatus(property.id, 'disponible')}\n                            >\n                              <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => updatePropertyStatus(property.id, 'refuse')}\n                            >\n                              <XCircle className=\"h-4 w-4 text-red-600\" />\n                            </Button>\n                          </>\n                        )}\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n\n      {/* Dialog: Changer le statut */}\n      <Dialog open={showStatusDialog} onOpenChange={setShowStatusDialog}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Modifier le statut de {selectedProperties.length} propriété(s)</DialogTitle>\n            <DialogDescription>\n              Sélectionnez le nouveau statut à appliquer aux propriétés sélectionnées\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <Label>Nouveau statut</Label>\n              <Select value={bulkStatus} onValueChange={setBulkStatus}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"disponible\">Disponible</SelectItem>\n                  <SelectItem value=\"loué\">Loué</SelectItem>\n                  <SelectItem value=\"en_attente\">En attente</SelectItem>\n                  <SelectItem value=\"archivé\">Archivé</SelectItem>\n                  <SelectItem value=\"refuse\">Refusé</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            {getPreviewData().length > 0 && (\n              <div className=\"border rounded-lg p-3 max-h-64 overflow-y-auto\">\n                <p className=\"text-sm font-medium mb-2\">Aperçu des modifications :</p>\n                <div className=\"space-y-2\">\n                  {getPreviewData().map((item: any, idx) => (\n                    <div key={idx} className=\"text-xs border-b pb-2 last:border-0\">\n                      <p className=\"font-medium\">{item.title}</p>\n                      <p className=\"text-muted-foreground\">\n                        <span>{item.current}</span> → <span className=\"text-primary font-medium\">{item.new}</span>\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"confirm-status\"\n                checked={confirmationChecked}\n                onCheckedChange={(checked) => setConfirmationChecked(checked as boolean)}\n              />\n              <Label htmlFor=\"confirm-status\" className=\"text-sm cursor-pointer\">\n                Je confirme ces modifications\n              </Label>\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => { setShowStatusDialog(false); setConfirmationChecked(false); }}>\n              Annuler\n            </Button>\n            <Button onClick={handleBulkStatusChange} disabled={!confirmationChecked}>\n              Confirmer les modifications\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Dialog: Modifier le loyer */}\n      <Dialog open={showRentDialog} onOpenChange={setShowRentDialog}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Modifier le loyer de {selectedProperties.length} propriété(s)</DialogTitle>\n            <DialogDescription>\n              Choisissez le type de modification et la valeur\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <Label>Type de modification</Label>\n              <RadioGroup value={rentModificationType} onValueChange={(v) => setRentModificationType(v as 'fixed' | 'percentage')}>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"percentage\" id=\"percentage\" />\n                  <Label htmlFor=\"percentage\" className=\"cursor-pointer\">Pourcentage (%)</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"fixed\" id=\"fixed\" />\n                  <Label htmlFor=\"fixed\" className=\"cursor-pointer\">Montant fixe (FCFA)</Label>\n                </div>\n              </RadioGroup>\n            </div>\n\n            <div>\n              <Label>Valeur {rentModificationType === 'percentage' ? '(%)' : '(FCFA)'}</Label>\n              <Input\n                type=\"number\"\n                value={rentModificationValue}\n                onChange={(e) => setRentModificationValue(e.target.value)}\n                placeholder={rentModificationType === 'percentage' ? 'Ex: 10 pour +10%' : 'Ex: 50000'}\n              />\n            </div>\n\n            {rentModificationValue && getPreviewData().length > 0 && (\n              <div className=\"border rounded-lg p-3 max-h-64 overflow-y-auto\">\n                <p className=\"text-sm font-medium mb-2\">Aperçu des modifications :</p>\n                <div className=\"space-y-2\">\n                  {getPreviewData().map((item: any, idx) => (\n                    <div key={idx} className=\"text-xs border-b pb-2 last:border-0\">\n                      <p className=\"font-medium\">{item.title}</p>\n                      <p className=\"text-muted-foreground\">\n                        <span>{item.current}</span> → <span className=\"text-primary font-medium\">{item.new}</span>\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"confirm-rent\"\n                checked={confirmationChecked}\n                onCheckedChange={(checked) => setConfirmationChecked(checked as boolean)}\n              />\n              <Label htmlFor=\"confirm-rent\" className=\"text-sm cursor-pointer\">\n                Je confirme ces modifications\n              </Label>\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => { setShowRentDialog(false); setConfirmationChecked(false); setRentModificationValue(''); }}>\n              Annuler\n            </Button>\n            <Button onClick={handleBulkRentChange} disabled={!confirmationChecked || !rentModificationValue}>\n              Confirmer les modifications\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Dialog: Archiver */}\n      <Dialog open={showArchiveDialog} onOpenChange={setShowArchiveDialog}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Archiver {selectedProperties.length} propriété(s)</DialogTitle>\n            <DialogDescription className=\"text-destructive\">\n              Attention : Cette action marquera les propriétés comme archivées. Elles ne seront plus visibles dans les recherches publiques.\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"space-y-4\">\n            {getPreviewData().length > 0 && (\n              <div className=\"border rounded-lg p-3 max-h-64 overflow-y-auto\">\n                <p className=\"text-sm font-medium mb-2\">Propriétés concernées :</p>\n                <div className=\"space-y-2\">\n                  {getPreviewData().map((item: any, idx) => (\n                    <div key={idx} className=\"text-xs border-b pb-2 last:border-0\">\n                      <p className=\"font-medium\">{item.title}</p>\n                      <p className=\"text-muted-foreground\">\n                        <span>{item.current}</span> → <span className=\"text-destructive font-medium\">{item.new}</span>\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"confirm-archive\"\n                checked={confirmationChecked}\n                onCheckedChange={(checked) => setConfirmationChecked(checked as boolean)}\n              />\n              <Label htmlFor=\"confirm-archive\" className=\"text-sm cursor-pointer\">\n                Je confirme vouloir archiver ces propriétés\n              </Label>\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => { setShowArchiveDialog(false); setConfirmationChecked(false); }}>\n              Annuler\n            </Button>\n            <Button variant=\"destructive\" onClick={handleBulkArchive} disabled={!confirmationChecked}>\n              Archiver les propriétés\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default AdminProperties;\n","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { CheckCircle, XCircle } from 'lucide-react';\nimport { handleError } from '@/lib/errorHandler';\n\ntype User = {\n  id: string;\n  full_name: string;\n  user_type: string;\n  city: string | null;\n  is_verified: boolean;\n  oneci_verified: boolean;\n  cnam_verified: boolean;\n  created_at: string;\n};\n\nconst AdminUsers = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setUsers(data || []);\n    } catch (error) {\n      handleError(error, 'Impossible de charger les utilisateurs');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getUserTypeBadge = (userType: string) => {\n    const labels: Record<string, string> = {\n      'locataire': 'Locataire',\n      'proprietaire': 'Propriétaire',\n      'agence': 'Agence',\n      'admin_ansut': 'Admin ANSUT',\n    };\n\n    return <Badge variant=\"outline\">{labels[userType] || userType}</Badge>;\n  };\n\n  if (loading) {\n    return <div className=\"flex items-center justify-center py-8\">\n      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n    </div>;\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Gestion des utilisateurs</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Nom</TableHead>\n              <TableHead>Type</TableHead>\n              <TableHead>Ville</TableHead>\n              <TableHead>ONECI</TableHead>\n              <TableHead>CNAM</TableHead>\n              <TableHead>Vérifié</TableHead>\n              <TableHead>Date d'inscription</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {users.length === 0 ? (\n              <TableRow>\n                <TableCell colSpan={7} className=\"text-center text-muted-foreground\">\n                  Aucun utilisateur trouvé\n                </TableCell>\n              </TableRow>\n            ) : (\n              users.map((user) => (\n                <TableRow key={user.id}>\n                  <TableCell className=\"font-medium\">{user.full_name}</TableCell>\n                  <TableCell>{getUserTypeBadge(user.user_type)}</TableCell>\n                  <TableCell>{user.city || '-'}</TableCell>\n                  <TableCell>\n                    {user.oneci_verified ? (\n                      <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                    ) : (\n                      <XCircle className=\"h-5 w-5 text-muted-foreground\" />\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {user.cnam_verified ? (\n                      <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                    ) : (\n                      <XCircle className=\"h-5 w-5 text-muted-foreground\" />\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {user.is_verified ? (\n                      <Badge variant=\"default\">Vérifié</Badge>\n                    ) : (\n                      <Badge variant=\"secondary\">Non vérifié</Badge>\n                    )}\n                  </TableCell>\n                  <TableCell>{new Date(user.created_at).toLocaleDateString('fr-FR')}</TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AdminUsers;\n","import { Shield, CheckCircle, Clock, XCircle } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\n\ninterface ANSUTCertifiedBadgeProps {\n  status: 'not_requested' | 'pending' | 'certified' | 'rejected';\n  certifiedAt?: string | null;\n  variant?: 'default' | 'detailed' | 'compact';\n}\n\nconst ANSUTCertifiedBadge = ({ status, certifiedAt, variant = 'default' }: ANSUTCertifiedBadgeProps) => {\n  const getStatusConfig = () => {\n    switch (status) {\n      case 'certified':\n        return {\n          icon: CheckCircle,\n          text: 'Certifié ANSUT',\n          color: 'bg-green-600 hover:bg-green-700',\n          iconColor: 'text-white',\n        };\n      case 'pending':\n        return {\n          icon: Clock,\n          text: 'Certification en cours',\n          color: 'bg-yellow-600 hover:bg-yellow-700',\n          iconColor: 'text-white',\n        };\n      case 'rejected':\n        return {\n          icon: XCircle,\n          text: 'Certification refusée',\n          color: 'bg-red-600 hover:bg-red-700',\n          iconColor: 'text-white',\n        };\n      default:\n        return {\n          icon: Shield,\n          text: 'Non certifié',\n          color: 'bg-muted hover:bg-muted/80',\n          iconColor: 'text-muted-foreground',\n        };\n    }\n  };\n\n  const config = getStatusConfig();\n  const Icon = config.icon;\n\n  if (variant === 'compact') {\n    return (\n      <Badge className={`${config.color} gap-1.5 text-xs px-2 py-1`}>\n        <Icon className=\"h-3 w-3\" />\n        <span>ANSUT</span>\n      </Badge>\n    );\n  }\n\n  if (variant === 'detailed') {\n    return (\n      <div className={`inline-flex items-center gap-2 ${config.color} px-4 py-2 rounded-lg text-white transition-smooth`}>\n        <Icon className=\"h-5 w-5\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-sm font-semibold\">{config.text}</span>\n          {status === 'certified' && certifiedAt && (\n            <span className=\"text-xs opacity-90\">\n              Le {new Date(certifiedAt).toLocaleDateString('fr-FR')}\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <TooltipProvider>\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <Badge className={`${config.color} cursor-help gap-2`}>\n            <Icon className=\"h-4 w-4\" />\n            {config.text}\n          </Badge>\n        </TooltipTrigger>\n        <TooltipContent className=\"max-w-xs\">\n          {status === 'certified' && (\n            <div className=\"space-y-1\">\n              <p className=\"font-semibold\">Bail validé par ANSUT</p>\n              {certifiedAt && (\n                <p className=\"text-xs\">\n                  Certifié le {new Date(certifiedAt).toLocaleDateString('fr-FR', { day: 'numeric', month: 'long', year: 'numeric' })}\n                </p>\n              )}\n              <p className=\"text-xs\">Conforme aux normes légales ivoiriennes</p>\n            </div>\n          )}\n          {status === 'pending' && (\n            <div className=\"space-y-1\">\n              <p className=\"font-semibold\">Certification en cours</p>\n              <p className=\"text-xs\">Demande en cours d'examen (2-5 jours)</p>\n            </div>\n          )}\n          {status === 'rejected' && (\n            <div className=\"space-y-1\">\n              <p className=\"font-semibold\">Certification refusée</p>\n              <p className=\"text-xs\">Consultez les notes pour plus de détails</p>\n            </div>\n          )}\n          {status === 'not_requested' && (\n            <div className=\"space-y-1\">\n              <p className=\"font-semibold\">Pas de certification ANSUT</p>\n              <p className=\"text-xs\">Ce bail n'a pas demandé de certification</p>\n            </div>\n          )}\n        </TooltipContent>\n      </Tooltip>\n    </TooltipProvider>\n  );\n};\n\nexport default ANSUTCertifiedBadge;\n","import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { logger } from '@/services/logger';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { toast } from '@/hooks/use-toast';\nimport { CheckCircle, XCircle, User, Home, FileText, Shield, Loader2 } from 'lucide-react';\nimport ANSUTCertifiedBadge from '@/components/ui/ansut-certified-badge';\n\ninterface LeaseCertificationReviewProps {\n  leaseId: string;\n  open: boolean;\n  onOpenChange?: (open: boolean) => void;\n  onClose?: () => void;\n  onStatusUpdated?: () => void;\n}\n\ninterface LeaseDetails {\n  id: string;\n  property_id: string;\n  landlord_id: string;\n  tenant_id: string;\n  monthly_rent: number;\n  deposit_amount: number;\n  start_date: string;\n  end_date: string;\n  certification_status: 'not_requested' | 'pending' | 'certified' | 'rejected';\n  certification_notes: string | null;\n  landlord_signed_at: string | null;\n  tenant_signed_at: string | null;\n  ansut_certified_at: string | null;\n  property: {\n    title: string;\n    address: string;\n    city: string;\n  } | null;\n  landlord: {\n    full_name: string;\n    oneci_verified: boolean;\n    cnam_verified: boolean;\n  } | null;\n  tenant: {\n    full_name: string;\n    oneci_verified: boolean;\n    cnam_verified: boolean;\n  } | null;\n}\n\nconst LeaseCertificationReview = ({ leaseId, open, onOpenChange, onClose, onStatusUpdated }: LeaseCertificationReviewProps) => {\n  const handleClose = () => {\n    if (onClose) onClose();\n    if (onOpenChange) onOpenChange(false);\n  };\n  const [lease, setLease] = useState<LeaseDetails | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [actionLoading, setActionLoading] = useState(false);\n  const [adminNotes, setAdminNotes] = useState('');\n\n  useEffect(() => {\n    if (open && leaseId) {\n      fetchLeaseDetails();\n    }\n  }, [open, leaseId]);\n\n  const fetchLeaseDetails = async () => {\n    setLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from('leases')\n        .select(`\n          *,\n          property:properties!leases_property_id_fkey(title, address, city),\n          landlord:profiles!leases_landlord_id_fkey(full_name, oneci_verified, cnam_verified),\n          tenant:profiles!leases_tenant_id_fkey(full_name, oneci_verified, cnam_verified)\n        `)\n        .eq('id', leaseId)\n        .single();\n\n      if (error) throw error;\n      setLease(data as unknown as LeaseDetails);\n      setAdminNotes(data.certification_notes || '');\n    } catch (error) {\n      logger.error('Error fetching lease', { error, leaseId });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger les détails du bail',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCertification = async (action: 'approve' | 'reject' | 'request_changes') => {\n    setActionLoading(true);\n    try {\n      let status: 'certified' | 'rejected' | 'in_review';\n      let actionType: string;\n      \n      switch (action) {\n        case 'approve':\n          status = 'certified';\n          actionType = 'approved';\n          break;\n        case 'reject':\n          status = 'rejected';\n          actionType = 'rejected';\n          break;\n        case 'request_changes':\n          status = 'in_review';\n          actionType = 'requested_changes';\n          break;\n      }\n\n      const updateData: {\n        certification_status: 'certified' | 'rejected' | 'in_review';\n        certification_notes: string | null;\n        ansut_certified_at?: string;\n      } = {\n        certification_status: status,\n        certification_notes: adminNotes.trim() || null,\n      };\n\n      if (action === 'approve') {\n        updateData.ansut_certified_at = new Date().toISOString();\n      }\n\n      const { error } = await supabase\n        .from('leases')\n        .update(updateData)\n        .eq('id', leaseId);\n\n      if (error) throw error;\n\n      // Log history\n      const { data: userData } = await supabase.auth.getUser();\n      if (userData.user) {\n        await supabase.from('lease_certification_history').insert({\n          lease_id: leaseId,\n          admin_id: userData.user.id,\n          action: actionType,\n          status: status,\n          notes: adminNotes.trim() || null,\n        });\n      }\n\n      // Envoyer l'email de notification\n      try {\n        const emailAction = action === 'approve' ? 'approved' : action === 'reject' ? 'rejected' : 'request_changes';\n        await supabase.functions.invoke('send-certification-email', {\n          body: {\n            leaseId,\n            action: emailAction,\n            notes: adminNotes,\n          },\n        });\n      } catch (emailError) {\n        logger.error('Error sending certification email', { error: emailError });\n        // Ne pas bloquer la certification si l'email échoue\n      }\n\n      toast({\n        title: action === 'approve' \n          ? '✅ Bail certifié avec succès' \n          : action === 'reject'\n          ? '❌ Certification refusée'\n          : '⚠️ Modifications demandées',\n        description: action === 'approve'\n          ? 'Le bail a été certifié par l\\'ANSUT. Les parties ont été notifiées par email.'\n          : action === 'reject'\n          ? 'La demande de certification a été refusée. Les parties ont été notifiées.'\n          : 'Des modifications ont été demandées aux parties.',\n      });\n\n      onOpenChange(false);\n      onStatusUpdated?.();\n    } catch (error) {\n      logger.error('Error updating certification', { error, leaseId, action });\n      toast({\n        title: 'Erreur',\n        description: error instanceof Error ? error.message : 'Impossible de mettre à jour la certification',\n        variant: 'destructive',\n      });\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  if (loading) {\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange || handleClose}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <div className=\"flex items-center justify-center py-8\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  if (!lease) return null;\n\n  const isFullySigned = lease.landlord_signed_at && lease.tenant_signed_at;\n  const bothVerified = lease.landlord?.oneci_verified && lease.tenant?.oneci_verified;\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Shield className=\"h-5 w-5 text-secondary\" />\n            Examen de Certification ANSUT\n          </DialogTitle>\n          <DialogDescription>\n            Examinez le dossier complet avant de certifier le bail\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Status actuel */}\n          <div>\n            <ANSUTCertifiedBadge \n              status={lease.certification_status}\n              certifiedAt={lease.ansut_certified_at}\n              variant=\"detailed\"\n            />\n          </div>\n\n          {/* Informations bien */}\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center gap-2 text-sm font-semibold\">\n              <Home className=\"h-4 w-4\" />\n              Bien Immobilier\n            </div>\n            <div className=\"bg-muted p-4 rounded-lg space-y-2\">\n              <p className=\"font-medium\">{lease.property?.title || 'N/A'}</p>\n              <p className=\"text-sm text-muted-foreground\">\n                {lease.property?.address || 'N/A'}, {lease.property?.city || 'N/A'}\n              </p>\n              <div className=\"flex gap-4 text-sm\">\n                <span>Loyer: {lease.monthly_rent.toLocaleString()} FCFA/mois</span>\n                {lease.deposit_amount && (\n                  <span>Caution: {lease.deposit_amount.toLocaleString()} FCFA</span>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Parties */}\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            {/* Propriétaire */}\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center gap-2 text-sm font-semibold\">\n                <User className=\"h-4 w-4\" />\n                Propriétaire\n              </div>\n              <div className=\"bg-muted p-4 rounded-lg space-y-2\">\n                <p className=\"font-medium\">{lease.landlord?.full_name || 'N/A'}</p>\n                <div className=\"space-y-1 text-sm\">\n                  <div className=\"flex items-center gap-2\">\n                    {lease.landlord?.oneci_verified ? (\n                      <Badge className=\"bg-green-600\">ONECI Vérifié</Badge>\n                    ) : (\n                      <Badge variant=\"outline\">ONECI Non vérifié</Badge>\n                    )}\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    {lease.landlord?.cnam_verified ? (\n                      <Badge className=\"bg-green-600\">CNAM Vérifié</Badge>\n                    ) : (\n                      <Badge variant=\"outline\">CNAM Non vérifié</Badge>\n                    )}\n                  </div>\n                  <div className=\"flex items-center gap-2 mt-2\">\n                    {lease.landlord_signed_at ? (\n                      <Badge className=\"bg-blue-600\">\n                        Signé le {new Date(lease.landlord_signed_at).toLocaleDateString('fr-FR')}\n                      </Badge>\n                    ) : (\n                      <Badge variant=\"destructive\">Non signé</Badge>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Locataire */}\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center gap-2 text-sm font-semibold\">\n                <User className=\"h-4 w-4\" />\n                Locataire\n              </div>\n              <div className=\"bg-muted p-4 rounded-lg space-y-2\">\n                <p className=\"font-medium\">{lease.tenant?.full_name || 'N/A'}</p>\n                <div className=\"space-y-1 text-sm\">\n                  <div className=\"flex items-center gap-2\">\n                    {lease.tenant?.oneci_verified ? (\n                      <Badge className=\"bg-green-600\">ONECI Vérifié</Badge>\n                    ) : (\n                      <Badge variant=\"outline\">ONECI Non vérifié</Badge>\n                    )}\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    {lease.tenant?.cnam_verified ? (\n                      <Badge className=\"bg-green-600\">CNAM Vérifié</Badge>\n                    ) : (\n                      <Badge variant=\"outline\">CNAM Non vérifié</Badge>\n                    )}\n                  </div>\n                  <div className=\"flex items-center gap-2 mt-2\">\n                    {lease.tenant_signed_at ? (\n                      <Badge className=\"bg-blue-600\">\n                        Signé le {new Date(lease.tenant_signed_at).toLocaleDateString('fr-FR')}\n                      </Badge>\n                    ) : (\n                      <Badge variant=\"destructive\">Non signé</Badge>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Vérifications */}\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center gap-2 text-sm font-semibold\">\n              <FileText className=\"h-4 w-4\" />\n              Critères de Certification\n            </div>\n            <div className=\"bg-muted p-4 rounded-lg space-y-2 text-sm\">\n              <div className=\"flex items-center justify-between\">\n                <span>Bail signé par les deux parties</span>\n                {isFullySigned ? (\n                  <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                ) : (\n                  <XCircle className=\"h-4 w-4 text-red-600\" />\n                )}\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span>Identités vérifiées (ONECI)</span>\n                {bothVerified ? (\n                  <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                ) : (\n                  <XCircle className=\"h-4 w-4 text-red-600\" />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <Separator />\n\n          {/* Notes */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"admin-notes\">\n              Notes de certification (visibles par les parties)\n            </Label>\n            <Textarea\n              id=\"admin-notes\"\n              value={adminNotes}\n              onChange={(e) => setAdminNotes(e.target.value)}\n              placeholder=\"Ajoutez vos observations ou commentaires...\"\n              rows={4}\n            />\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex justify-end gap-2\">\n            <Button\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n              disabled={actionLoading}\n            >\n              Fermer\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={() => handleCertification('request_changes')}\n              disabled={actionLoading}\n              className=\"border-warning text-warning hover:bg-warning/10 gap-2\"\n            >\n              {actionLoading && <Loader2 className=\"h-4 w-4 animate-spin\" />}\n              Demander modifications\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={() => handleCertification('reject')}\n              disabled={actionLoading}\n              className=\"gap-2\"\n            >\n              {actionLoading ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <XCircle className=\"h-4 w-4\" />}\n              Refuser\n            </Button>\n            <Button\n              onClick={() => handleCertification('approve')}\n              disabled={actionLoading || !isFullySigned}\n              className=\"gap-2\"\n            >\n              {actionLoading ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <CheckCircle className=\"h-4 w-4\" />}\n              Certifier\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default LeaseCertificationReview;\n","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { logger } from '@/services/logger';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { CheckCircle, Eye } from 'lucide-react';\nimport { toast } from '@/hooks/use-toast';\nimport LeaseCertificationReview from '@/components/admin/LeaseCertificationReview';\nimport ANSUTCertifiedBadge from '@/components/ui/ansut-certified-badge';\n\ntype Lease = {\n  id: string;\n  property_id: string;\n  monthly_rent: number;\n  status: string;\n  lease_type: string;\n  ansut_certified_at: string | null;\n  certification_status: 'not_requested' | 'pending' | 'certified' | 'rejected';\n  certification_requested_at: string | null;\n  created_at: string;\n  properties: {\n    title: string;\n  } | null;\n  tenant: {\n    full_name: string;\n  } | null;\n  landlord: {\n    full_name: string;\n  } | null;\n};\n\nconst AdminLeases = () => {\n  const [leases, setLeases] = useState<Lease[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedLeaseId, setSelectedLeaseId] = useState<string | null>(null);\n  const [reviewDialogOpen, setReviewDialogOpen] = useState(false);\n\n  useEffect(() => {\n    fetchLeases();\n  }, []);\n\n  const fetchLeases = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('leases')\n        .select(`\n          id,\n          property_id,\n          monthly_rent,\n          status,\n          lease_type,\n          ansut_certified_at,\n          certification_status,\n          certification_requested_at,\n          created_at,\n          properties:property_id (title),\n          tenant:tenant_id (full_name),\n          landlord:landlord_id (full_name)\n        `)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setLeases((data || []) as unknown as Lease[]);\n    } catch (error) {\n      logger.error('Error fetching leases', { error });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger les baux',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleReviewLease = (leaseId: string) => {\n    setSelectedLeaseId(leaseId);\n    setReviewDialogOpen(true);\n  };\n\n  const certifyLease = async (leaseId: string) => {\n    try {\n      const { error } = await supabase\n        .from('leases')\n        .update({ \n          ansut_certified_at: new Date().toISOString(),\n          status: 'active'\n        })\n        .eq('id', leaseId);\n\n      if (error) throw error;\n\n      toast({\n        title: 'Succès',\n        description: 'Bail certifié par l\\'ANSUT',\n      });\n\n      fetchLeases();\n    } catch (error) {\n      logger.error('Error certifying lease', { error, leaseId });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de certifier le bail',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const variants: Record<string, 'default' | 'secondary' | 'destructive' | 'outline'> = {\n      'draft': 'secondary',\n      'pending': 'secondary',\n      'active': 'default',\n      'terminated': 'outline',\n    };\n\n    const labels: Record<string, string> = {\n      'draft': 'Brouillon',\n      'pending': 'En attente',\n      'active': 'Actif',\n      'terminated': 'Terminé',\n    };\n\n    return <Badge variant={variants[status] || 'outline'}>{labels[status] || status}</Badge>;\n  };\n\n  if (loading) {\n    return <div className=\"flex items-center justify-center py-8\">\n      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n    </div>;\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Gestion des baux</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Bien</TableHead>\n              <TableHead>Propriétaire</TableHead>\n              <TableHead>Locataire</TableHead>\n              <TableHead>Loyer</TableHead>\n              <TableHead>Type</TableHead>\n              <TableHead>Statut</TableHead>\n              <TableHead>Certification</TableHead>\n              <TableHead className=\"text-right\">Actions</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {leases.length === 0 ? (\n              <TableRow>\n                <TableCell colSpan={8} className=\"text-center text-muted-foreground\">\n                  Aucun bail trouvé\n                </TableCell>\n              </TableRow>\n            ) : (\n              leases.map((lease) => (\n                <TableRow key={lease.id}>\n                  <TableCell className=\"font-medium\">{lease.properties?.title || 'N/A'}</TableCell>\n                  <TableCell>{lease.landlord?.full_name || 'N/A'}</TableCell>\n                  <TableCell>{lease.tenant?.full_name || 'N/A'}</TableCell>\n                  <TableCell>{lease.monthly_rent.toLocaleString()} FCFA</TableCell>\n                  <TableCell className=\"capitalize\">{lease.lease_type}</TableCell>\n                  <TableCell>{getStatusBadge(lease.status)}</TableCell>\n                  <TableCell>\n                    <ANSUTCertifiedBadge \n                      status={lease.certification_status}\n                      certifiedAt={lease.ansut_certified_at}\n                    />\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    {lease.certification_status === 'pending' && (\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => handleReviewLease(lease.id)}\n                      >\n                        <Eye className=\"h-4 w-4 mr-2\" />\n                        Examiner\n                      </Button>\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </CardContent>\n\n      {selectedLeaseId && (\n        <LeaseCertificationReview\n          leaseId={selectedLeaseId}\n          open={reviewDialogOpen}\n          onOpenChange={setReviewDialogOpen}\n          onStatusUpdated={fetchLeases}\n        />\n      )}\n    </Card>\n  );\n};\n\nexport default AdminLeases;\n","import { useEffect, useState, useMemo } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { logger } from '@/services/logger';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, FunnelChart, Funnel, LabelList, ScatterChart, Scatter, ZAxis } from 'recharts';\nimport { TrendingUp, Users, Home, FileText, Download, Activity, CheckCircle, Clock } from 'lucide-react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\n\ninterface AnalyticsData {\n  userGrowth: { date: string; count: number }[];\n  applicationsByWeek: { week: string; count: number }[];\n  propertyDistribution: { city: string; count: number }[];\n  topProperties: { title: string; views: number }[];\n}\n\ninterface AdvancedMetrics {\n  conversionRate: number;\n  avgResponseTime: number;\n  activeUsersRate: number;\n  certificationRate: number;\n  retentionRate: number;\n}\n\ninterface FunnelData {\n  step: string;\n  value: number;\n  fill: string;\n}\n\ninterface HeatmapData {\n  day: string;\n  hour: number;\n  activity: number;\n}\n\ninterface ScatterData {\n  title: string;\n  rent: number;\n  surface: number;\n}\n\nconst COLORS = ['hsl(var(--chart-1))', 'hsl(var(--chart-2))', 'hsl(var(--chart-3))', 'hsl(var(--chart-4))', 'hsl(var(--chart-5))'];\n\nconst PlatformAnalytics = () => {\n  const [data, setData] = useState<AnalyticsData>({\n    userGrowth: [],\n    applicationsByWeek: [],\n    propertyDistribution: [],\n    topProperties: []\n  });\n  const [metrics, setMetrics] = useState<AdvancedMetrics>({\n    conversionRate: 0,\n    avgResponseTime: 0,\n    activeUsersRate: 0,\n    certificationRate: 0,\n    retentionRate: 0\n  });\n  const [funnelData, setFunnelData] = useState<FunnelData[]>([]);\n  const [heatmapData, setHeatmapData] = useState<HeatmapData[]>([]);\n  const [scatterData, setScatterData] = useState<ScatterData[]>([]);\n  const [period, setPeriod] = useState('30');\n  const [selectedCity, setSelectedCity] = useState<string>('all');\n  const [cities, setCities] = useState<string[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchAnalytics();\n  }, [period]);\n\n  const fetchAnalytics = async () => {\n    try {\n      setLoading(true);\n      const daysAgo = parseInt(period);\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - daysAgo);\n\n      // User growth\n      const { data: profiles, error: profilesError } = await supabase\n        .from('profiles')\n        .select('created_at')\n        .gte('created_at', startDate.toISOString());\n\n      if (profilesError) throw profilesError;\n\n      // Applications with more details\n      const { data: applications, error: applicationsError } = await supabase\n        .from('rental_applications')\n        .select('created_at, status, reviewed_at, applicant_id')\n        .gte('created_at', startDate.toISOString());\n\n      if (applicationsError) throw applicationsError;\n\n      // Properties with city filter\n      let propertiesQuery = supabase\n        .from('properties')\n        .select('city, view_count, title, monthly_rent, surface_area');\n      \n      if (selectedCity !== 'all') {\n        propertiesQuery = propertiesQuery.eq('city', selectedCity);\n      }\n\n      const { data: properties, error: propertiesError } = await propertiesQuery;\n      if (propertiesError) throw propertiesError;\n\n      // Leases for certification rate\n      const { data: leases, error: leasesError } = await supabase\n        .from('leases')\n        .select('certification_status, created_at, landlord_signed_at, tenant_signed_at')\n        .gte('created_at', startDate.toISOString());\n\n      if (leasesError) throw leasesError;\n\n      // Search history for activity\n      const { data: searches, error: searchesError } = await supabase\n        .from('search_history')\n        .select('created_at, user_id')\n        .gte('created_at', startDate.toISOString());\n\n      if (searchesError) throw searchesError;\n\n      // User favorites\n      const { data: favorites, error: favoritesError } = await supabase\n        .from('user_favorites')\n        .select('created_at, user_id')\n        .gte('created_at', startDate.toISOString());\n\n      if (favoritesError) throw favoritesError;\n\n      // Extract cities for filter\n      const uniqueCities = Array.from(new Set(properties?.map(p => p.city).filter(Boolean) || []));\n      setCities(uniqueCities);\n\n      // Process user growth\n      const userGrowthMap = new Map<string, number>();\n      profiles?.forEach(profile => {\n        const date = new Date(profile.created_at).toISOString().split('T')[0];\n        userGrowthMap.set(date, (userGrowthMap.get(date) || 0) + 1);\n      });\n      const userGrowth = Array.from(userGrowthMap.entries())\n        .map(([date, count]) => ({ date, count }))\n        .sort((a, b) => a.date.localeCompare(b.date));\n\n      // Process applications by week\n      const applicationsByWeekMap = new Map<string, number>();\n      applications?.forEach(app => {\n        const week = new Date(app.created_at).toISOString().split('T')[0];\n        applicationsByWeekMap.set(week, (applicationsByWeekMap.get(week) || 0) + 1);\n      });\n      const applicationsByWeek = Array.from(applicationsByWeekMap.entries())\n        .map(([week, count]) => ({ week, count }))\n        .sort((a, b) => a.week.localeCompare(b.week));\n\n      // Process property distribution\n      const cityMap = new Map<string, number>();\n      properties?.forEach(property => {\n        cityMap.set(property.city, (cityMap.get(property.city) || 0) + 1);\n      });\n      const propertyDistribution = Array.from(cityMap.entries())\n        .map(([city, count]) => ({ city, count }))\n        .sort((a, b) => b.count - a.count)\n        .slice(0, 5);\n\n      // Top properties by views\n      const topProperties = properties\n        ?.sort((a, b) => (b.view_count || 0) - (a.view_count || 0))\n        .slice(0, 10)\n        .map(p => ({ title: p.title, views: p.view_count || 0 })) || [];\n\n      // Calculate advanced metrics\n      const totalApplications = applications?.length || 0;\n      const acceptedApplications = applications?.filter(a => a.status === 'accepted').length || 0;\n      const conversionRate = totalApplications > 0 ? (acceptedApplications / totalApplications) * 100 : 0;\n\n      const reviewedApplications = applications?.filter(a => a.reviewed_at) || [];\n      const avgResponseTime = reviewedApplications.length > 0\n        ? reviewedApplications.reduce((sum, app) => {\n            const created = new Date(app.created_at).getTime();\n            const reviewed = new Date(app.reviewed_at!).getTime();\n            return sum + (reviewed - created) / (1000 * 60 * 60);\n          }, 0) / reviewedApplications.length\n        : 0;\n\n      const totalUsers = profiles?.length || 0;\n      const activeUserIds = new Set([\n        ...(applications?.map(a => a.applicant_id) || []),\n        ...(searches?.map(s => s.user_id) || []),\n        ...(favorites?.map(f => f.user_id) || [])\n      ]);\n      const activeUsersRate = totalUsers > 0 ? (activeUserIds.size / totalUsers) * 100 : 0;\n\n      const totalLeases = leases?.length || 0;\n      const certifiedLeases = leases?.filter(l => l.certification_status === 'certified').length || 0;\n      const certificationRate = totalLeases > 0 ? (certifiedLeases / totalLeases) * 100 : 0;\n\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n      const returningUsers = new Set(\n        [...(searches || []), ...(favorites || [])]\n          .filter(item => new Date(item.created_at) > thirtyDaysAgo)\n          .map(item => item.user_id)\n      );\n      const retentionRate = totalUsers > 0 ? (returningUsers.size / totalUsers) * 100 : 0;\n\n      setMetrics({\n        conversionRate,\n        avgResponseTime,\n        activeUsersRate,\n        certificationRate,\n        retentionRate\n      });\n\n      // Funnel data\n      const signups = profiles?.length || 0;\n      const searchCount = searches?.length || 0;\n      const applicationsCount = applications?.length || 0;\n      const signedLeases = leases?.filter(l => l.landlord_signed_at && l.tenant_signed_at).length || 0;\n\n      setFunnelData([\n        { step: 'Inscriptions', value: signups, fill: 'hsl(var(--chart-1))' },\n        { step: 'Recherches', value: searchCount, fill: 'hsl(var(--chart-2))' },\n        { step: 'Candidatures', value: applicationsCount, fill: 'hsl(var(--chart-3))' },\n        { step: 'Baux signés', value: signedLeases, fill: 'hsl(var(--chart-4))' }\n      ]);\n\n      // Heatmap data\n      const activityByDayHour = new Map<string, number>();\n      [...(searches || []), ...(applications || [])].forEach(item => {\n        const date = new Date(item.created_at);\n        const day = date.toLocaleDateString('fr-FR', { weekday: 'short' });\n        const hour = date.getHours();\n        const key = `${day}-${hour}`;\n        activityByDayHour.set(key, (activityByDayHour.get(key) || 0) + 1);\n      });\n\n      const days = ['lun', 'mar', 'mer', 'jeu', 'ven', 'sam', 'dim'];\n      const heatmap: HeatmapData[] = [];\n      days.forEach(day => {\n        for (let hour = 0; hour < 24; hour++) {\n          heatmap.push({\n            day,\n            hour,\n            activity: activityByDayHour.get(`${day}-${hour}`) || 0\n          });\n        }\n      });\n      setHeatmapData(heatmap);\n\n      // Scatter data\n      const scatter: ScatterData[] = properties\n        ?.filter(p => p.monthly_rent && p.surface_area)\n        .map(p => ({\n          title: p.title,\n          rent: Number(p.monthly_rent),\n          surface: Number(p.surface_area)\n        })) || [];\n      setScatterData(scatter);\n\n      setData({\n        userGrowth,\n        applicationsByWeek,\n        propertyDistribution,\n        topProperties\n      });\n    } catch (error) {\n      logger.error('Error fetching analytics', { error, period });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const exportToCSV = () => {\n    const csvData = [\n      ['Métrique', 'Valeur'],\n      ['Taux de conversion', `${metrics.conversionRate.toFixed(2)}%`],\n      ['Temps de réponse moyen', `${metrics.avgResponseTime.toFixed(2)}h`],\n      ['Taux d\\'utilisateurs actifs', `${metrics.activeUsersRate.toFixed(2)}%`],\n      ['Taux de certification', `${metrics.certificationRate.toFixed(2)}%`],\n      ['Taux de rétention', `${metrics.retentionRate.toFixed(2)}%`],\n      [''],\n      ['Funnel de conversion'],\n      ...funnelData.map(f => [f.step, f.value.toString()]),\n      [''],\n      ['Propriétés par ville'],\n      ...data.propertyDistribution.map(p => [p.city, p.count.toString()])\n    ];\n\n    const csvContent = csvData.map(row => row.join(',')).join('\\n');\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `analytics-${new Date().toISOString().split('T')[0]}.csv`;\n    link.click();\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4\">\n          {[1, 2, 3, 4, 5].map(i => (\n            <Card key={i}>\n              <CardHeader className=\"pb-2\">\n                <Skeleton className=\"h-4 w-24\" />\n              </CardHeader>\n              <CardContent>\n                <Skeleton className=\"h-8 w-16\" />\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n        {[1, 2, 3].map(i => (\n          <Card key={i}>\n            <CardContent className=\"h-[300px] flex items-center justify-center\">\n              <Skeleton className=\"h-full w-full\" />\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between flex-wrap gap-4\">\n        <h2 className=\"text-2xl font-bold\">Analytiques de la plateforme</h2>\n        <div className=\"flex gap-2\">\n          <Select value={selectedCity} onValueChange={setSelectedCity}>\n            <SelectTrigger className=\"w-[180px]\">\n              <SelectValue placeholder=\"Ville\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">Toutes les villes</SelectItem>\n              {cities.map(city => (\n                <SelectItem key={city} value={city}>{city}</SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n          <Select value={period} onValueChange={setPeriod}>\n            <SelectTrigger className=\"w-[180px]\">\n              <SelectValue placeholder=\"Période\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"7\">7 derniers jours</SelectItem>\n              <SelectItem value=\"30\">30 derniers jours</SelectItem>\n              <SelectItem value=\"90\">90 derniers jours</SelectItem>\n              <SelectItem value=\"365\">1 an</SelectItem>\n            </SelectContent>\n          </Select>\n          <Button onClick={exportToCSV} variant=\"outline\" size=\"icon\">\n            <Download className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n\n      {/* KPI Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n              <TrendingUp className=\"h-4 w-4 text-primary\" />\n              Taux de conversion\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.conversionRate.toFixed(1)}%</div>\n            <p className=\"text-xs text-muted-foreground\">Candidatures acceptées</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n              <Clock className=\"h-4 w-4 text-primary\" />\n              Temps de réponse\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.avgResponseTime.toFixed(1)}h</div>\n            <p className=\"text-xs text-muted-foreground\">Délai moyen</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n              <Activity className=\"h-4 w-4 text-primary\" />\n              Utilisateurs actifs\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.activeUsersRate.toFixed(1)}%</div>\n            <p className=\"text-xs text-muted-foreground\">Taux d'engagement</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n              <CheckCircle className=\"h-4 w-4 text-primary\" />\n              Certification ANSUT\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.certificationRate.toFixed(1)}%</div>\n            <p className=\"text-xs text-muted-foreground\">Baux certifiés</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n              <Users className=\"h-4 w-4 text-primary\" />\n              Rétention\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.retentionRate.toFixed(1)}%</div>\n            <p className=\"text-xs text-muted-foreground\">Utilisateurs revenus</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Tabs defaultValue=\"users\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"users\">Utilisateurs</TabsTrigger>\n          <TabsTrigger value=\"applications\">Candidatures</TabsTrigger>\n          <TabsTrigger value=\"properties\">Biens</TabsTrigger>\n          <TabsTrigger value=\"funnel\">Funnel</TabsTrigger>\n          <TabsTrigger value=\"heatmap\">Activité</TabsTrigger>\n          <TabsTrigger value=\"scatter\">Loyer/Surface</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"users\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Users className=\"h-5 w-5\" />\n                Croissance des inscriptions\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={data.userGrowth}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"count\" fill=\"hsl(var(--primary))\" name=\"Inscriptions\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"applications\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5\" />\n                Candidatures par semaine\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart data={data.applicationsByWeek}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"week\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"count\" stroke=\"hsl(var(--primary))\" name=\"Candidatures\" />\n                </LineChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"properties\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Home className=\"h-5 w-5\" />\n                  Répartition par ville\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <PieChart>\n                    <Pie\n                      data={data.propertyDistribution}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      labelLine={false}\n                      label={({ city, percent }) => `${city}: ${(percent * 100).toFixed(0)}%`}\n                      outerRadius={80}\n                      fill=\"#8884d8\"\n                      dataKey=\"count\"\n                    >\n                      {data.propertyDistribution.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                      ))}\n                    </Pie>\n                    <Tooltip />\n                  </PieChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <TrendingUp className=\"h-5 w-5\" />\n                  Top 10 des biens les plus vus\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <BarChart data={data.topProperties} layout=\"vertical\">\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis type=\"number\" />\n                    <YAxis dataKey=\"title\" type=\"category\" width={150} />\n                    <Tooltip />\n                    <Bar dataKey=\"views\" fill=\"hsl(var(--primary))\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"funnel\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <TrendingUp className=\"h-5 w-5\" />\n                Funnel de conversion\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <FunnelChart>\n                  <Tooltip />\n                  <Funnel dataKey=\"value\" data={funnelData} isAnimationActive>\n                    <LabelList position=\"right\" fill=\"hsl(var(--foreground))\" stroke=\"none\" dataKey=\"step\" />\n                  </Funnel>\n                </FunnelChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"heatmap\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Activity className=\"h-5 w-5\" />\n                Heatmap d'activité (Jour × Heure)\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"overflow-x-auto\">\n                <div className=\"grid grid-cols-24 gap-1 min-w-[800px]\">\n                  {['lun', 'mar', 'mer', 'jeu', 'ven', 'sam', 'dim'].map(day => (\n                    <div key={day} className=\"col-span-24 grid grid-cols-24 gap-1\">\n                      <div className=\"text-xs font-medium flex items-center\">{day}</div>\n                      {Array.from({ length: 24 }, (_, hour) => {\n                        const activity = heatmapData.find(d => d.day === day && d.hour === hour)?.activity || 0;\n                        const maxActivity = Math.max(...heatmapData.map(d => d.activity));\n                        const opacity = maxActivity > 0 ? activity / maxActivity : 0;\n                        return (\n                          <div\n                            key={hour}\n                            className=\"h-8 rounded\"\n                            style={{\n                              backgroundColor: `hsl(var(--primary) / ${opacity})`,\n                              border: '1px solid hsl(var(--border))'\n                            }}\n                            title={`${day} ${hour}h: ${activity} activités`}\n                          />\n                        );\n                      })}\n                    </div>\n                  ))}\n                </div>\n                <div className=\"mt-4 text-xs text-muted-foreground\">\n                  Plus la couleur est foncée, plus il y a d'activité à ce moment\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"scatter\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Home className=\"h-5 w-5\" />\n                Loyer vs Surface (détection d'anomalies)\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis \n                    type=\"number\" \n                    dataKey=\"surface\" \n                    name=\"Surface\" \n                    unit=\" m²\"\n                    label={{ value: 'Surface (m²)', position: 'insideBottom', offset: -10 }}\n                  />\n                  <YAxis \n                    type=\"number\" \n                    dataKey=\"rent\" \n                    name=\"Loyer\" \n                    unit=\" FCFA\"\n                    label={{ value: 'Loyer (FCFA)', angle: -90, position: 'insideLeft' }}\n                  />\n                  <ZAxis range={[60, 400]} />\n                  <Tooltip \n                    cursor={{ strokeDasharray: '3 3' }}\n                    content={({ active, payload }) => {\n                      if (active && payload && payload.length) {\n                        const data = payload[0].payload;\n                        return (\n                          <div className=\"bg-card p-3 border border-border rounded shadow-lg\">\n                            <p className=\"font-semibold text-sm\">{data.title}</p>\n                            <p className=\"text-xs\">Surface: {data.surface} m²</p>\n                            <p className=\"text-xs\">Loyer: {data.rent.toLocaleString()} FCFA</p>\n                          </div>\n                        );\n                      }\n                      return null;\n                    }}\n                  />\n                  <Scatter name=\"Propriétés\" data={scatterData} fill=\"hsl(var(--primary))\" />\n                </ScatterChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default PlatformAnalytics;","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { logger } from '@/services/logger';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { Clock, User } from 'lucide-react';\n\ninterface AuditLog {\n  id: string;\n  action_type: string;\n  created_at: string;\n  old_values: any;\n  new_values: any;\n  notes: string | null;\n  admin: { full_name: string } | null;\n}\n\ninterface DisputeTimelineProps {\n  disputeId: string;\n}\n\nexport const DisputeTimeline = ({ disputeId }: DisputeTimelineProps) => {\n  const [logs, setLogs] = useState<AuditLog[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchLogs();\n  }, [disputeId]);\n\n  const fetchLogs = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('admin_audit_logs')\n        .select(`\n          *,\n          admin:admin_id(full_name)\n        `)\n        .eq('target_type', 'dispute')\n        .eq('target_id', disputeId)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      setLogs((data || []) as unknown as AuditLog[]);\n    } catch (error) {\n      logger.error('Error fetching dispute timeline', { error, disputeId });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getActionBadge = (actionType: string) => {\n    if (actionType.includes('resolved')) return <Badge variant=\"default\">Résolu</Badge>;\n    if (actionType.includes('closed')) return <Badge variant=\"outline\">Fermé</Badge>;\n    if (actionType.includes('in_review')) return <Badge variant=\"secondary\">En révision</Badge>;\n    return <Badge>{actionType}</Badge>;\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"flex items-center justify-center h-32\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (logs.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-base\">Historique des actions</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-sm text-muted-foreground\">Aucune action enregistrée</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-base\">Historique des actions</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {logs.map((log) => (\n          <div key={log.id} className=\"flex gap-4 pb-4 border-b last:border-0 last:pb-0\">\n            <Avatar className=\"h-8 w-8\">\n              <AvatarFallback>\n                <User className=\"h-4 w-4\" />\n              </AvatarFallback>\n            </Avatar>\n            <div className=\"flex-1 space-y-1\">\n              <div className=\"flex items-center gap-2\">\n                <p className=\"text-sm font-medium\">\n                  {log.admin?.full_name || 'Système'}\n                </p>\n                {getActionBadge(log.action_type)}\n              </div>\n              {log.notes && (\n                <p className=\"text-sm text-muted-foreground\">{log.notes}</p>\n              )}\n              {log.old_values && log.new_values && (\n                <div className=\"text-xs text-muted-foreground space-y-1\">\n                  {log.old_values.status && log.new_values.status && (\n                    <p>Statut: {log.old_values.status} → {log.new_values.status}</p>\n                  )}\n                  {log.old_values.priority && log.new_values.priority && (\n                    <p>Priorité: {log.old_values.priority} → {log.new_values.priority}</p>\n                  )}\n                </div>\n              )}\n              <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                <Clock className=\"h-3 w-3\" />\n                {format(new Date(log.created_at), 'PPP à HH:mm', { locale: fr })}\n              </div>\n            </div>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { logger } from '@/services/logger';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport { AlertTriangle, Clock, CheckCircle, XCircle, FileText, Users, TrendingUp } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { format, differenceInHours } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { DisputeTimeline } from './DisputeTimeline';\n\ninterface Dispute {\n  id: string;\n  lease_id: string | null;\n  reporter_id: string;\n  reported_id: string;\n  dispute_type: string;\n  description: string;\n  status: string;\n  resolution_notes: string | null;\n  priority: string;\n  created_at: string;\n  resolved_at: string | null;\n  assigned_to: string | null;\n  attachments: any;\n  reporter: { full_name: string; avatar_url?: string } | null;\n  reported: { full_name: string; avatar_url?: string } | null;\n  assigned_admin: { full_name: string; avatar_url?: string } | null;\n}\n\ninterface Admin {\n  user_id: string;\n  profile: { full_name: string } | null;\n}\n\ninterface DisputeStats {\n  open: number;\n  in_review: number;\n  resolved_last_30d: number;\n  avg_resolution_hours: number;\n}\n\nconst DisputeManager = () => {\n  const [disputes, setDisputes] = useState<Dispute[]>([]);\n  const [selectedDispute, setSelectedDispute] = useState<Dispute | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [loading, setLoading] = useState(true);\n  const [admins, setAdmins] = useState<Admin[]>([]);\n  const [stats, setStats] = useState<DisputeStats>({\n    open: 0,\n    in_review: 0,\n    resolved_last_30d: 0,\n    avg_resolution_hours: 0\n  });\n  const { toast } = useToast();\n\n  useEffect(() => {\n    fetchDisputes();\n    fetchAdmins();\n    fetchStats();\n  }, [filter]);\n\n  const fetchDisputes = async () => {\n    try {\n      // Utiliser le RPC sécurisé qui masque reporter_id pour les signalés\n      const { data, error } = await supabase.rpc('get_my_disputes');\n\n      if (error) throw error;\n\n      // Appliquer le filtre côté client\n      let filteredData = data || [];\n      if (filter !== 'all') {\n        filteredData = filteredData.filter(d => d.status === filter);\n      }\n\n      setDisputes(filteredData as unknown as Dispute[]);\n    } catch (error) {\n      logger.error('Error fetching disputes', { error, filter });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchAdmins = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('user_roles')\n        .select(`\n          user_id,\n          profile:user_id(full_name)\n        `)\n        .eq('role', 'admin');\n\n      if (error) throw error;\n\n      setAdmins((data || []) as unknown as Admin[]);\n    } catch (error) {\n      logger.error('Error fetching admins', { error });\n    }\n  };\n\n  const fetchStats = async () => {\n    try {\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n\n      // Utiliser le RPC sécurisé et calculer stats côté client\n      const { data: allDisputes, error } = await supabase\n        .rpc('get_my_disputes');\n\n      if (error) throw error;\n\n      const open = allDisputes?.filter(d => d.status === 'open').length || 0;\n      const in_review = allDisputes?.filter(d => d.status === 'in_review').length || 0;\n      const resolved_last_30d = allDisputes?.filter(\n        d => d.status === 'resolved' && d.resolved_at && new Date(d.resolved_at) > thirtyDaysAgo\n      ).length || 0;\n\n      const resolvedWithTime = allDisputes?.filter(d => d.resolved_at && d.created_at) || [];\n      const avg_resolution_hours = resolvedWithTime.length > 0\n        ? resolvedWithTime.reduce((sum, d) => {\n            return sum + differenceInHours(new Date(d.resolved_at!), new Date(d.created_at));\n          }, 0) / resolvedWithTime.length\n        : 0;\n\n      setStats({ open, in_review, resolved_last_30d, avg_resolution_hours });\n    } catch (error) {\n      logger.error('Error fetching dispute stats', { error });\n    }\n  };\n\n  const updateDispute = async (disputeId: string, updates: Partial<Dispute>, sendNotification = false) => {\n    try {\n      const { error } = await supabase\n        .from('disputes')\n        .update(updates)\n        .eq('id', disputeId);\n\n      if (error) throw error;\n\n      if (sendNotification && selectedDispute && (updates.status === 'resolved' || updates.status === 'closed')) {\n        const message = updates.status === 'resolved' \n          ? 'Le litige a été résolu par ANSUT.'\n          : 'Le litige a été fermé par ANSUT.';\n\n        await Promise.all([\n          supabase.from('notifications').insert({\n            user_id: selectedDispute.reporter_id,\n            type: 'dispute_update',\n            title: 'Mise à jour du litige',\n            message: message,\n            link: '/dashboard',\n            metadata: { dispute_id: disputeId }\n          }),\n          supabase.from('notifications').insert({\n            user_id: selectedDispute.reported_id,\n            type: 'dispute_update',\n            title: 'Mise à jour du litige',\n            message: message,\n            link: '/dashboard',\n            metadata: { dispute_id: disputeId }\n          })\n        ]);\n      }\n\n      toast({\n        title: \"Litige mis à jour\",\n        description: \"Le litige a été mis à jour avec succès\",\n      });\n\n      fetchDisputes();\n      fetchStats();\n      setSelectedDispute(null);\n    } catch (error) {\n      logger.error('Error updating dispute', { error, disputeId, updates });\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de mettre à jour le litige\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const variants: Record<string, \"default\" | \"secondary\" | \"destructive\" | \"outline\"> = {\n      open: 'destructive',\n      in_review: 'secondary',\n      resolved: 'default',\n      closed: 'outline'\n    };\n\n    return <Badge variant={variants[status] || 'default'}>{status}</Badge>;\n  };\n\n  const getPriorityIcon = (priority: string) => {\n    switch (priority) {\n      case 'urgent':\n        return <AlertTriangle className=\"h-4 w-4 text-red-500\" />;\n      case 'high':\n        return <AlertTriangle className=\"h-4 w-4 text-orange-500\" />;\n      case 'medium':\n        return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n      default:\n        return <Clock className=\"h-4 w-4 text-blue-500\" />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold\">Gestion des litiges</h2>\n        <Select value={filter} onValueChange={setFilter}>\n          <SelectTrigger className=\"w-[180px]\">\n            <SelectValue placeholder=\"Filtrer\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">Tous</SelectItem>\n            <SelectItem value=\"open\">Ouverts</SelectItem>\n            <SelectItem value=\"in_review\">En révision</SelectItem>\n            <SelectItem value=\"resolved\">Résolus</SelectItem>\n            <SelectItem value=\"closed\">Fermés</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Ouverts</CardTitle>\n            <AlertTriangle className=\"h-4 w-4 text-destructive\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.open}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">En révision</CardTitle>\n            <Clock className=\"h-4 w-4 text-secondary\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.in_review}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Résolus (30j)</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-primary\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.resolved_last_30d}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Temps moyen</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{Math.round(stats.avg_resolution_hours)}h</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-4\">\n        {disputes.length === 0 ? (\n          <Card>\n            <CardContent className=\"flex items-center justify-center h-32\">\n              <p className=\"text-muted-foreground\">Aucun litige trouvé</p>\n            </CardContent>\n          </Card>\n        ) : (\n          disputes.map((dispute) => (\n            <Card key={dispute.id}>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <div className=\"flex items-center gap-2\">\n                  {getPriorityIcon(dispute.priority)}\n                  <CardTitle className=\"text-base\">\n                    {dispute.dispute_type}\n                  </CardTitle>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  {getStatusBadge(dispute.status)}\n                  <Dialog>\n                    <DialogTrigger asChild>\n                      <Button variant=\"outline\" size=\"sm\" onClick={() => setSelectedDispute(dispute)}>\n                        Gérer\n                      </Button>\n                    </DialogTrigger>\n                     <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n                      <DialogHeader>\n                        <DialogTitle>Détails du litige</DialogTitle>\n                      </DialogHeader>\n                      {selectedDispute && (\n                        <div className=\"space-y-6\">\n                          <div className=\"grid grid-cols-2 gap-4\">\n                            <div className=\"flex items-center gap-2\">\n                              <Avatar className=\"h-10 w-10\">\n                                <AvatarFallback>\n                                  {selectedDispute.reporter?.full_name?.charAt(0) || 'R'}\n                                </AvatarFallback>\n                              </Avatar>\n                              <div>\n                                <Label className=\"text-xs text-muted-foreground\">Rapporteur</Label>\n                                <p className=\"text-sm font-medium\">{selectedDispute.reporter?.full_name || 'N/A'}</p>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                              <Avatar className=\"h-10 w-10\">\n                                <AvatarFallback>\n                                  {selectedDispute.reported?.full_name?.charAt(0) || 'R'}\n                                </AvatarFallback>\n                              </Avatar>\n                              <div>\n                                <Label className=\"text-xs text-muted-foreground\">Signalé</Label>\n                                <p className=\"text-sm font-medium\">{selectedDispute.reported?.full_name || 'N/A'}</p>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <Label>Type de litige</Label>\n                            <p className=\"text-sm mt-1\">{selectedDispute.dispute_type}</p>\n                          </div>\n\n                          <div>\n                            <Label>Description</Label>\n                            <p className=\"text-sm text-muted-foreground mt-1 whitespace-pre-wrap\">\n                              {selectedDispute.description}\n                            </p>\n                          </div>\n\n                          {selectedDispute.lease_id && (\n                            <div>\n                              <Label>Bail concerné</Label>\n                              <Button \n                                variant=\"link\" \n                                className=\"h-auto p-0 text-sm\"\n                                onClick={() => window.open(`/leases`, '_blank')}\n                              >\n                                <FileText className=\"h-4 w-4 mr-1\" />\n                                Voir le bail\n                              </Button>\n                            </div>\n                          )}\n\n                          {selectedDispute.attachments && Array.isArray(selectedDispute.attachments) && selectedDispute.attachments.length > 0 && (\n                            <div>\n                              <Label>Pièces jointes</Label>\n                              <div className=\"mt-2 space-y-2\">\n                                {selectedDispute.attachments.map((att: any, idx: number) => (\n                                  <div key={idx} className=\"flex items-center gap-2 text-sm\">\n                                    <FileText className=\"h-4 w-4\" />\n                                    <a href={att.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-primary hover:underline\">\n                                      {att.name || `Document ${idx + 1}`}\n                                    </a>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n\n                          <div>\n                            <Label>Date de création</Label>\n                            <p className=\"text-sm\">\n                              {format(new Date(selectedDispute.created_at), 'PPP à HH:mm', { locale: fr })}\n                            </p>\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label>Assigner à un admin</Label>\n                            <Select\n                              value={selectedDispute.assigned_to || 'unassigned'}\n                              onValueChange={(value) => {\n                                updateDispute(selectedDispute.id, { \n                                  assigned_to: value === 'unassigned' ? null : value \n                                });\n                              }}\n                            >\n                              <SelectTrigger>\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"unassigned\">Non assigné</SelectItem>\n                                {admins.map((admin) => (\n                                  <SelectItem key={admin.user_id} value={admin.user_id}>\n                                    {admin.profile?.full_name || 'Admin'}\n                                  </SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label>Statut</Label>\n                            <Select\n                              defaultValue={selectedDispute.status}\n                              onValueChange={(value) => {\n                                updateDispute(selectedDispute.id, {\n                                  status: value,\n                                  resolved_at: value === 'resolved' || value === 'closed' ? new Date().toISOString() : null\n                                }, value === 'resolved' || value === 'closed');\n                              }}\n                            >\n                              <SelectTrigger>\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"open\">Ouvert</SelectItem>\n                                <SelectItem value=\"in_review\">En révision</SelectItem>\n                                <SelectItem value=\"resolved\">Résolu</SelectItem>\n                                <SelectItem value=\"closed\">Fermé</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label>Priorité</Label>\n                            <Select\n                              defaultValue={selectedDispute.priority}\n                              onValueChange={(value) => {\n                                updateDispute(selectedDispute.id, { priority: value });\n                              }}\n                            >\n                              <SelectTrigger>\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"low\">Basse</SelectItem>\n                                <SelectItem value=\"medium\">Moyenne</SelectItem>\n                                <SelectItem value=\"high\">Haute</SelectItem>\n                                <SelectItem value=\"urgent\">Urgente</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <Label>Notes de résolution</Label>\n                            <Textarea\n                              defaultValue={selectedDispute.resolution_notes || ''}\n                              placeholder=\"Ajouter des notes...\"\n                              rows={4}\n                              onBlur={(e) => {\n                                if (e.target.value !== selectedDispute.resolution_notes) {\n                                  updateDispute(selectedDispute.id, { resolution_notes: e.target.value });\n                                }\n                              }}\n                            />\n                          </div>\n\n                          <DisputeTimeline disputeId={selectedDispute.id} />\n                        </div>\n                      )}\n                    </DialogContent>\n                  </Dialog>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  <p className=\"text-sm text-muted-foreground line-clamp-2\">\n                    {dispute.description}\n                  </p>\n                  <div className=\"flex items-center gap-4 text-xs text-muted-foreground\">\n                    <span>De: {dispute.reporter?.full_name || 'N/A'}</span>\n                    <span>Contre: {dispute.reported?.full_name || 'N/A'}</span>\n                    <span>{format(new Date(dispute.created_at), 'PPP', { locale: fr })}</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DisputeManager;","import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  CheckCircle2, \n  XCircle, \n  Clock, \n  Users, \n  TrendingUp, \n  Download,\n  Shield,\n  Award\n} from 'lucide-react';\nimport { handleError } from '@/lib/errorHandler';\nimport { toast } from '@/hooks/use-toast';\n\ninterface VerificationStats {\n  total: number;\n  pending: number;\n  verified: number;\n  rejected: number;\n  oneci_verified: number;\n  cnam_verified: number;\n  avg_processing_time_hours: number;\n  avg_tenant_score: number;\n}\n\nexport const AdminVerificationStats = () => {\n  const [stats, setStats] = useState<VerificationStats | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchStats();\n  }, []);\n\n  const fetchStats = async () => {\n    try {\n      // Utiliser le RPC sécurisé pour accès aux données de vérification\n      const { data: verifications, error } = await supabase\n        .rpc('get_verifications_for_admin_review');\n\n      if (error) throw error;\n\n      if (!verifications) {\n        setStats(null);\n        return;\n      }\n\n      const pending = verifications.filter(v => \n        v.oneci_status === 'pending_review' || v.cnam_status === 'pending_review'\n      ).length;\n\n      const oneci_verified = verifications.filter(v => v.oneci_status === 'verified').length;\n      const cnam_verified = verifications.filter(v => v.cnam_status === 'verified').length;\n      const verified = verifications.filter(v => \n        v.oneci_status === 'verified' || v.cnam_status === 'verified'\n      ).length;\n      const rejected = verifications.filter(v => \n        v.oneci_status === 'rejected' || v.cnam_status === 'rejected'\n      ).length;\n\n      // Calculate average processing time\n      const reviewedVerifications = verifications.filter(v => v.admin_reviewed_at);\n      let avgProcessingTime = 0;\n      if (reviewedVerifications.length > 0) {\n        const totalTime = reviewedVerifications.reduce((sum, v) => {\n          const created = new Date(v.created_at).getTime();\n          const reviewed = new Date(v.admin_reviewed_at!).getTime();\n          return sum + (reviewed - created);\n        }, 0);\n        avgProcessingTime = totalTime / reviewedVerifications.length / (1000 * 60 * 60); // Convert to hours\n      }\n\n      // Calculate average tenant score (avec cast any car RPC ne type pas tenant_score)\n      const scoresWithValues = verifications.filter(v => (v as any).tenant_score && (v as any).tenant_score > 0);\n      const avgScore = scoresWithValues.length > 0\n        ? scoresWithValues.reduce((sum, v) => sum + ((v as any).tenant_score || 0), 0) / scoresWithValues.length\n        : 0;\n\n      setStats({\n        total: verifications.length,\n        pending,\n        verified,\n        rejected,\n        oneci_verified,\n        cnam_verified,\n        avg_processing_time_hours: avgProcessingTime,\n        avg_tenant_score: avgScore,\n      });\n    } catch (error) {\n      handleError(error, 'Impossible de charger les statistiques');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const exportToCSV = async () => {\n    try {\n      // Utiliser le RPC sécurisé qui retourne déjà les données avec full_name\n      const { data, error } = await supabase\n        .rpc('get_verifications_for_admin_review');\n\n      if (error) throw error;\n\n      const csvRows = [\n        ['ID Utilisateur', 'Nom', 'Type', 'Statut ONECI', 'Statut CNAM', 'Score Locataire', 'Date Création', 'Date Révision', 'Révisé Par'].join(','),\n        ...data.map((v: any) => [\n          v.user_id,\n          v.full_name || 'N/A',\n          v.user_type || 'N/A',\n          v.oneci_status,\n          v.cnam_status,\n          (v as any).tenant_score || 0,\n          new Date(v.created_at).toLocaleDateString('fr-FR'),\n          v.admin_reviewed_at ? new Date(v.admin_reviewed_at).toLocaleDateString('fr-FR') : 'N/A',\n          v.admin_reviewed_by || 'N/A'\n        ].join(','))\n      ];\n\n      const csvContent = csvRows.join('\\n');\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const link = document.createElement('a');\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', `verifications-${new Date().toISOString().split('T')[0]}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      toast({\n        title: 'Export réussi',\n        description: 'Les données ont été exportées en CSV',\n      });\n    } catch (error) {\n      handleError(error, \"Impossible d'exporter les données\");\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  if (!stats) {\n    return (\n      <Card>\n        <CardContent className=\"pt-6\">\n          <p className=\"text-center text-muted-foreground\">Aucune donnée disponible</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const approvalRate = stats.total > 0 \n    ? ((stats.verified / stats.total) * 100).toFixed(1) \n    : '0';\n\n  const rejectionRate = stats.total > 0 \n    ? ((stats.rejected / stats.total) * 100).toFixed(1) \n    : '0';\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Statistiques des Vérifications</h2>\n          <p className=\"text-muted-foreground\">Vue d'ensemble des vérifications d'identité</p>\n        </div>\n        <Button onClick={exportToCSV} variant=\"outline\" className=\"gap-2\">\n          <Download className=\"h-4 w-4\" />\n          Exporter CSV\n        </Button>\n      </div>\n\n      {/* KPIs Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center gap-2\">\n              <Users className=\"h-4 w-4\" />\n              Total Vérifications\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold\">{stats.total}</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center gap-2\">\n              <Clock className=\"h-4 w-4\" />\n              En Attente\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold text-orange-600\">{stats.pending}</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              {stats.total > 0 ? ((stats.pending / stats.total) * 100).toFixed(1) : 0}% du total\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center gap-2\">\n              <CheckCircle2 className=\"h-4 w-4\" />\n              Approuvées\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold text-green-600\">{stats.verified}</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Taux d'approbation: {approvalRate}%\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center gap-2\">\n              <XCircle className=\"h-4 w-4\" />\n              Rejetées\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold text-red-600\">{stats.rejected}</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Taux de rejet: {rejectionRate}%\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Detailed Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Shield className=\"h-5 w-5 text-primary\" />\n              Vérifications par Type\n            </CardTitle>\n            <CardDescription>Répartition des vérifications ONECI et CNAM</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"flex items-center justify-between p-4 bg-muted/50 rounded-lg\">\n              <span className=\"font-medium\">ONECI Vérifiées</span>\n              <Badge variant=\"default\" className=\"text-lg px-3 py-1\">\n                {stats.oneci_verified}\n              </Badge>\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-muted/50 rounded-lg\">\n              <span className=\"font-medium\">CNAM Vérifiées</span>\n              <Badge variant=\"default\" className=\"text-lg px-3 py-1\">\n                {stats.cnam_verified}\n              </Badge>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <TrendingUp className=\"h-5 w-5 text-primary\" />\n              Métriques de Performance\n            </CardTitle>\n            <CardDescription>Temps de traitement et scores moyens</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"flex items-center justify-between p-4 bg-muted/50 rounded-lg\">\n              <span className=\"font-medium\">Temps Moyen de Traitement</span>\n              <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n                {stats.avg_processing_time_hours.toFixed(1)}h\n              </Badge>\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-muted/50 rounded-lg\">\n              <div className=\"flex items-center gap-2\">\n                <Award className=\"h-5 w-5 text-primary\" />\n                <span className=\"font-medium\">Score Locataire Moyen</span>\n              </div>\n              <Badge variant=\"default\" className=\"text-lg px-3 py-1\">\n                {stats.avg_tenant_score.toFixed(0)}/100\n              </Badge>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport type { \n  VerificationWithUser, \n  PassportVerification,\n  VerificationAction,\n  VerificationStatus,\n  VerificationType\n} from '@/types/admin';\nimport { AdminVerificationStats } from '@/components/admin/AdminVerificationStats';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { CheckCircle2, XCircle, Clock, User, FileText, Shield, Globe } from 'lucide-react';\nimport { toast } from '@/hooks/use-toast';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { handleError } from '@/lib/errorHandler';\n\nexport default function AdminVerificationQueue() {\n  const [verifications, setVerifications] = useState<VerificationWithUser[]>([]);\n  const [passportVerifications, setPassportVerifications] = useState<PassportVerification[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedVerification, setSelectedVerification] = useState<VerificationAction | null>(null);\n  const [reviewNotes, setReviewNotes] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const fetchPendingVerifications = async () => {\n    try {\n      // Fetch ONECI/CNAM verifications\n      const { data, error } = await supabase.rpc('get_verifications_for_admin_review');\n      if (error) throw error;\n\n      const enrichedData = (data || []).map((verification: {\n        user_id: string;\n        oneci_status: string;\n        cnam_status: string;\n        oneci_data: unknown;\n        cnam_data: unknown;\n        oneci_cni_number: string | null;\n        cnam_employer: string | null;\n        created_at: string;\n        full_name: string;\n      }): VerificationWithUser => ({\n        user_id: verification.user_id,\n        oneci_status: verification.oneci_status as VerificationStatus,\n        cnam_status: verification.cnam_status as VerificationStatus,\n        passport_status: 'not_submitted' as VerificationStatus,\n        oneci_data: verification.oneci_data as any,\n        cnam_data: verification.cnam_data as any,\n        passport_data: null,\n        oneci_cni_number: verification.oneci_cni_number,\n        cnam_employer: verification.cnam_employer,\n        passport_number: null,\n        passport_nationality: null,\n        created_at: verification.created_at,\n        profiles: {\n          full_name: verification.full_name || 'N/A',\n          avatar_url: null,\n          email: 'user@example.com'\n        }\n      }));\n\n      setVerifications(enrichedData);\n\n      // Fetch passport verifications\n      const { data: passportData, error: passportError } = await supabase\n        .rpc('get_passport_verifications_for_admin' as never);\n      \n      if (!passportError && passportData) {\n        setPassportVerifications(passportData as unknown as PassportVerification[]);\n      }\n    } catch (error: any) {\n      handleError(error, 'Impossible de charger les vérifications en attente');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPendingVerifications();\n  }, []);\n\n  const handleAction = async () => {\n    if (!selectedVerification) return;\n\n    setSubmitting(true);\n    try {\n      let functionName: string;\n      \n      if (selectedVerification.type === 'passport') {\n        functionName = selectedVerification.action === 'approve' \n          ? 'approve_passport_verification' \n          : 'reject_passport_verification';\n        \n        const { error } = await supabase.rpc(functionName as any, {\n          p_user_id: selectedVerification.userId,\n          p_review_notes: reviewNotes || null,\n        });\n        if (error) throw error;\n      } else {\n        functionName = selectedVerification.action === 'approve' \n          ? 'approve_verification' \n          : 'reject_verification';\n\n        const { error } = await supabase.rpc(functionName as any, {\n          p_user_id: selectedVerification.userId,\n          p_verification_type: selectedVerification.type,\n          p_review_notes: reviewNotes || null,\n        });\n        if (error) throw error;\n      }\n\n      toast({\n        title: selectedVerification.action === 'approve' ? 'Vérification approuvée' : 'Vérification rejetée',\n        description: `La vérification ${selectedVerification.type.toUpperCase()} a été ${selectedVerification.action === 'approve' ? 'approuvée' : 'rejetée'} avec succès.`,\n      });\n\n      setSelectedVerification(null);\n      setReviewNotes('');\n      fetchPendingVerifications();\n    } catch (error: any) {\n      handleError(error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'pending_review':\n        return <Badge variant=\"secondary\" className=\"flex items-center gap-1\"><Clock className=\"h-3 w-3\" /> En attente</Badge>;\n      case 'verified':\n        return <Badge variant=\"default\" className=\"flex items-center gap-1\"><CheckCircle2 className=\"h-3 w-3\" /> Vérifié</Badge>;\n      case 'rejected':\n        return <Badge variant=\"destructive\" className=\"flex items-center gap-1\"><XCircle className=\"h-3 w-3\" /> Rejeté</Badge>;\n      default:\n        return <Badge variant=\"outline\">{status}</Badge>;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"space-y-6\">\n        {/* Statistics Dashboard */}\n        <AdminVerificationStats />\n        \n        <Tabs defaultValue=\"oneci_cnam\" className=\"w-full\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <TabsList>\n              <TabsTrigger value=\"oneci_cnam\">ONECI & CNAM ({verifications.length})</TabsTrigger>\n              <TabsTrigger value=\"passport\">Passeports ({passportVerifications.length})</TabsTrigger>\n            </TabsList>\n            <Button onClick={fetchPendingVerifications} variant=\"outline\">\n              Rafraîchir\n            </Button>\n          </div>\n\n          <TabsContent value=\"oneci_cnam\" className=\"space-y-4\">\n            <div className=\"mb-4\">\n              <h2 className=\"text-2xl font-bold\">Vérifications ONECI & CNAM</h2>\n              <p className=\"text-muted-foreground\">\n                {verifications.length} vérification{verifications.length > 1 ? 's' : ''} en attente de validation\n              </p>\n            </div>\n\n        {verifications.length === 0 ? (\n          <Card>\n            <CardContent className=\"flex flex-col items-center justify-center h-64\">\n              <CheckCircle2 className=\"h-16 w-16 text-muted-foreground mb-4\" />\n              <p className=\"text-lg font-medium\">Aucune vérification en attente</p>\n              <p className=\"text-sm text-muted-foreground\">Toutes les vérifications ont été traitées</p>\n            </CardContent>\n          </Card>\n        ) : (\n          <div className=\"grid gap-4\">\n            {verifications.map((verification) => (\n              <Card key={verification.user_id}>\n                <CardHeader>\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-center gap-3\">\n                      <Avatar>\n                        <AvatarImage src={verification.profiles.avatar_url || undefined} />\n                        <AvatarFallback>\n                          <User className=\"h-5 w-5\" />\n                        </AvatarFallback>\n                      </Avatar>\n                      <div>\n                        <CardTitle className=\"text-lg\">{verification.profiles.full_name}</CardTitle>\n                        <CardDescription className=\"text-sm\">{verification.profiles.email}</CardDescription>\n                      </div>\n                    </div>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {format(new Date(verification.created_at), 'PPp', { locale: fr })}\n                    </span>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {/* ONECI Verification */}\n                  {verification.oneci_status === 'pending_review' && (\n                    <div className=\"border rounded-lg p-4 space-y-3\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <Shield className=\"h-5 w-5 text-primary\" />\n                          <span className=\"font-semibold\">Vérification ONECI</span>\n                        </div>\n                        {getStatusBadge(verification.oneci_status)}\n                      </div>\n                      \n                      {verification.oneci_data && (\n                        <div className=\"bg-muted/50 rounded p-3 space-y-1 text-sm\">\n                          <div><strong>CNI:</strong> {verification.oneci_cni_number}</div>\n                          <div><strong>Nom:</strong> {verification.oneci_data.lastName}</div>\n                          <div><strong>Prénom:</strong> {verification.oneci_data.firstName}</div>\n                          <div><strong>Date de naissance:</strong> {verification.oneci_data.birthDate}</div>\n                        </div>\n                      )}\n\n                      <div className=\"flex gap-2\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => setSelectedVerification({ userId: verification.user_id, type: 'oneci', action: 'approve' })}\n                          className=\"flex-1\"\n                        >\n                          <CheckCircle2 className=\"mr-2 h-4 w-4\" />\n                          Approuver\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"destructive\"\n                          onClick={() => setSelectedVerification({ userId: verification.user_id, type: 'oneci', action: 'reject' })}\n                          className=\"flex-1\"\n                        >\n                          <XCircle className=\"mr-2 h-4 w-4\" />\n                          Rejeter\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* CNAM Verification */}\n                  {verification.cnam_status === 'pending_review' && (\n                    <div className=\"border rounded-lg p-4 space-y-3\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <FileText className=\"h-5 w-5 text-primary\" />\n                          <span className=\"font-semibold\">Vérification CNAM</span>\n                        </div>\n                        {getStatusBadge(verification.cnam_status)}\n                      </div>\n                      \n                      {verification.cnam_data && (\n                        <div className=\"bg-muted/50 rounded p-3 space-y-1 text-sm\">\n                          <div><strong>Employeur:</strong> {verification.cnam_employer}</div>\n                          <div><strong>Type de contrat:</strong> {verification.cnam_data.contractType || 'N/A'}</div>\n                          <div><strong>Salaire estimé:</strong> {verification.cnam_data.estimatedSalary || 'N/A'} FCFA</div>\n                          <div><strong>Statut:</strong> {verification.cnam_data.employmentStatus || 'N/A'}</div>\n                        </div>\n                      )}\n\n                      <div className=\"flex gap-2\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => setSelectedVerification({ userId: verification.user_id, type: 'cnam', action: 'approve' })}\n                          className=\"flex-1\"\n                        >\n                          <CheckCircle2 className=\"mr-2 h-4 w-4\" />\n                          Approuver\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"destructive\"\n                          onClick={() => setSelectedVerification({ userId: verification.user_id, type: 'cnam', action: 'reject' })}\n                          className=\"flex-1\"\n                        >\n                          <XCircle className=\"mr-2 h-4 w-4\" />\n                          Rejeter\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        )}\n          </TabsContent>\n\n          <TabsContent value=\"passport\" className=\"space-y-4\">\n            <div className=\"mb-4\">\n              <h2 className=\"text-2xl font-bold\">Vérifications Passeport</h2>\n              <p className=\"text-muted-foreground\">\n                {passportVerifications.length} vérification{passportVerifications.length > 1 ? 's' : ''} passeport en attente\n              </p>\n            </div>\n\n            {passportVerifications.length === 0 ? (\n              <Card>\n                <CardContent className=\"flex flex-col items-center justify-center h-64\">\n                  <CheckCircle2 className=\"h-16 w-16 text-muted-foreground mb-4\" />\n                  <p className=\"text-lg font-medium\">Aucune vérification passeport en attente</p>\n                  <p className=\"text-sm text-muted-foreground\">Toutes les vérifications passeport ont été traitées</p>\n                </CardContent>\n              </Card>\n            ) : (\n              <div className=\"grid gap-4\">\n                {passportVerifications.map((verification: any) => (\n                  <Card key={verification.user_id}>\n                    <CardHeader>\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                          <Avatar>\n                            <AvatarFallback>\n                              <User className=\"h-5 w-5\" />\n                            </AvatarFallback>\n                          </Avatar>\n                          <div>\n                            <CardTitle className=\"text-lg\">{verification.full_name}</CardTitle>\n                            <CardDescription className=\"text-sm\">Nationalité: {verification.passport_nationality}</CardDescription>\n                          </div>\n                        </div>\n                        <span className=\"text-xs text-muted-foreground\">\n                          {format(new Date(verification.created_at), 'PPp', { locale: fr })}\n                        </span>\n                      </div>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                      <div className=\"border rounded-lg p-4 space-y-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center gap-2\">\n                            <Globe className=\"h-5 w-5 text-primary\" />\n                            <span className=\"font-semibold\">Vérification Passeport</span>\n                          </div>\n                          {getStatusBadge(verification.passport_status)}\n                        </div>\n                        \n                        {verification.passport_data && (\n                          <div className=\"bg-muted/50 rounded p-3 space-y-1 text-sm\">\n                            <div><strong>Numéro passeport:</strong> {verification.passport_number}</div>\n                            <div><strong>Nationalité:</strong> {verification.passport_nationality}</div>\n                            <div><strong>Nom:</strong> {verification.passport_data.lastName}</div>\n                            <div><strong>Prénom:</strong> {verification.passport_data.firstName}</div>\n                            <div><strong>Date de naissance:</strong> {verification.passport_data.birthDate}</div>\n                            <div><strong>Date d'émission:</strong> {verification.passport_data.issueDate}</div>\n                            <div><strong>Date d'expiration:</strong> {verification.passport_data.expiryDate}</div>\n                          </div>\n                        )}\n\n                        <div className=\"flex gap-2\">\n                          <Button\n                            size=\"sm\"\n                            onClick={() => setSelectedVerification({ userId: verification.user_id, type: 'passport', action: 'approve' })}\n                            className=\"flex-1\"\n                          >\n                            <CheckCircle2 className=\"mr-2 h-4 w-4\" />\n                            Approuver\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"destructive\"\n                            onClick={() => setSelectedVerification({ userId: verification.user_id, type: 'passport', action: 'reject' })}\n                            className=\"flex-1\"\n                          >\n                            <XCircle className=\"mr-2 h-4 w-4\" />\n                            Rejeter\n                          </Button>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      {/* Dialog de confirmation */}\n      <Dialog open={!!selectedVerification} onOpenChange={() => setSelectedVerification(null)}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>\n              {selectedVerification?.action === 'approve' ? 'Approuver' : 'Rejeter'} la vérification {selectedVerification?.type.toUpperCase()}\n            </DialogTitle>\n            <DialogDescription>\n              {selectedVerification?.action === 'approve' \n                ? 'Confirmez-vous vouloir approuver cette vérification ?'\n                : 'Veuillez indiquer le motif du rejet (obligatoire).'\n              }\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"notes\">\n                Notes {selectedVerification?.action === 'reject' && <span className=\"text-destructive\">*</span>}\n              </Label>\n              <Textarea\n                id=\"notes\"\n                value={reviewNotes}\n                onChange={(e) => setReviewNotes(e.target.value)}\n                placeholder={selectedVerification?.action === 'approve' \n                  ? 'Notes optionnelles...'\n                  : 'Motif du rejet (obligatoire)...'\n                }\n                rows={4}\n              />\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setSelectedVerification(null)} disabled={submitting}>\n              Annuler\n            </Button>\n            <Button \n              onClick={handleAction} \n              disabled={submitting || (selectedVerification?.action === 'reject' && !reviewNotes.trim())}\n              variant={selectedVerification?.action === 'approve' ? 'default' : 'destructive'}\n            >\n              {submitting ? 'Traitement...' : selectedVerification?.action === 'approve' ? 'Approuver' : 'Rejeter'}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport { CheckCircle, XCircle, AlertTriangle, Star, Loader2, Filter } from 'lucide-react';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { logger } from '@/services/logger';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\n\ninterface Review {\n  id: string;\n  rating: number;\n  comment: string | null;\n  created_at: string;\n  review_type: string;\n  moderation_status: string | null;\n  moderation_notes: string | null;\n  moderated_at: string | null;\n  reviewer: {\n    full_name: string;\n    avatar_url: string | null;\n  };\n  reviewee: {\n    full_name: string;\n  };\n}\n\ninterface ModerationAnalysis {\n  inappropriateLanguage: boolean;\n  personalInfoDetected: boolean;\n  suspiciousContent: boolean;\n  confidenceScore: number;\n  suggestedAction: string;\n  aiReason: string;\n}\n\nconst ReviewModeration = () => {\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const [selectedReview, setSelectedReview] = useState<Review | null>(null);\n  const [moderationNotes, setModerationNotes] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [analyzing, setAnalyzing] = useState(false);\n  const [analysis, setAnalysis] = useState<ModerationAnalysis | null>(null);\n  const [activeTab, setActiveTab] = useState<'pending' | 'approved' | 'rejected'>('pending');\n  const [reviewTypeFilter, setReviewTypeFilter] = useState<string>('all');\n  const { toast } = useToast();\n\n  const fetchReviews = async (status: string) => {\n    try {\n      setLoading(true);\n      let query = supabase\n        .from('reviews')\n        .select(`\n          *,\n          reviewer:reviewer_id(full_name, avatar_url),\n          reviewee:reviewee_id(full_name)\n        `)\n        .eq('moderation_status', status)\n        .order('created_at', { ascending: false });\n\n      if (reviewTypeFilter !== 'all') {\n        query = query.eq('review_type', reviewTypeFilter);\n      }\n\n      const { data, error } = await query;\n\n      if (error) throw error;\n      setReviews((data || []) as unknown as Review[]);\n    } catch (error) {\n      logger.error('Error fetching reviews for moderation', { error });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger les avis',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchReviews(activeTab);\n  }, [activeTab, reviewTypeFilter]);\n\n  const analyzeReviewContent = async (review: Review) => {\n    if (!review.comment) return;\n    \n    setAnalyzing(true);\n    try {\n      const { data, error } = await supabase.functions.invoke('moderate-review', {\n        body: { reviewId: review.id, reviewText: review.comment }\n      });\n\n      if (error) throw error;\n      \n      setAnalysis(data.moderationResult);\n    } catch (error) {\n      logger.error('Error analyzing review with AI', { error });\n      toast({\n        title: 'Erreur',\n        description: \"Impossible d'analyser l'avis\",\n        variant: 'destructive',\n      });\n    } finally {\n      setAnalyzing(false);\n    }\n  };\n\n  const moderateReview = async (reviewId: string, action: 'approved' | 'rejected') => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { error } = await supabase\n        .from('reviews')\n        .update({\n          moderation_status: action,\n          moderation_notes: moderationNotes,\n          moderated_by: user.id,\n          moderated_at: new Date().toISOString(),\n        })\n        .eq('id', reviewId);\n\n      if (error) throw error;\n\n      toast({\n        title: action === 'approved' ? 'Avis approuvé' : 'Avis rejeté',\n        description: `L'avis a été ${action === 'approved' ? 'approuvé' : 'rejeté'} avec succès`,\n      });\n\n      fetchReviews(activeTab);\n      setSelectedReview(null);\n      setModerationNotes('');\n      setAnalysis(null);\n    } catch (error) {\n      logger.error('Error moderating review', { error });\n      toast({\n        title: 'Erreur',\n        description: \"Impossible de modérer l'avis\",\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const getToxicityBadge = (score: number) => {\n    if (score >= 50) return <Badge variant=\"destructive\">Toxicité élevée ({score}%)</Badge>;\n    if (score >= 20) return <Badge className=\"bg-warning text-warning-foreground\">Toxicité modérée ({score}%)</Badge>;\n    return <Badge variant=\"secondary\">Toxicité faible ({score}%)</Badge>;\n  };\n\n  if (loading && reviews.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle>Modération des Avis</CardTitle>\n              <CardDescription>\n                Gérez les avis soumis par les utilisateurs\n              </CardDescription>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-2\">\n                <Filter className=\"h-4 w-4 text-muted-foreground\" />\n                <Select value={reviewTypeFilter} onValueChange={setReviewTypeFilter}>\n                  <SelectTrigger className=\"w-[200px]\">\n                    <SelectValue placeholder=\"Type d'avis\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">Tous les types</SelectItem>\n                    <SelectItem value=\"tenant_to_landlord\">Locataire → Propriétaire</SelectItem>\n                    <SelectItem value=\"landlord_to_tenant\">Propriétaire → Locataire</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <Tabs value={activeTab} onValueChange={(v) => setActiveTab(v as any)}>\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"pending\">\n                En attente\n              </TabsTrigger>\n              <TabsTrigger value=\"approved\">Approuvés</TabsTrigger>\n              <TabsTrigger value=\"rejected\">Rejetés</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value={activeTab} className=\"mt-6\">\n              {reviews.length === 0 ? (\n                <p className=\"text-center text-muted-foreground py-8\">\n                  Aucun avis dans cette catégorie\n                </p>\n              ) : (\n                <div className=\"space-y-4\">\n                  {reviews.map((review) => (\n                    <Card key={review.id}>\n                      <CardContent className=\"pt-6\">\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"flex items-start space-x-4 flex-1\">\n                            <Avatar>\n                              <AvatarImage src={review.reviewer.avatar_url || undefined} />\n                              <AvatarFallback>\n                                {review.reviewer.full_name.charAt(0)}\n                              </AvatarFallback>\n                            </Avatar>\n                            <div className=\"space-y-2 flex-1\">\n                              <div>\n                                <p className=\"font-medium\">{review.reviewer.full_name}</p>\n                                <p className=\"text-sm text-muted-foreground\">\n                                  À propos de {review.reviewee.full_name}\n                                </p>\n                                <div className=\"flex items-center gap-2 mt-1\">\n                                  <div className=\"flex items-center gap-1\">\n                                    {[...Array(5)].map((_, i) => (\n                                      <Star\n                                        key={i}\n                                        className={`h-4 w-4 ${\n                                          i < review.rating\n                                            ? 'fill-primary text-primary'\n                                            : 'text-muted'\n                                        }`}\n                                      />\n                                    ))}\n                                  </div>\n                                  <Badge variant=\"outline\">\n                                    {review.review_type === 'tenant_to_landlord' \n                                      ? 'Locataire → Propriétaire' \n                                      : 'Propriétaire → Locataire'}\n                                  </Badge>\n                                </div>\n                              </div>\n                              <p className=\"text-sm\">{review.comment}</p>\n                              <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                                <span>\n                                  {format(new Date(review.created_at), 'dd MMMM yyyy à HH:mm', { locale: fr })}\n                                </span>\n                              </div>\n                              {review.moderation_notes && activeTab !== 'pending' && (\n                                <div className=\"mt-2 p-2 bg-muted rounded-md\">\n                                  <p className=\"text-xs font-medium\">Notes de modération :</p>\n                                  <p className=\"text-xs text-muted-foreground\">{review.moderation_notes}</p>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                          {activeTab === 'pending' && (\n                            <Button\n                              onClick={() => {\n                                setSelectedReview(review);\n                                setModerationNotes('');\n                                setAnalysis(null);\n                                analyzeReviewContent(review);\n                              }}\n                            >\n                              Modérer\n                            </Button>\n                          )}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              )}\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n\n      <Dialog open={!!selectedReview} onOpenChange={(open) => !open && setSelectedReview(null)}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Modération de l'avis</DialogTitle>\n            <DialogDescription>\n              Analysez et modérez cet avis utilisateur\n            </DialogDescription>\n          </DialogHeader>\n\n          {selectedReview && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label className=\"text-sm font-medium\">Auteur</Label>\n                  <p className=\"text-sm mt-1\">{selectedReview.reviewer.full_name}</p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium\">À propos de</Label>\n                  <p className=\"text-sm mt-1\">{selectedReview.reviewee.full_name}</p>\n                </div>\n              </div>\n\n              <div>\n                <Label className=\"text-sm font-medium\">Note</Label>\n                <div className=\"flex items-center gap-1 mt-1\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star\n                      key={i}\n                      className={`h-5 w-5 ${\n                        i < selectedReview.rating\n                          ? 'fill-primary text-primary'\n                          : 'text-muted'\n                      }`}\n                    />\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <Label className=\"text-sm font-medium\">Commentaire</Label>\n                <p className=\"text-sm mt-1 p-3 bg-muted rounded-md\">\n                  {selectedReview.comment || 'Aucun commentaire'}\n                </p>\n              </div>\n\n              <div>\n                <Label className=\"text-sm font-medium\">Analyse automatique</Label>\n                {analyzing ? (\n                  <div className=\"flex items-center gap-2 mt-2\">\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                    <span className=\"text-sm text-muted-foreground\">Analyse en cours...</span>\n                  </div>\n                ) : analysis ? (\n                  <div className=\"mt-2 space-y-2\">\n                    <div className=\"flex flex-wrap gap-2\">\n                      {getToxicityBadge(analysis.confidenceScore)}\n                      {analysis.inappropriateLanguage && (\n                        <Badge variant=\"destructive\">\n                          <AlertTriangle className=\"h-3 w-3 mr-1\" />\n                          Langage inapproprié\n                        </Badge>\n                      )}\n                      {analysis.personalInfoDetected && (\n                        <Badge variant=\"destructive\">\n                          <AlertTriangle className=\"h-3 w-3 mr-1\" />\n                          Infos personnelles\n                        </Badge>\n                      )}\n                      {analysis.suspiciousContent && (\n                        <Badge className=\"bg-warning text-warning-foreground\">\n                          <AlertTriangle className=\"h-3 w-3 mr-1\" />\n                          Contenu suspect\n                        </Badge>\n                      )}\n                    </div>\n                    <p className=\"text-sm text-muted-foreground\">{analysis.aiReason}</p>\n                    <p className=\"text-sm font-medium\">\n                      Action suggérée : {\n                        analysis.suggestedAction === 'approve' ? '✅ Approuver' :\n                        analysis.suggestedAction === 'reject' ? '❌ Rejeter' :\n                        '🚩 Marquer pour révision'\n                      }\n                    </p>\n                  </div>\n                ) : null}\n              </div>\n\n              <div>\n                <Label htmlFor=\"notes\">Notes de modération (optionnel)</Label>\n                <Textarea\n                  id=\"notes\"\n                  value={moderationNotes}\n                  onChange={(e) => setModerationNotes(e.target.value)}\n                  placeholder=\"Ajoutez des notes expliquant votre décision...\"\n                  className=\"mt-1\"\n                  rows={3}\n                />\n              </div>\n\n              <DialogFooter className=\"gap-2\">\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setSelectedReview(null)}\n                >\n                  Annuler\n                </Button>\n                <Button\n                  variant=\"destructive\"\n                  onClick={() => moderateReview(selectedReview.id, 'rejected')}\n                >\n                  <XCircle className=\"h-4 w-4 mr-2\" />\n                  Rejeter\n                </Button>\n                <Button\n                  onClick={() => moderateReview(selectedReview.id, 'approved')}\n                >\n                  <CheckCircle className=\"h-4 w-4 mr-2\" />\n                  Approuver\n                </Button>\n              </DialogFooter>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ReviewModeration;\n","import * as React from \"react\";\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Popover = PopoverPrimitive.Root;\n\nconst PopoverTrigger = PopoverPrimitive.Trigger;\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className,\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n));\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\n\nexport { Popover, PopoverTrigger, PopoverContent };\n","import * as React from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { DayPicker } from \"react-day-picker\";\n\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/components/ui/button\";\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>;\n\nfunction Calendar({ className, classNames, showOutsideDays = true, ...props }: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\",\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell: \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(buttonVariants({ variant: \"ghost\" }), \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle: \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ..._props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ..._props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  );\n}\nCalendar.displayName = \"Calendar\";\n\nexport { Calendar };\n","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { logger } from '@/services/logger';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Badge } from '@/components/ui/badge';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { Download, Users, Home, TrendingUp, DollarSign, CalendarIcon, Filter, ArrowUpRight, ArrowDownRight, FileText, BarChart3 } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { format, subDays } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { LineChart, Line, BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\ninterface ReportData {\n  topLandlords: { name: string; propertyCount: number; avgRating: number }[];\n  topTenants: { name: string; applicationCount: number; score: number }[];\n  verificationStats: { oneci: number; cnam: number; face: number; total: number };\n  propertyPerformance: { avgDaysToRent: number; avgViews: number; conversionRate: number };\n  platformActivity: { totalUsers: number; totalProperties: number; totalApplications: number };\n  financialData?: {\n    totalRevenue: number;\n    ansutCommission: number;\n    revenueByType: Record<string, number>;\n    activeLeases: number;\n  };\n  chartData?: {\n    timeline: { date: string; applications: number; properties: number }[];\n    citiesData: { city: string; count: number }[];\n    propertyTypes: { type: string; count: number }[];\n  };\n  previousPeriod?: {\n    totalUsers: number;\n    totalProperties: number;\n    totalApplications: number;\n  };\n}\n\nconst CHART_COLORS = {\n  primary: 'hsl(30 100% 50%)',\n  secondary: 'hsl(225 80% 33%)',\n  success: 'hsl(142 76% 36%)',\n  warning: 'hsl(38 92% 50%)',\n  muted: 'hsl(220 15% 62%)',\n};\n\nconst AdvancedReporting = () => {\n  const [data, setData] = useState<ReportData>({\n    topLandlords: [],\n    topTenants: [],\n    verificationStats: { oneci: 0, cnam: 0, face: 0, total: 0 },\n    propertyPerformance: { avgDaysToRent: 0, avgViews: 0, conversionRate: 0 },\n    platformActivity: { totalUsers: 0, totalProperties: 0, totalApplications: 0 }\n  });\n  const [loading, setLoading] = useState(true);\n  const [startDate, setStartDate] = useState<Date>();\n  const [endDate, setEndDate] = useState<Date>();\n  const [periodPreset, setPeriodPreset] = useState<'7d' | '30d' | '90d' | 'custom'>('30d');\n  const { toast } = useToast();\n\n  useEffect(() => {\n    // Set default date range (last 30 days)\n    const end = new Date();\n    const start = subDays(end, 30);\n    setStartDate(start);\n    setEndDate(end);\n  }, []);\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      fetchReportData();\n    }\n  }, [startDate, endDate]);\n\n  const handlePresetChange = (preset: '7d' | '30d' | '90d' | 'custom') => {\n    setPeriodPreset(preset);\n    if (preset !== 'custom') {\n      const end = new Date();\n      const start = subDays(end, preset === '7d' ? 7 : preset === '30d' ? 30 : 90);\n      setStartDate(start);\n      setEndDate(end);\n    }\n  };\n\n  const fetchReportData = async () => {\n    if (!startDate || !endDate) return;\n    \n    try {\n      setLoading(true);\n\n      // Fetch profiles\n      let profilesQuery = supabase.from('profiles').select('*');\n      const { data: profiles } = await profilesQuery;\n\n      // Fetch properties\n      let propertiesQuery = supabase.from('properties').select('*');\n      if (startDate) {\n        propertiesQuery = propertiesQuery.gte('created_at', startDate.toISOString());\n      }\n      if (endDate) {\n        propertiesQuery = propertiesQuery.lte('created_at', endDate.toISOString());\n      }\n      const { data: properties } = await propertiesQuery;\n\n      // Fetch applications\n      let applicationsQuery = supabase.from('rental_applications').select('*');\n      if (startDate) {\n        applicationsQuery = applicationsQuery.gte('created_at', startDate.toISOString());\n      }\n      if (endDate) {\n        applicationsQuery = applicationsQuery.lte('created_at', endDate.toISOString());\n      }\n      const { data: applications } = await applicationsQuery;\n\n    // Fetch verifications via RPC sécurisé\n    const { data: verifications } = await supabase\n      .rpc('get_verifications_for_admin_review');\n\n      // Fetch leases for financial data\n      const { data: leases } = await supabase\n        .from('leases')\n        .select('*, properties(property_type)')\n        .eq('status', 'active');\n\n      // Calculate top landlords\n      const landlordMap = new Map<string, { name: string; count: number }>();\n      properties?.forEach(property => {\n        const ownerName = 'Propriétaire';\n        const current = landlordMap.get(property.owner_id) || { name: ownerName, count: 0 };\n        landlordMap.set(property.owner_id, { ...current, count: current.count + 1 });\n      });\n\n      const topLandlords = Array.from(landlordMap.values())\n        .map(l => ({ name: l.name, propertyCount: l.count, avgRating: 4.5 }))\n        .sort((a, b) => b.propertyCount - a.propertyCount)\n        .slice(0, 10);\n\n      // Calculate top tenants\n      const tenantMap = new Map<string, { name: string; count: number }>();\n      applications?.forEach(app => {\n        const applicantName = 'Locataire';\n        const current = tenantMap.get(app.applicant_id) || { name: applicantName, count: 0 };\n        tenantMap.set(app.applicant_id, { ...current, count: current.count + 1 });\n      });\n\n      const topTenants = Array.from(tenantMap.values())\n        .map(t => ({ name: t.name, applicationCount: t.count, score: 0 }))\n        .sort((a, b) => b.applicationCount - a.applicationCount)\n        .slice(0, 10);\n\n      // Calculate verification stats\n      const verificationStats = {\n        oneci: verifications?.filter(v => v.oneci_status === 'verified').length || 0,\n        cnam: verifications?.filter(v => v.cnam_status === 'verified').length || 0,\n        face: verifications?.filter(v => v.face_verification_status === 'verified').length || 0,\n        total: profiles?.length || 0\n      };\n\n      // Calculate property performance\n      const totalViews = properties?.reduce((sum, p) => sum + (p.view_count || 0), 0) || 0;\n      const avgViews = properties?.length ? totalViews / properties.length : 0;\n      const totalApplications = applications?.length || 0;\n      const totalProperties = properties?.length || 0;\n      const conversionRate = totalProperties > 0 ? (totalApplications / totalProperties) * 100 : 0;\n\n      // Calculate financial data\n      const totalRevenue = leases?.reduce((sum, lease) => sum + Number(lease.monthly_rent || 0), 0) || 0;\n      const ansutCommission = totalRevenue * 0.05; // 5% commission\n\n      const revenueByType: Record<string, number> = {};\n      leases?.forEach(lease => {\n        const propertyType = (lease.properties as any)?.property_type || 'Autre';\n        revenueByType[propertyType] = (revenueByType[propertyType] || 0) + Number(lease.monthly_rent || 0);\n      });\n\n      // Prepare chart data for timeline\n      const timelineData = [];\n      const daysInPeriod = Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n      const groupBy = daysInPeriod > 60 ? 'month' : daysInPeriod > 14 ? 'week' : 'day';\n      \n      // Group applications and properties by date\n      const dateGroups = new Map<string, { applications: number; properties: number }>();\n      \n      applications?.forEach(app => {\n        const date = new Date(app.created_at);\n        const key = groupBy === 'day' ? format(date, 'dd/MM') : \n                    groupBy === 'week' ? `S${Math.ceil(date.getDate() / 7)}/${format(date, 'MM')}` :\n                    format(date, 'MM/yyyy');\n        const current = dateGroups.get(key) || { applications: 0, properties: 0 };\n        dateGroups.set(key, { ...current, applications: current.applications + 1 });\n      });\n\n      properties?.forEach(prop => {\n        const date = new Date(prop.created_at);\n        const key = groupBy === 'day' ? format(date, 'dd/MM') : \n                    groupBy === 'week' ? `S${Math.ceil(date.getDate() / 7)}/${format(date, 'MM')}` :\n                    format(date, 'MM/yyyy');\n        const current = dateGroups.get(key) || { applications: 0, properties: 0 };\n        dateGroups.set(key, { ...current, properties: current.properties + 1 });\n      });\n\n      dateGroups.forEach((value, key) => {\n        timelineData.push({ date: key, ...value });\n      });\n\n      // Cities data\n      const citiesMap = new Map<string, number>();\n      properties?.forEach(prop => {\n        const city = prop.city || 'Non spécifié';\n        citiesMap.set(city, (citiesMap.get(city) || 0) + 1);\n      });\n      const citiesData = Array.from(citiesMap.entries())\n        .map(([city, count]) => ({ city, count }))\n        .sort((a, b) => b.count - a.count)\n        .slice(0, 10);\n\n      // Property types data\n      const typesMap = new Map<string, number>();\n      properties?.forEach(prop => {\n        const type = prop.property_type || 'Autre';\n        typesMap.set(type, (typesMap.get(type) || 0) + 1);\n      });\n      const propertyTypes = Array.from(typesMap.entries())\n        .map(([type, count]) => ({ type, count }));\n\n      // Fetch previous period data for comparison\n      const periodDuration = endDate.getTime() - startDate.getTime();\n      const previousStart = new Date(startDate.getTime() - periodDuration);\n      const previousEnd = startDate;\n\n      const { data: prevProperties } = await supabase\n        .from('properties')\n        .select('id')\n        .gte('created_at', previousStart.toISOString())\n        .lt('created_at', previousEnd.toISOString());\n\n      const { data: prevApplications } = await supabase\n        .from('rental_applications')\n        .select('id')\n        .gte('created_at', previousStart.toISOString())\n        .lt('created_at', previousEnd.toISOString());\n\n      const { data: prevProfiles } = await supabase\n        .from('profiles')\n        .select('id')\n        .gte('created_at', previousStart.toISOString())\n        .lt('created_at', previousEnd.toISOString());\n\n      setData({\n        topLandlords,\n        topTenants,\n        verificationStats,\n        propertyPerformance: {\n          avgDaysToRent: 15,\n          avgViews,\n          conversionRate\n        },\n        platformActivity: {\n          totalUsers: profiles?.length || 0,\n          totalProperties: totalProperties,\n          totalApplications: totalApplications\n        },\n        financialData: {\n          totalRevenue,\n          ansutCommission,\n          revenueByType,\n          activeLeases: leases?.length || 0,\n        },\n        chartData: {\n          timeline: timelineData,\n          citiesData,\n          propertyTypes,\n        },\n        previousPeriod: {\n          totalUsers: prevProfiles?.length || 0,\n          totalProperties: prevProperties?.length || 0,\n          totalApplications: prevApplications?.length || 0,\n        }\n      });\n    } catch (error) {\n      logger.error('Error fetching report data', { error });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateDelta = (current: number, previous: number): { delta: number; isPositive: boolean } => {\n    if (previous === 0) return { delta: 0, isPositive: true };\n    const delta = ((current - previous) / previous) * 100;\n    return { delta: Math.abs(delta), isPositive: delta >= 0 };\n  };\n\n  const exportToCSV = (dataToExport: any[], filename: string) => {\n    if (dataToExport.length === 0) return;\n\n    const headers = Object.keys(dataToExport[0]).join(',');\n    const rows = dataToExport.map(item => Object.values(item).join(',')).join('\\n');\n    const csv = `${headers}\\n${rows}`;\n\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${filename}.csv`;\n    a.click();\n\n    toast({\n      title: \"Export réussi\",\n      description: \"Le fichier CSV a été téléchargé\",\n    });\n  };\n\n  const handleExportPDF = async (reportType: 'performance' | 'financial' | 'verification' | 'complete') => {\n    try {\n      const { data: response, error } = await supabase.functions.invoke('generate-report', {\n        body: {\n          reportType,\n          startDate: startDate?.toISOString(),\n          endDate: endDate?.toISOString(),\n          format: 'pdf',\n        },\n      });\n\n      if (error) throw error;\n\n      // Client-side PDF generation would go here\n      // For now, we'll download the structured data as JSON\n      const blob = new Blob([JSON.stringify(response.pdf, null, 2)], { type: 'application/json' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `rapport-${reportType}-${format(new Date(), 'yyyy-MM-dd')}.json`;\n      a.click();\n\n      toast({\n        title: \"Export PDF\",\n        description: \"Les données du rapport ont été exportées\",\n      });\n    } catch (error) {\n      logger.error('Error exporting PDF', { error });\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible d'exporter le rapport PDF\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4\">\n        <h2 className=\"text-2xl font-bold\">Rapports avancés</h2>\n        \n        {/* Date filters */}\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <div className=\"flex gap-1\">\n            <Button\n              variant={periodPreset === '7d' ? 'default' : 'outline'}\n              size=\"sm\"\n              onClick={() => handlePresetChange('7d')}\n            >\n              7 jours\n            </Button>\n            <Button\n              variant={periodPreset === '30d' ? 'default' : 'outline'}\n              size=\"sm\"\n              onClick={() => handlePresetChange('30d')}\n            >\n              30 jours\n            </Button>\n            <Button\n              variant={periodPreset === '90d' ? 'default' : 'outline'}\n              size=\"sm\"\n              onClick={() => handlePresetChange('90d')}\n            >\n              90 jours\n            </Button>\n          </div>\n          \n          <Popover>\n            <PopoverTrigger asChild>\n              <Button variant={periodPreset === 'custom' ? 'default' : 'outline'} size=\"sm\">\n                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                {startDate && endDate\n                  ? `${format(startDate, 'dd/MM/yyyy', { locale: fr })} - ${format(endDate, 'dd/MM/yyyy', { locale: fr })}`\n                  : 'Personnalisé'}\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0\" align=\"end\">\n              <div className=\"p-4 space-y-4\">\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Date de début</label>\n                  <Calendar\n                    mode=\"single\"\n                    selected={startDate}\n                    onSelect={(date) => {\n                      setStartDate(date);\n                      setPeriodPreset('custom');\n                    }}\n                    disabled={(date) => date > new Date()}\n                    className=\"rounded-md border pointer-events-auto\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium\">Date de fin</label>\n                  <Calendar\n                    mode=\"single\"\n                    selected={endDate}\n                    onSelect={(date) => {\n                      setEndDate(date);\n                      setPeriodPreset('custom');\n                    }}\n                    disabled={(date) => date > new Date() || (startDate && date < startDate)}\n                    className=\"rounded-md border pointer-events-auto\"\n                  />\n                </div>\n              </div>\n            </PopoverContent>\n          </Popover>\n        </div>\n      </div>\n\n      {/* KPI Cards with period comparison */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Utilisateurs</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{data.platformActivity.totalUsers}</div>\n            {data.previousPeriod && (\n              <div className=\"mt-2 flex items-center gap-1\">\n                {(() => {\n                  const { delta, isPositive } = calculateDelta(\n                    data.platformActivity.totalUsers,\n                    data.previousPeriod.totalUsers\n                  );\n                  return (\n                    <Badge variant={isPositive ? \"default\" : \"secondary\"} className=\"text-xs\">\n                      {isPositive ? <ArrowUpRight className=\"h-3 w-3 mr-1\" /> : <ArrowDownRight className=\"h-3 w-3 mr-1\" />}\n                      {delta.toFixed(1)}%\n                    </Badge>\n                  );\n                })()}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Biens</CardTitle>\n            <Home className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{data.platformActivity.totalProperties}</div>\n            {data.previousPeriod && (\n              <div className=\"mt-2 flex items-center gap-1\">\n                {(() => {\n                  const { delta, isPositive } = calculateDelta(\n                    data.platformActivity.totalProperties,\n                    data.previousPeriod.totalProperties\n                  );\n                  return (\n                    <Badge variant={isPositive ? \"default\" : \"secondary\"} className=\"text-xs\">\n                      {isPositive ? <ArrowUpRight className=\"h-3 w-3 mr-1\" /> : <ArrowDownRight className=\"h-3 w-3 mr-1\" />}\n                      {delta.toFixed(1)}%\n                    </Badge>\n                  );\n                })()}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Candidatures</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{data.platformActivity.totalApplications}</div>\n            {data.previousPeriod && (\n              <div className=\"mt-2 flex items-center gap-1\">\n                {(() => {\n                  const { delta, isPositive } = calculateDelta(\n                    data.platformActivity.totalApplications,\n                    data.previousPeriod.totalApplications\n                  );\n                  return (\n                    <Badge variant={isPositive ? \"default\" : \"secondary\"} className=\"text-xs\">\n                      {isPositive ? <ArrowUpRight className=\"h-3 w-3 mr-1\" /> : <ArrowDownRight className=\"h-3 w-3 mr-1\" />}\n                      {delta.toFixed(1)}%\n                    </Badge>\n                  );\n                })()}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      <Tabs defaultValue=\"performance\">\n        <TabsList className=\"grid w-full grid-cols-5\">\n          <TabsTrigger value=\"performance\">Performance</TabsTrigger>\n          <TabsTrigger value=\"properties\">Biens</TabsTrigger>\n          <TabsTrigger value=\"verification\">Vérification</TabsTrigger>\n          <TabsTrigger value=\"charts\">Graphiques</TabsTrigger>\n          <TabsTrigger value=\"financial\">Finances</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"performance\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <CardTitle>Top 10 Propriétaires</CardTitle>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => exportToCSV(data.topLandlords, 'top-proprietaires')}\n              >\n                <Download className=\"h-4 w-4 mr-2\" />\n                Export CSV\n              </Button>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                {data.topLandlords.map((landlord, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-2 border rounded\">\n                    <div>\n                      <p className=\"font-medium\">{landlord.name}</p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {landlord.propertyCount} bien{landlord.propertyCount > 1 ? 's' : ''}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <CardTitle>Top 10 Locataires</CardTitle>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => exportToCSV(data.topTenants, 'top-locataires')}\n              >\n                <Download className=\"h-4 w-4 mr-2\" />\n                Export CSV\n              </Button>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                {data.topTenants.map((tenant, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-2 border rounded\">\n                    <div>\n                      <p className=\"font-medium\">{tenant.name}</p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {tenant.applicationCount} candidature{tenant.applicationCount > 1 ? 's' : ''}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"properties\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Métriques des biens</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"p-4 border rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">Délai moyen avant location</p>\n                  <p className=\"text-2xl font-bold\">{data.propertyPerformance.avgDaysToRent} jours</p>\n                </div>\n                <div className=\"p-4 border rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">Vues moyennes par bien</p>\n                  <p className=\"text-2xl font-bold\">{Math.round(data.propertyPerformance.avgViews)}</p>\n                </div>\n                <div className=\"p-4 border rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">Taux de conversion</p>\n                  <p className=\"text-2xl font-bold\">{data.propertyPerformance.conversionRate.toFixed(1)}%</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"verification\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Statistiques de vérification</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between p-4 border rounded-lg\">\n                  <span>ONECI vérifié</span>\n                  <span className=\"font-bold\">{data.verificationStats.oneci} / {data.verificationStats.total}</span>\n                </div>\n                <div className=\"flex items-center justify-between p-4 border rounded-lg\">\n                  <span>CNAM vérifié</span>\n                  <span className=\"font-bold\">{data.verificationStats.cnam} / {data.verificationStats.total}</span>\n                </div>\n                <div className=\"flex items-center justify-between p-4 border rounded-lg\">\n                  <span>Reconnaissance faciale</span>\n                  <span className=\"font-bold\">{data.verificationStats.face} / {data.verificationStats.total}</span>\n                </div>\n                <div className=\"flex items-center justify-between p-4 border rounded-lg bg-muted\">\n                  <span className=\"font-medium\">Taux de vérification global</span>\n                  <span className=\"font-bold\">\n                    {data.verificationStats.total > 0\n                      ? Math.round(((data.verificationStats.oneci + data.verificationStats.cnam + data.verificationStats.face) / (data.verificationStats.total * 3)) * 100)\n                      : 0}%\n                  </span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Charts Tab */}\n        <TabsContent value=\"charts\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n            {/* Timeline Chart */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Évolution dans le temps</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <LineChart data={data.chartData?.timeline || []}>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n                    <XAxis dataKey=\"date\" stroke=\"hsl(var(--muted-foreground))\" />\n                    <YAxis stroke=\"hsl(var(--muted-foreground))\" />\n                    <Tooltip \n                      contentStyle={{ \n                        backgroundColor: 'hsl(var(--card))', \n                        border: '1px solid hsl(var(--border))',\n                        borderRadius: '8px'\n                      }}\n                    />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey=\"applications\" stroke={CHART_COLORS.primary} strokeWidth={2} name=\"Candidatures\" />\n                    <Line type=\"monotone\" dataKey=\"properties\" stroke={CHART_COLORS.secondary} strokeWidth={2} name=\"Biens\" />\n                  </LineChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            {/* Cities Bar Chart */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Biens par ville (Top 10)</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <BarChart data={data.chartData?.citiesData || []}>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n                    <XAxis dataKey=\"city\" stroke=\"hsl(var(--muted-foreground))\" />\n                    <YAxis stroke=\"hsl(var(--muted-foreground))\" />\n                    <Tooltip \n                      contentStyle={{ \n                        backgroundColor: 'hsl(var(--card))', \n                        border: '1px solid hsl(var(--border))',\n                        borderRadius: '8px'\n                      }}\n                    />\n                    <Bar dataKey=\"count\" fill={CHART_COLORS.secondary} radius={[8, 8, 0, 0]} name=\"Nombre de biens\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            {/* Property Types Pie Chart */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Types de biens</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <PieChart>\n                    <Pie\n                      data={data.chartData?.propertyTypes || []}\n                      dataKey=\"count\"\n                      nameKey=\"type\"\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      outerRadius={100}\n                      label\n                    >\n                      {(data.chartData?.propertyTypes || []).map((entry, index) => {\n                        const colors = [CHART_COLORS.primary, CHART_COLORS.secondary, CHART_COLORS.success, CHART_COLORS.warning, CHART_COLORS.muted];\n                        return <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />;\n                      })}\n                    </Pie>\n                    <Tooltip \n                      contentStyle={{ \n                        backgroundColor: 'hsl(var(--card))', \n                        border: '1px solid hsl(var(--border))',\n                        borderRadius: '8px'\n                      }}\n                    />\n                    <Legend />\n                  </PieChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            {/* Conversion Funnel */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Entonnoir de conversion</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"relative\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <span className=\"text-sm font-medium\">Vues</span>\n                      <span className=\"text-sm font-bold\">{Math.round(data.propertyPerformance.avgViews * data.platformActivity.totalProperties)}</span>\n                    </div>\n                    <div className=\"h-16 bg-gradient-to-r from-primary to-primary-glow rounded-lg flex items-center justify-center text-primary-foreground font-bold\">\n                      100%\n                    </div>\n                  </div>\n                  <div className=\"relative\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <span className=\"text-sm font-medium\">Candidatures</span>\n                      <span className=\"text-sm font-bold\">{data.platformActivity.totalApplications}</span>\n                    </div>\n                    <div \n                      className=\"h-14 bg-gradient-to-r from-secondary to-secondary-500 rounded-lg flex items-center justify-center text-secondary-foreground font-bold\"\n                      style={{ width: `${data.propertyPerformance.conversionRate}%` }}\n                    >\n                      {data.propertyPerformance.conversionRate.toFixed(1)}%\n                    </div>\n                  </div>\n                  <div className=\"relative\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <span className=\"text-sm font-medium\">Locations conclues</span>\n                      <span className=\"text-sm font-bold\">{data.financialData?.activeLeases || 0}</span>\n                    </div>\n                    <div \n                      className=\"h-12 bg-gradient-to-r from-success to-success rounded-lg flex items-center justify-center text-success-foreground font-bold\"\n                      style={{ \n                        width: `${data.platformActivity.totalApplications > 0 ? ((data.financialData?.activeLeases || 0) / data.platformActivity.totalApplications) * 100 : 0}%` \n                      }}\n                    >\n                      {data.platformActivity.totalApplications > 0 \n                        ? (((data.financialData?.activeLeases || 0) / data.platformActivity.totalApplications) * 100).toFixed(1)\n                        : 0}%\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        {/* Financial Tab */}\n        <TabsContent value=\"financial\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Revenus totaux</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {(data.financialData?.totalRevenue || 0).toLocaleString('fr-FR')} FCFA\n                </div>\n                <p className=\"text-xs text-muted-foreground mt-1\">Loyers actifs</p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Commission ANSUT (5%)</CardTitle>\n                <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold text-primary\">\n                  {(data.financialData?.ansutCommission || 0).toLocaleString('fr-FR')} FCFA\n                </div>\n                <p className=\"text-xs text-muted-foreground mt-1\">Par mois</p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Baux actifs</CardTitle>\n                <FileText className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{data.financialData?.activeLeases || 0}</div>\n                <p className=\"text-xs text-muted-foreground mt-1\">Contrats en cours</p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Revenu moyen</CardTitle>\n                <BarChart3 className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {(data.financialData?.activeLeases && data.financialData.activeLeases > 0\n                    ? (data.financialData.totalRevenue / data.financialData.activeLeases)\n                    : 0\n                  ).toLocaleString('fr-FR')} FCFA\n                </div>\n                <p className=\"text-xs text-muted-foreground mt-1\">Par bail</p>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <CardTitle>Revenus par type de bien</CardTitle>\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"outline\" size=\"sm\">\n                    <Download className=\"h-4 w-4 mr-2\" />\n                    Exporter\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                  <DropdownMenuItem onClick={() => {\n                    const csvData = Object.entries(data.financialData?.revenueByType || {}).map(([type, revenue]) => ({\n                      'Type de bien': type,\n                      'Revenus (FCFA)': revenue\n                    }));\n                    exportToCSV(csvData, 'revenus-par-type');\n                  }}>\n                    Export CSV\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => handleExportPDF('financial')}>\n                    Export PDF\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {Object.entries(data.financialData?.revenueByType || {})\n                  .sort(([, a], [, b]) => (b as number) - (a as number))\n                  .map(([type, revenue]) => (\n                    <div key={type} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                      <div className=\"flex-1\">\n                        <p className=\"font-medium\">{type}</p>\n                        <div className=\"mt-2 h-2 bg-muted rounded-full overflow-hidden\">\n                          <div \n                            className=\"h-full bg-primary\"\n                            style={{ \n                              width: `${((revenue as number) / (data.financialData?.totalRevenue || 1)) * 100}%` \n                            }}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"ml-4 text-right\">\n                        <p className=\"font-bold\">{(revenue as number).toLocaleString('fr-FR')} FCFA</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                          {(((revenue as number) / (data.financialData?.totalRevenue || 1)) * 100).toFixed(1)}%\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default AdvancedReporting;","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Calendar, FileText, MapPin, User } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport LeaseCertificationReview from '@/components/admin/LeaseCertificationReview';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { logger } from '@/services/logger';\n\ninterface LeaseCertificationQueueProps {\n  status?: 'pending' | 'in_review' | 'certified' | 'rejected';\n}\n\ninterface PendingLease {\n  id: string;\n  property_id: string;\n  landlord_id: string;\n  tenant_id: string;\n  monthly_rent: number;\n  start_date: string;\n  certification_requested_at: string;\n  certification_notes?: string;\n  property: {\n    title: string;\n    address: string;\n    city: string;\n  };\n  landlord: {\n    full_name: string;\n  };\n  tenant: {\n    full_name: string;\n  };\n}\n\nconst LeaseCertificationQueue = ({ status = 'pending' }: LeaseCertificationQueueProps) => {\n  const [pendingLeases, setPendingLeases] = useState<PendingLease[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedLeaseId, setSelectedLeaseId] = useState<string | null>(null);\n  const [reviewOpen, setReviewOpen] = useState(false);\n\n  const fetchPendingLeases = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('leases')\n        .select(`\n          id,\n          property_id,\n          landlord_id,\n          tenant_id,\n          monthly_rent,\n          start_date,\n          certification_requested_at,\n          certification_notes,\n          property:properties (\n            title,\n            address,\n            city\n          ),\n          landlord:profiles!leases_landlord_id_fkey (\n            full_name\n          ),\n          tenant:profiles!leases_tenant_id_fkey (\n            full_name\n          )\n        `)\n        .eq('certification_status', status)\n        .order('certification_requested_at', { ascending: true });\n\n      if (error) throw error;\n      setPendingLeases(data as any || []);\n    } catch (error) {\n      logger.error('Error fetching leases for certification', { error });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPendingLeases();\n\n    // Real-time subscription for lease updates\n    const channel = supabase\n      .channel(`certification-queue-${status}`)\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'leases',\n          filter: `certification_status=eq.${status}`\n        },\n        () => {\n          fetchPendingLeases();\n        }\n      )\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [status]);\n\n  const handleReviewClick = (leaseId: string) => {\n    setSelectedLeaseId(leaseId);\n    setReviewOpen(true);\n  };\n\n  const handleReviewClose = () => {\n    setReviewOpen(false);\n    setSelectedLeaseId(null);\n    fetchPendingLeases();\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        <Skeleton className=\"h-32 w-full\" />\n        <Skeleton className=\"h-32 w-full\" />\n        <Skeleton className=\"h-32 w-full\" />\n      </div>\n    );\n  }\n\n  const getStatusLabel = (status: string) => {\n    switch (status) {\n      case 'pending': return 'en attente';\n      case 'in_review': return 'en révision';\n      case 'certified': return 'certifié';\n      case 'rejected': return 'rejeté';\n      default: return status;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-foreground\">Baux {getStatusLabel(status)}</h2>\n          <p className=\"text-muted-foreground\">\n            {pendingLeases.length} {pendingLeases.length === 1 ? 'bail' : 'baux'} {getStatusLabel(status)}\n          </p>\n        </div>\n        <Badge variant=\"secondary\" className=\"text-lg px-4 py-2\">\n          {pendingLeases.length}\n        </Badge>\n      </div>\n\n      {pendingLeases.length === 0 ? (\n        <Card>\n          <CardContent className=\"py-12 text-center\">\n            <FileText className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground\" />\n            <p className=\"text-muted-foreground\">Aucun bail en attente de certification</p>\n          </CardContent>\n        </Card>\n      ) : (\n        <div className=\"grid gap-4\">\n          {pendingLeases.map((lease) => (\n            <Card key={lease.id} className=\"hover:shadow-md transition-shadow\">\n              <CardHeader>\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <CardTitle className=\"text-lg flex items-center gap-2\">\n                      <FileText className=\"h-5 w-5\" />\n                      {lease.property.title}\n                    </CardTitle>\n                    <CardDescription className=\"flex items-center gap-1 mt-1\">\n                      <MapPin className=\"h-4 w-4\" />\n                      {lease.property.address}, {lease.property.city}\n                    </CardDescription>\n                  </div>\n                  <Badge variant=\"outline\">\n                    {lease.monthly_rent.toLocaleString()} FCFA/mois\n                  </Badge>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <User className=\"h-4 w-4 text-muted-foreground\" />\n                    <div>\n                      <p className=\"text-muted-foreground\">Propriétaire</p>\n                      <p className=\"font-medium\">{lease.landlord.full_name}</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <User className=\"h-4 w-4 text-muted-foreground\" />\n                    <div>\n                      <p className=\"text-muted-foreground\">Locataire</p>\n                      <p className=\"font-medium\">{lease.tenant.full_name}</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                    <Calendar className=\"h-4 w-4\" />\n                    Demandé le {format(new Date(lease.certification_requested_at), 'dd MMMM yyyy à HH:mm', { locale: fr })}\n                  </div>\n                  <Button onClick={() => handleReviewClick(lease.id)}>\n                    Examiner\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      {selectedLeaseId && (\n        <LeaseCertificationReview\n          leaseId={selectedLeaseId}\n          open={reviewOpen}\n          onClose={handleReviewClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport { LeaseCertificationQueue };\nexport default LeaseCertificationQueue;\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\n\nexport interface Column<T> {\n  header: string;\n  accessor: keyof T | ((row: T) => React.ReactNode);\n  className?: string;\n}\n\ninterface DataTableProps<T> {\n  data: T[];\n  columns: Column<T>[];\n  loading?: boolean;\n  onRowClick?: (row: T) => void;\n  emptyMessage?: string;\n}\n\nexport function DataTable<T extends { id?: string | number }>({\n  data,\n  columns,\n  loading = false,\n  onRowClick,\n  emptyMessage = 'Aucune donnée disponible',\n}: DataTableProps<T>) {\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          {columns.map((column, index) => (\n            <TableHead key={index} className={column.className}>\n              {column.header}\n            </TableHead>\n          ))}\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {data.length === 0 ? (\n          <TableRow>\n            <TableCell colSpan={columns.length} className=\"text-center text-muted-foreground\">\n              {emptyMessage}\n            </TableCell>\n          </TableRow>\n        ) : (\n          data.map((row, rowIndex) => (\n            <TableRow\n              key={row.id || rowIndex}\n              onClick={() => onRowClick?.(row)}\n              className={onRowClick ? 'cursor-pointer hover:bg-muted/50' : ''}\n            >\n              {columns.map((column, colIndex) => {\n                const value = typeof column.accessor === 'function'\n                  ? column.accessor(row)\n                  : row[column.accessor];\n                  \n                return (\n                  <TableCell key={colIndex} className={column.className}>\n                    {value as React.ReactNode}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          ))\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n","import * as React from \"react\";\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\";\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n);\nPagination.displayName = \"Pagination\";\n\nconst PaginationContent = React.forwardRef<HTMLUListElement, React.ComponentProps<\"ul\">>(\n  ({ className, ...props }, ref) => (\n    <ul ref={ref} className={cn(\"flex flex-row items-center gap-1\", className)} {...props} />\n  ),\n);\nPaginationContent.displayName = \"PaginationContent\";\n\nconst PaginationItem = React.forwardRef<HTMLLIElement, React.ComponentProps<\"li\">>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n));\nPaginationItem.displayName = \"PaginationItem\";\n\ntype PaginationLinkProps = {\n  isActive?: boolean;\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">;\n\nconst PaginationLink = ({ className, isActive, size = \"icon\", ...props }: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className,\n    )}\n    {...props}\n  />\n);\nPaginationLink.displayName = \"PaginationLink\";\n\nconst PaginationPrevious = ({ className, ...props }: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink aria-label=\"Go to previous page\" size=\"default\" className={cn(\"gap-1 pl-2.5\", className)} {...props}>\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n);\nPaginationPrevious.displayName = \"PaginationPrevious\";\n\nconst PaginationNext = ({ className, ...props }: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink aria-label=\"Go to next page\" size=\"default\" className={cn(\"gap-1 pr-2.5\", className)} {...props}>\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n);\nPaginationNext.displayName = \"PaginationNext\";\n\nconst PaginationEllipsis = ({ className, ...props }: React.ComponentProps<\"span\">) => (\n  <span aria-hidden className={cn(\"flex h-9 w-9 items-center justify-center\", className)} {...props}>\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n);\nPaginationEllipsis.displayName = \"PaginationEllipsis\";\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n};\n","import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Button } from '@/components/ui/button';\nimport { DataTable, Column } from './DataTable';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Pagination, PaginationContent, PaginationEllipsis, PaginationItem, PaginationLink, PaginationNext, PaginationPrevious } from '@/components/ui/pagination';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Download, Search, ChevronDown, ChevronRight, Calendar as CalendarIcon, AlertTriangle, Shield, Activity, Clock } from 'lucide-react';\nimport { format, startOfToday, subDays, startOfDay, endOfDay } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { cn } from '@/lib/utils';\nimport { handleError } from '@/lib/errorHandler';\nimport { logger } from '@/services/logger';\n\ninterface AuditLog {\n  id: string;\n  admin_id: string;\n  action_type: string;\n  target_type: string;\n  target_id: string;\n  old_values: any;\n  new_values: any;\n  ip_address: string | null;\n  user_agent: string | null;\n  notes: string | null;\n  created_at: string;\n  admin?: {\n    full_name: string;\n    avatar_url: string | null;\n  };\n}\n\ninterface SuspiciousActivity {\n  admin_id: string;\n  admin_name: string;\n  activity_type: string;\n  details: string;\n  log_count: number;\n  timestamp: string;\n}\n\nconst actionTypeLabels: Record<string, string> = {\n  lease_certified: 'Bail certifié',\n  lease_rejected: 'Bail rejeté',\n  lease_pending: 'Bail en attente',\n  role_assigned: 'Rôle attribué',\n  role_revoked: 'Rôle révoqué',\n  dispute_open: 'Litige ouvert',\n  dispute_resolved: 'Litige résolu',\n  dispute_in_progress: 'Litige en cours',\n  dispute_closed: 'Litige fermé',\n};\n\nconst getActionBadgeVariant = (actionType: string) => {\n  if (actionType.includes('certified') || actionType.includes('resolved')) return 'default';\n  if (actionType.includes('rejected') || actionType.includes('revoked')) return 'destructive';\n  if (actionType.includes('assigned')) return 'secondary';\n  return 'outline';\n};\n\nconst ITEMS_PER_PAGE = 50;\n\nexport function AuditLogViewer() {\n  const [logs, setLogs] = useState<AuditLog[]>([]);\n  const [filteredLogs, setFilteredLogs] = useState<AuditLog[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [actionFilter, setActionFilter] = useState<string>('all');\n  const [targetFilter, setTargetFilter] = useState<string>('all');\n  const [expandedRows, setExpandedRows] = useState<Set<string>>(new Set());\n  const [currentPage, setCurrentPage] = useState(1);\n  const [dateRange, setDateRange] = useState<{ from: Date; to: Date }>({\n    from: subDays(startOfToday(), 7),\n    to: endOfDay(new Date()),\n  });\n  const [suspiciousActivities, setSuspiciousActivities] = useState<SuspiciousActivity[]>([]);\n  const { toast } = useToast();\n  const { hasRole } = useAuth();\n\n  const isSuperAdmin = hasRole('super_admin');\n\n  useEffect(() => {\n    fetchAuditLogs();\n  }, [dateRange]);\n\n  useEffect(() => {\n    filterLogs();\n  }, [logs, searchTerm, actionFilter, targetFilter]);\n\n  useEffect(() => {\n    if (filteredLogs.length > 0) {\n      const suspicious = detectSuspiciousActivity(filteredLogs);\n      setSuspiciousActivities(suspicious);\n      \n      // Envoyer des alertes si des activités suspectes sont détectées\n      if (suspicious.length > 0 && isSuperAdmin) {\n        sendSuspiciousActivityAlerts(suspicious);\n      }\n    }\n  }, [filteredLogs, isSuperAdmin]);\n\n  const fetchAuditLogs = async () => {\n    try {\n      setLoading(true);\n      const { data: logsData, error } = await supabase\n        .from('admin_audit_logs')\n        .select('*')\n        .gte('created_at', dateRange.from.toISOString())\n        .lte('created_at', dateRange.to.toISOString())\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      // Enrichir avec les profils admin\n      if (logsData && logsData.length > 0) {\n        const adminIds = Array.from(new Set(logsData.map(log => log.admin_id)));\n        const { data: profiles } = await supabase\n          .from('profiles')\n          .select('id, full_name, avatar_url')\n          .in('id', adminIds);\n\n        const profileMap = new Map(profiles?.map(p => [p.id, p]) || []);\n        \n        const enrichedLogs = logsData.map(log => ({\n          ...log,\n          admin: profileMap.get(log.admin_id) ? {\n            full_name: profileMap.get(log.admin_id)!.full_name,\n            avatar_url: profileMap.get(log.admin_id)!.avatar_url\n          } : undefined\n        }));\n\n        setLogs(enrichedLogs);\n      } else {\n        setLogs([]);\n      }\n    } catch (error: any) {\n      handleError(error, 'Impossible de charger les logs d\\'audit');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const detectSuspiciousActivity = (logs: AuditLog[]): SuspiciousActivity[] => {\n    const suspicious: SuspiciousActivity[] = [];\n    const now = new Date();\n    const oneMinuteAgo = new Date(now.getTime() - 60 * 1000);\n    const officeHoursStart = 8; // 8h\n    const officeHoursEnd = 18; // 18h\n\n    // Détecter les actions en masse (>10 actions en 1 minute)\n    const recentLogs = logs.filter(log => new Date(log.created_at) > oneMinuteAgo);\n    const logsByAdmin = recentLogs.reduce((acc, log) => {\n      if (!acc[log.admin_id]) acc[log.admin_id] = [];\n      acc[log.admin_id].push(log);\n      return acc;\n    }, {} as Record<string, AuditLog[]>);\n\n    Object.entries(logsByAdmin).forEach(([adminId, adminLogs]) => {\n      if (adminLogs.length > 10) {\n        suspicious.push({\n          admin_id: adminId,\n          admin_name: adminLogs[0].admin?.full_name || 'Inconnu',\n          activity_type: 'Actions en masse',\n          details: `${adminLogs.length} actions en moins d'une minute`,\n          log_count: adminLogs.length,\n          timestamp: adminLogs[0].created_at,\n        });\n      }\n    });\n\n    // Détecter les IPs multiples pour un même admin\n    const adminIPs: Record<string, Set<string>> = {};\n    logs.forEach(log => {\n      if (log.ip_address) {\n        if (!adminIPs[log.admin_id]) adminIPs[log.admin_id] = new Set();\n        adminIPs[log.admin_id].add(log.ip_address);\n      }\n    });\n\n    Object.entries(adminIPs).forEach(([adminId, ips]) => {\n      if (ips.size > 3) {\n        const adminLog = logs.find(l => l.admin_id === adminId);\n        suspicious.push({\n          admin_id: adminId,\n          admin_name: adminLog?.admin?.full_name || 'Inconnu',\n          activity_type: 'IPs multiples',\n          details: `Connexions depuis ${ips.size} adresses IP différentes`,\n          log_count: ips.size,\n          timestamp: adminLog?.created_at || new Date().toISOString(),\n        });\n      }\n    });\n\n    // Détecter les actions critiques hors des heures de bureau\n    const criticalActions = ['role_assigned', 'role_revoked', 'lease_rejected'];\n    const offHoursActions = logs.filter(log => {\n      const hour = new Date(log.created_at).getHours();\n      return criticalActions.includes(log.action_type) && \n             (hour < officeHoursStart || hour >= officeHoursEnd);\n    });\n\n    const offHoursByAdmin = offHoursActions.reduce((acc, log) => {\n      if (!acc[log.admin_id]) acc[log.admin_id] = [];\n      acc[log.admin_id].push(log);\n      return acc;\n    }, {} as Record<string, AuditLog[]>);\n\n    Object.entries(offHoursByAdmin).forEach(([adminId, adminLogs]) => {\n      if (adminLogs.length > 0) {\n        suspicious.push({\n          admin_id: adminId,\n          admin_name: adminLogs[0].admin?.full_name || 'Inconnu',\n          activity_type: 'Actions critiques hors heures',\n          details: `${adminLogs.length} action(s) critique(s) hors des heures de bureau`,\n          log_count: adminLogs.length,\n          timestamp: adminLogs[0].created_at,\n        });\n      }\n    });\n\n    // Détecter les tentatives de suppression répétées\n    const deletionAttempts = logs.filter(log => \n      log.action_type.includes('delete') || log.action_type.includes('revoke')\n    );\n\n    const deletionsByAdmin = deletionAttempts.reduce((acc, log) => {\n      if (!acc[log.admin_id]) acc[log.admin_id] = [];\n      acc[log.admin_id].push(log);\n      return acc;\n    }, {} as Record<string, AuditLog[]>);\n\n    Object.entries(deletionsByAdmin).forEach(([adminId, adminLogs]) => {\n      if (adminLogs.length > 5) {\n        suspicious.push({\n          admin_id: adminId,\n          admin_name: adminLogs[0].admin?.full_name || 'Inconnu',\n          activity_type: 'Suppressions répétées',\n          details: `${adminLogs.length} tentative(s) de suppression/révocation`,\n          log_count: adminLogs.length,\n          timestamp: adminLogs[0].created_at,\n        });\n      }\n    });\n\n    return suspicious;\n  };\n\n  const sendSuspiciousActivityAlerts = async (activities: SuspiciousActivity[]) => {\n    try {\n      const { error } = await supabase.functions.invoke('alert-suspicious-activity', {\n        body: { suspicious_activities: activities }\n      });\n\n      if (error) {\n        logger.error('Error sending suspicious activity alerts', { error });\n      }\n    } catch (error) {\n      logger.error('Failed to invoke alert function', { error });\n    }\n  };\n\n  const filterLogs = () => {\n    let filtered = logs;\n\n    if (searchTerm) {\n      filtered = filtered.filter(\n        log =>\n          log.target_id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          log.notes?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          log.admin?.full_name?.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    if (actionFilter !== 'all') {\n      filtered = filtered.filter(log => log.action_type === actionFilter);\n    }\n\n    if (targetFilter !== 'all') {\n      filtered = filtered.filter(log => log.target_type === targetFilter);\n    }\n\n    setFilteredLogs(filtered);\n    setCurrentPage(1);\n  };\n\n  const exportToCSV = () => {\n    const headers = ['Date', 'Admin', 'Action', 'Type Cible', 'ID Cible', 'IP', 'Notes'];\n    const csvData = filteredLogs.map(log => [\n      format(new Date(log.created_at), 'dd/MM/yyyy HH:mm', { locale: fr }),\n      log.admin?.full_name || log.admin_id,\n      actionTypeLabels[log.action_type] || log.action_type,\n      log.target_type,\n      log.target_id,\n      log.ip_address || '-',\n      log.notes || '',\n    ]);\n\n    const csv = [\n      headers.join(','),\n      ...csvData.map(row => row.map(cell => `\"${cell}\"`).join(',')),\n    ].join('\\n');\n\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `audit_logs_${format(new Date(), 'yyyy-MM-dd')}.csv`;\n    a.click();\n  };\n\n  const toggleRowExpansion = (id: string) => {\n    setExpandedRows(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(id)) {\n        newSet.delete(id);\n      } else {\n        newSet.add(id);\n      }\n      return newSet;\n    });\n  };\n\n  const setDatePreset = (preset: 'today' | '7days' | '30days') => {\n    const today = startOfToday();\n    switch (preset) {\n      case 'today':\n        setDateRange({ from: startOfDay(today), to: endOfDay(today) });\n        break;\n      case '7days':\n        setDateRange({ from: subDays(today, 7), to: endOfDay(today) });\n        break;\n      case '30days':\n        setDateRange({ from: subDays(today, 30), to: endOfDay(today) });\n        break;\n    }\n  };\n\n  // Calculer les KPIs\n  const kpis = {\n    totalToday: logs.filter(log => \n      new Date(log.created_at) >= startOfDay(new Date())\n    ).length,\n    criticalActions: logs.filter(log => \n      ['role_assigned', 'role_revoked', 'lease_rejected'].includes(log.action_type)\n    ).length,\n    uniqueAdmins: new Set(logs.map(log => log.admin_id)).size,\n    lastAction: logs.length > 0 ? logs[0].created_at : null,\n  };\n\n  // Pagination\n  const totalPages = Math.ceil(filteredLogs.length / ITEMS_PER_PAGE);\n  const paginatedLogs = filteredLogs.slice(\n    (currentPage - 1) * ITEMS_PER_PAGE,\n    currentPage * ITEMS_PER_PAGE\n  );\n\n  const columns: Column<AuditLog>[] = [\n    {\n      header: '',\n      accessor: (log) => (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => toggleRowExpansion(log.id)}\n        >\n          {expandedRows.has(log.id) ? (\n            <ChevronDown className=\"h-4 w-4\" />\n          ) : (\n            <ChevronRight className=\"h-4 w-4\" />\n          )}\n        </Button>\n      ),\n      className: 'w-12',\n    },\n    {\n      header: 'Date',\n      accessor: (log) => format(new Date(log.created_at), 'dd/MM HH:mm', { locale: fr }),\n      className: 'font-medium',\n    },\n    {\n      header: 'Admin',\n      accessor: (log) => (\n        <div className=\"flex items-center gap-2\">\n          <Avatar className=\"h-6 w-6\">\n            <AvatarImage src={log.admin?.avatar_url || ''} />\n            <AvatarFallback>\n              {log.admin?.full_name?.charAt(0) || '?'}\n            </AvatarFallback>\n          </Avatar>\n          <span className=\"text-sm\">{log.admin?.full_name || 'Inconnu'}</span>\n        </div>\n      ),\n    },\n    {\n      header: 'Action',\n      accessor: (log) => (\n        <Badge variant={getActionBadgeVariant(log.action_type) as any}>\n          {actionTypeLabels[log.action_type] || log.action_type}\n        </Badge>\n      ),\n    },\n    {\n      header: 'Type',\n      accessor: 'target_type',\n    },\n    {\n      header: 'Notes',\n      accessor: (log) => (\n        <span className=\"text-sm text-muted-foreground truncate max-w-xs block\">\n          {log.notes || '-'}\n        </span>\n      ),\n    },\n  ];\n\n  const uniqueActions = Array.from(new Set(logs.map(l => l.action_type)));\n  const uniqueTargets = Array.from(new Set(logs.map(l => l.target_type)));\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Alertes d'activités suspectes */}\n      {suspiciousActivities.length > 0 && (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertTitle>⚠️ Activité suspecte détectée</AlertTitle>\n          <AlertDescription>\n            {suspiciousActivities.length} activité(s) suspecte(s) détectée(s) dans les logs récents.\n            <ul className=\"mt-2 space-y-1\">\n              {suspiciousActivities.slice(0, 3).map((activity, idx) => (\n                <li key={idx} className=\"text-sm\">\n                  <strong>{activity.admin_name}</strong>: {activity.activity_type} - {activity.details}\n                </li>\n              ))}\n            </ul>\n            {suspiciousActivities.length > 3 && (\n              <p className=\"text-sm mt-1\">... et {suspiciousActivities.length - 3} autre(s)</p>\n            )}\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* KPIs */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2 space-y-0\">\n            <CardTitle className=\"text-sm font-medium\">Logs du jour</CardTitle>\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{kpis.totalToday}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2 space-y-0\">\n            <CardTitle className=\"text-sm font-medium\">Actions critiques</CardTitle>\n            <Shield className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{kpis.criticalActions}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2 space-y-0\">\n            <CardTitle className=\"text-sm font-medium\">Admins actifs</CardTitle>\n            <Avatar className=\"h-4 w-4\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{kpis.uniqueAdmins}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2 space-y-0\">\n            <CardTitle className=\"text-sm font-medium\">Dernière action</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-sm\">\n              {kpis.lastAction \n                ? format(new Date(kpis.lastAction), 'HH:mm', { locale: fr })\n                : '-'}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Journal d'Audit {!isSuperAdmin && '(Vos actions uniquement)'}</CardTitle>\n          <CardDescription>\n            {isSuperAdmin \n              ? 'Historique de toutes les actions administratives (rétention: 1 an)'\n              : 'Historique de vos actions administratives'}\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Filtres temporels */}\n          <div className=\"flex flex-wrap gap-2\">\n            <Button variant=\"outline\" size=\"sm\" onClick={() => setDatePreset('today')}>\n              Aujourd'hui\n            </Button>\n            <Button variant=\"outline\" size=\"sm\" onClick={() => setDatePreset('7days')}>\n              7 derniers jours\n            </Button>\n            <Button variant=\"outline\" size=\"sm\" onClick={() => setDatePreset('30days')}>\n              30 derniers jours\n            </Button>\n            <Popover>\n              <PopoverTrigger asChild>\n                <Button variant=\"outline\" size=\"sm\">\n                  <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                  {format(dateRange.from, 'dd/MM/yy', { locale: fr })} - {format(dateRange.to, 'dd/MM/yy', { locale: fr })}\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                <Calendar\n                  mode=\"single\"\n                  selected={dateRange.from}\n                  onSelect={(date) => date && setDateRange({ ...dateRange, from: startOfDay(date) })}\n                  initialFocus\n                  className={cn(\"p-3 pointer-events-auto\")}\n                />\n              </PopoverContent>\n            </Popover>\n          </div>\n\n          {/* Filtres */}\n          <div className=\"flex flex-col md:flex-row gap-4\">\n            <div className=\"flex-1 relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Rechercher par nom, ID, notes...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-9\"\n              />\n            </div>\n            <Select value={actionFilter} onValueChange={setActionFilter}>\n              <SelectTrigger className=\"w-[200px]\">\n                <SelectValue placeholder=\"Type d'action\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">Toutes les actions</SelectItem>\n                {uniqueActions.map(action => (\n                  <SelectItem key={action} value={action}>\n                    {actionTypeLabels[action] || action}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <Select value={targetFilter} onValueChange={setTargetFilter}>\n              <SelectTrigger className=\"w-[200px]\">\n                <SelectValue placeholder=\"Type de cible\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">Toutes les cibles</SelectItem>\n                {uniqueTargets.map(target => (\n                  <SelectItem key={target} value={target}>\n                    {target}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <Button onClick={exportToCSV} variant=\"outline\">\n              <Download className=\"h-4 w-4 mr-2\" />\n              Exporter\n            </Button>\n          </div>\n\n          {/* Table */}\n          <div className=\"space-y-2\">\n            <DataTable\n              data={paginatedLogs}\n              columns={columns}\n              loading={loading}\n              emptyMessage=\"Aucun log d'audit trouvé\"\n            />\n            \n            {paginatedLogs.map(log => (\n              expandedRows.has(log.id) && (\n                <Card key={`detail-${log.id}`} className=\"ml-12 bg-muted/50\">\n                  <CardContent className=\"pt-6\">\n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                      <div>\n                        <p className=\"font-semibold\">ID Cible</p>\n                        <p className=\"font-mono text-xs\">{log.target_id}</p>\n                      </div>\n                      <div>\n                        <p className=\"font-semibold\">ID Admin</p>\n                        <p className=\"font-mono text-xs\">{log.admin_id}</p>\n                      </div>\n                      {log.ip_address && (\n                        <div>\n                          <p className=\"font-semibold\">Adresse IP</p>\n                          <p className=\"font-mono text-xs\">{log.ip_address}</p>\n                        </div>\n                      )}\n                      {log.user_agent && (\n                        <div className=\"col-span-2\">\n                          <p className=\"font-semibold\">User Agent</p>\n                          <p className=\"text-xs text-muted-foreground truncate\">{log.user_agent}</p>\n                        </div>\n                      )}\n                      {log.old_values && (\n                        <div className=\"col-span-2\">\n                          <p className=\"font-semibold mb-2\">Anciennes valeurs</p>\n                          <pre className=\"bg-background p-2 rounded text-xs overflow-x-auto\">\n                            {JSON.stringify(log.old_values, null, 2)}\n                          </pre>\n                        </div>\n                      )}\n                      {log.new_values && (\n                        <div className=\"col-span-2\">\n                          <p className=\"font-semibold mb-2\">Nouvelles valeurs</p>\n                          <pre className=\"bg-background p-2 rounded text-xs overflow-x-auto\">\n                            {JSON.stringify(log.new_values, null, 2)}\n                          </pre>\n                        </div>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              )\n            ))}\n          </div>\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <Pagination>\n              <PaginationContent>\n                <PaginationItem>\n                  <PaginationPrevious \n                    onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n                    className={currentPage === 1 ? 'pointer-events-none opacity-50' : 'cursor-pointer'}\n                  />\n                </PaginationItem>\n                {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                  const page = i + 1;\n                  return (\n                    <PaginationItem key={page}>\n                      <PaginationLink\n                        onClick={() => setCurrentPage(page)}\n                        isActive={currentPage === page}\n                        className=\"cursor-pointer\"\n                      >\n                        {page}\n                      </PaginationLink>\n                    </PaginationItem>\n                  );\n                })}\n                {totalPages > 5 && <PaginationEllipsis />}\n                <PaginationItem>\n                  <PaginationNext \n                    onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n                    className={currentPage === totalPages ? 'pointer-events-none opacity-50' : 'cursor-pointer'}\n                  />\n                </PaginationItem>\n              </PaginationContent>\n            </Pagination>\n          )}\n\n          <div className=\"text-sm text-muted-foreground\">\n            {filteredLogs.length} log(s) affiché(s) sur {logs.length} au total\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { supabase } from \"@/lib/supabase\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Plus, Edit, Copy, Trash2, Eye } from \"lucide-react\";\nimport { DataTable } from \"./DataTable\";\n\ninterface LeaseTemplate {\n  id: string;\n  name: string;\n  description: string | null;\n  template_type: string;\n  content: {\n    sections: Array<{\n      title: string;\n      content: string;\n    }>;\n  };\n  variables: string[];\n  is_active: boolean;\n  is_default: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface TemplateFormData {\n  name: string;\n  description: string;\n  template_type: string;\n  sections: Array<{\n    title: string;\n    content: string;\n  }>;\n}\n\nconst STANDARD_VARIABLES = [\n  \"landlord_name\", \"landlord_address\", \"landlord_phone\",\n  \"tenant_name\", \"tenant_address\", \"tenant_phone\",\n  \"property_address\", \"property_type\", \"bedrooms\", \"bathrooms\", \"surface_area\",\n  \"monthly_rent\", \"deposit_amount\", \"charges_amount\",\n  \"start_date\", \"end_date\", \"lease_duration\"\n];\n\nexport function LeaseTemplateManager() {\n  const [templates, setTemplates] = useState<LeaseTemplate[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [editingTemplate, setEditingTemplate] = useState<LeaseTemplate | null>(null);\n  const [previewTemplate, setPreviewTemplate] = useState<LeaseTemplate | null>(null);\n  const [showDialog, setShowDialog] = useState(false);\n  const [showPreview, setShowPreview] = useState(false);\n  const [formData, setFormData] = useState<TemplateFormData>({\n    name: \"\",\n    description: \"\",\n    template_type: \"residential\",\n    sections: [{ title: \"\", content: \"\" }]\n  });\n  const [activeSectionIndex, setActiveSectionIndex] = useState(0);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    fetchTemplates();\n  }, []);\n\n  const fetchTemplates = async () => {\n    try {\n      const { data, error } = await supabase\n        .from(\"lease_templates\")\n        .select(\"*\")\n        .order(\"is_default\", { ascending: false })\n        .order(\"created_at\", { ascending: false });\n\n      if (error) throw error;\n      setTemplates((data || []) as any as LeaseTemplate[]);\n    } catch (error: any) {\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de charger les modèles\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreate = () => {\n    setEditingTemplate(null);\n    setFormData({\n      name: \"\",\n      description: \"\",\n      template_type: \"residential\",\n      sections: [{ title: \"Nouvelle section\", content: \"\" }]\n    });\n    setActiveSectionIndex(0);\n    setShowDialog(true);\n  };\n\n  const handleEdit = (template: LeaseTemplate) => {\n    setEditingTemplate(template);\n    setFormData({\n      name: template.name,\n      description: template.description || \"\",\n      template_type: template.template_type,\n      sections: template.content.sections\n    });\n    setActiveSectionIndex(0);\n    setShowDialog(true);\n  };\n\n  const handleDuplicate = async (template: LeaseTemplate) => {\n    try {\n      const { error } = await supabase\n        .from(\"lease_templates\")\n        .insert({\n          name: `${template.name} (copie)`,\n          description: template.description,\n          template_type: template.template_type,\n          content: template.content,\n          variables: template.variables,\n          is_active: false,\n          is_default: false\n        });\n\n      if (error) throw error;\n\n      toast({\n        title: \"Succès\",\n        description: \"Modèle dupliqué avec succès\"\n      });\n      fetchTemplates();\n    } catch (error: any) {\n      toast({\n        title: \"Erreur\",\n        description: error.message,\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    if (!confirm(\"Êtes-vous sûr de vouloir supprimer ce modèle ?\")) return;\n\n    try {\n      const { error } = await supabase\n        .from(\"lease_templates\")\n        .delete()\n        .eq(\"id\", id);\n\n      if (error) throw error;\n\n      toast({\n        title: \"Succès\",\n        description: \"Modèle supprimé avec succès\"\n      });\n      fetchTemplates();\n    } catch (error: any) {\n      toast({\n        title: \"Erreur\",\n        description: error.message,\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleSave = async () => {\n    try {\n      const templateData = {\n        name: formData.name,\n        description: formData.description,\n        template_type: formData.template_type,\n        content: { sections: formData.sections },\n        variables: STANDARD_VARIABLES\n      };\n\n      if (editingTemplate) {\n        const { error } = await supabase\n          .from(\"lease_templates\")\n          .update(templateData)\n          .eq(\"id\", editingTemplate.id);\n\n        if (error) throw error;\n\n        toast({\n          title: \"Succès\",\n          description: \"Modèle mis à jour avec succès\"\n        });\n      } else {\n        const { error } = await supabase\n          .from(\"lease_templates\")\n          .insert(templateData);\n\n        if (error) throw error;\n\n        toast({\n          title: \"Succès\",\n          description: \"Modèle créé avec succès\"\n        });\n      }\n\n      setShowDialog(false);\n      fetchTemplates();\n    } catch (error: any) {\n      toast({\n        title: \"Erreur\",\n        description: error.message,\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const insertVariable = (variable: string) => {\n    const section = formData.sections[activeSectionIndex];\n    const newContent = section.content + `{{${variable}}}`;\n    \n    const newSections = [...formData.sections];\n    newSections[activeSectionIndex] = { ...section, content: newContent };\n    \n    setFormData({ ...formData, sections: newSections });\n  };\n\n  const updateSection = (index: number, field: \"title\" | \"content\", value: string) => {\n    const newSections = [...formData.sections];\n    newSections[index] = { ...newSections[index], [field]: value };\n    setFormData({ ...formData, sections: newSections });\n  };\n\n  const addSection = () => {\n    setFormData({\n      ...formData,\n      sections: [...formData.sections, { title: \"Nouvelle section\", content: \"\" }]\n    });\n    setActiveSectionIndex(formData.sections.length);\n  };\n\n  const removeSection = (index: number) => {\n    if (formData.sections.length === 1) {\n      toast({\n        title: \"Erreur\",\n        description: \"Un modèle doit avoir au moins une section\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    \n    const newSections = formData.sections.filter((_, i) => i !== index);\n    setFormData({ ...formData, sections: newSections });\n    setActiveSectionIndex(Math.max(0, activeSectionIndex - 1));\n  };\n\n  const renderPreview = (template: LeaseTemplate) => {\n    const sampleData: Record<string, string> = {\n      landlord_name: \"Jean DUPONT\",\n      landlord_address: \"123 Avenue de la République, Abidjan\",\n      landlord_phone: \"+225 07 12 34 56 78\",\n      tenant_name: \"Marie KOUASSI\",\n      tenant_address: \"456 Boulevard Latrille, Abidjan\",\n      tenant_phone: \"+225 05 98 76 54 32\",\n      property_address: \"Cocody Riviera Golf, Villa 789\",\n      property_type: \"Villa\",\n      bedrooms: \"3\",\n      bathrooms: \"2\",\n      surface_area: \"150\",\n      monthly_rent: \"500 000\",\n      deposit_amount: \"1 000 000\",\n      charges_amount: \"50 000\",\n      start_date: \"01/01/2025\",\n      end_date: \"31/12/2025\",\n      lease_duration: \"12 mois\"\n    };\n\n    return template.content.sections.map((section, idx) => {\n      let content = section.content;\n      Object.entries(sampleData).forEach(([key, value]) => {\n        content = content.replace(new RegExp(`{{${key}}}`, 'g'), value);\n      });\n\n      return (\n        <div key={idx} className=\"mb-6\">\n          <h3 className=\"text-lg font-bold mb-2\">{section.title}</h3>\n          <p className=\"whitespace-pre-wrap text-sm\">{content}</p>\n        </div>\n      );\n    });\n  };\n\n  const columns: any = [\n    {\n      accessorKey: \"name\",\n      header: \"Nom du modèle\",\n      cell: ({ row }: any) => (\n        <div>\n          <div className=\"font-medium\">{row.original.name}</div>\n          {row.original.is_default && (\n            <Badge variant=\"secondary\" className=\"mt-1\">Par défaut</Badge>\n          )}\n        </div>\n      )\n    },\n    {\n      accessorKey: \"template_type\",\n      header: \"Type\",\n      cell: ({ row }: any) => (\n        <Badge variant=\"outline\">\n          {row.original.template_type === \"residential\" ? \"Résidentiel\" : row.original.template_type}\n        </Badge>\n      )\n    },\n    {\n      accessorKey: \"is_active\",\n      header: \"Statut\",\n      cell: ({ row }: any) => (\n        <Badge variant={row.original.is_active ? \"default\" : \"secondary\"}>\n          {row.original.is_active ? \"Actif\" : \"Inactif\"}\n        </Badge>\n      )\n    },\n    {\n      id: \"actions\",\n      header: \"Actions\",\n      cell: ({ row }: any) => (\n        <div className=\"flex gap-2\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => {\n              setPreviewTemplate(row.original);\n              setShowPreview(true);\n            }}\n          >\n            <Eye className=\"h-4 w-4\" />\n          </Button>\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => handleEdit(row.original)}>\n            <Edit className=\"h-4 w-4\" />\n          </Button>\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => handleDuplicate(row.original)}>\n            <Copy className=\"h-4 w-4\" />\n          </Button>\n          {!row.original.is_default && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => handleDelete(row.original.id)}\n            >\n              <Trash2 className=\"h-4 w-4\" />\n            </Button>\n          )}\n        </div>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Modèles de Baux</h2>\n          <p className=\"text-muted-foreground\">Gérez les modèles de contrats de location</p>\n        </div>\n        <Button onClick={handleCreate}>\n          <Plus className=\"h-4 w-4 mr-2\" />\n          Nouveau modèle\n        </Button>\n      </div>\n\n      <DataTable columns={columns} data={templates} loading={loading} />\n\n      {/* Editor Dialog */}\n      <Dialog open={showDialog} onOpenChange={setShowDialog}>\n        <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>\n              {editingTemplate ? \"Modifier le modèle\" : \"Nouveau modèle\"}\n            </DialogTitle>\n            <DialogDescription>\n              Personnalisez votre modèle de bail en utilisant les variables disponibles\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"grid grid-cols-3 gap-6\">\n            {/* Column 1: Basic Info & Sections List */}\n            <div className=\"space-y-4\">\n              <div>\n                <Label>Nom du modèle</Label>\n                <Input\n                  value={formData.name}\n                  onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                  placeholder=\"Ex: Bail résidentiel standard\"\n                />\n              </div>\n\n              <div>\n                <Label>Description</Label>\n                <Textarea\n                  value={formData.description}\n                  onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                  placeholder=\"Description du modèle\"\n                  rows={3}\n                />\n              </div>\n\n              <div>\n                <Label>Type</Label>\n                <Select value={formData.template_type} onValueChange={(value) => setFormData({ ...formData, template_type: value })}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"residential\">Résidentiel</SelectItem>\n                    <SelectItem value=\"commercial\">Commercial</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <Label>Sections</Label>\n                  <Button size=\"sm\" variant=\"outline\" onClick={addSection}>\n                    <Plus className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n                <div className=\"space-y-2\">\n                  {formData.sections.map((section, idx) => (\n                    <div\n                      key={idx}\n                      className={`p-2 rounded border cursor-pointer flex justify-between items-center ${\n                        idx === activeSectionIndex ? \"bg-accent\" : \"\"\n                      }`}\n                      onClick={() => setActiveSectionIndex(idx)}\n                    >\n                      <span className=\"text-sm truncate\">{section.title || \"Sans titre\"}</span>\n                      {formData.sections.length > 1 && (\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            removeSection(idx);\n                          }}\n                        >\n                          <Trash2 className=\"h-3 w-3\" />\n                        </Button>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <Label className=\"mb-2\">Variables disponibles</Label>\n                <div className=\"flex flex-wrap gap-1\">\n                  {STANDARD_VARIABLES.map((variable) => (\n                    <Badge\n                      key={variable}\n                      variant=\"outline\"\n                      className=\"cursor-pointer hover:bg-accent\"\n                      onClick={() => insertVariable(variable)}\n                    >\n                      {variable}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Column 2: Section Editor */}\n            <div className=\"space-y-4\">\n              <div>\n                <Label>Titre de la section</Label>\n                <Input\n                  value={formData.sections[activeSectionIndex]?.title || \"\"}\n                  onChange={(e) => updateSection(activeSectionIndex, \"title\", e.target.value)}\n                  placeholder=\"Ex: Parties au contrat\"\n                />\n              </div>\n\n              <div>\n                <Label>Contenu de la section</Label>\n                <Textarea\n                  value={formData.sections[activeSectionIndex]?.content || \"\"}\n                  onChange={(e) => updateSection(activeSectionIndex, \"content\", e.target.value)}\n                  placeholder=\"Saisissez le contenu. Cliquez sur une variable pour l'insérer.\"\n                  rows={20}\n                  className=\"font-mono text-sm\"\n                />\n              </div>\n            </div>\n\n            {/* Column 3: Live Preview */}\n            <div className=\"border rounded-lg p-4 overflow-y-auto max-h-[600px]\">\n              <h4 className=\"font-bold mb-4\">Aperçu en temps réel</h4>\n              {renderPreview({\n                ...editingTemplate!,\n                content: { sections: formData.sections }\n              } as LeaseTemplate)}\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setShowDialog(false)}>\n              Annuler\n            </Button>\n            <Button onClick={handleSave}>\n              {editingTemplate ? \"Mettre à jour\" : \"Créer\"}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Preview Dialog */}\n      <Dialog open={showPreview} onOpenChange={setShowPreview}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>{previewTemplate?.name}</DialogTitle>\n            <DialogDescription>{previewTemplate?.description}</DialogDescription>\n          </DialogHeader>\n\n          <div className=\"border rounded-lg p-6 space-y-4\">\n            {previewTemplate && renderPreview(previewTemplate)}\n          </div>\n\n          <DialogFooter>\n            <Button onClick={() => setShowPreview(false)}>Fermer</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Shield, Loader2 } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\nexport function PromoteToSuperAdmin() {\n  const { user, hasRole, refreshProfile } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const { toast } = useToast();\n\n  const isSuperAdmin = hasRole('super_admin');\n\n  const handlePromote = async () => {\n    if (!user) return;\n\n    setLoading(true);\n    try {\n      const { error } = await supabase.rpc('promote_to_super_admin', {\n        target_user_id: user.id\n      });\n\n      if (error) throw error;\n\n      toast({\n        title: 'Promotion réussie',\n        description: 'Vous êtes maintenant Super Admin. Veuillez rafraîchir la page.',\n      });\n\n      // Rafraîchir le profil pour mettre à jour les rôles\n      await refreshProfile();\n      \n      // Recharger la page après 2 secondes\n      setTimeout(() => {\n        window.location.reload();\n      }, 2000);\n\n    } catch (error: any) {\n      toast({\n        title: 'Erreur',\n        description: error.message || 'Impossible de vous promouvoir',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (isSuperAdmin) {\n    return (\n      <Alert>\n        <Shield className=\"h-4 w-4\" />\n        <AlertDescription>\n          Vous êtes déjà Super Admin\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Shield className=\"h-5 w-5\" />\n          Devenir Super Admin\n        </CardTitle>\n        <CardDescription>\n          Première connexion ? Promouvez-vous en Super Admin pour accéder à toutes les fonctionnalités d'administration.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Alert className=\"mb-4\">\n          <AlertDescription>\n            <strong>Note importante :</strong> Cette action est réservée au premier administrateur.\n            Par la suite, seuls les Super Admins pourront promouvoir d'autres utilisateurs.\n          </AlertDescription>\n        </Alert>\n        <Button \n          onClick={handlePromote} \n          disabled={loading}\n          className=\"w-full\"\n        >\n          {loading ? (\n            <>\n              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n              Promotion en cours...\n            </>\n          ) : (\n            <>\n              <Shield className=\"h-4 w-4 mr-2\" />\n              Me promouvoir en Super Admin\n            </>\n          )}\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Loader2, Shield, AlertTriangle, CheckCircle, XCircle } from 'lucide-react';\nimport { toast } from '@/hooks/use-toast';\nimport { logger } from '@/services/logger';\n\ninterface AccessLog {\n  id: string;\n  requester_id: string;\n  target_user_id: string;\n  data_type: string;\n  access_granted: boolean;\n  relationship_type: string;\n  metadata: any;\n  accessed_at: string;\n}\n\nexport const SensitiveDataAccessMonitor = () => {\n  const [logs, setLogs] = useState<AccessLog[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [filterDataType, setFilterDataType] = useState<string>('all');\n  const [searchUserId, setSearchUserId] = useState('');\n\n  useEffect(() => {\n    fetchAccessLogs();\n  }, [filterDataType]);\n\n  const fetchAccessLogs = async () => {\n    setLoading(true);\n    try {\n      let query = supabase\n        .from('sensitive_data_access_log')\n        .select('*')\n        .order('accessed_at', { ascending: false })\n        .limit(100);\n\n      if (filterDataType !== 'all') {\n        query = query.eq('data_type', filterDataType);\n      }\n\n      if (searchUserId.trim()) {\n        query = query.or(`requester_id.eq.${searchUserId},target_user_id.eq.${searchUserId}`);\n      }\n\n      const { data, error } = await query;\n\n      if (error) {\n        logger.error('Error fetching access logs', { error });\n        toast({\n          title: \"Erreur\",\n          description: \"Impossible de charger les logs d'accès\",\n          variant: \"destructive\",\n        });\n      } else {\n        setLogs(data || []);\n      }\n    } catch (error) {\n      logger.error('Exception fetching logs', { error });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getDataTypeIcon = (dataType: string) => {\n    switch (dataType) {\n      case 'phone':\n        return '📱';\n      case 'verification':\n        return '🆔';\n      case 'payment':\n        return '💳';\n      case 'dispute':\n        return '⚖️';\n      default:\n        return '📄';\n    }\n  };\n\n  const getAccessBadge = (granted: boolean) => {\n    return granted ? (\n      <Badge variant=\"default\" className=\"bg-green-600\">\n        <CheckCircle className=\"w-3 h-3 mr-1\" />\n        Autorisé\n      </Badge>\n    ) : (\n      <Badge variant=\"destructive\">\n        <XCircle className=\"w-3 h-3 mr-1\" />\n        Refusé\n      </Badge>\n    );\n  };\n\n  const getRelationshipBadge = (relationship: string) => {\n    const colors: Record<string, string> = {\n      'self': 'bg-primary',\n      'admin': 'bg-destructive',\n      'landlord_to_applicant': 'bg-success',\n      'applicant_to_landlord': 'bg-success',\n      'lease_party': 'bg-warning',\n      'unauthorized': 'bg-destructive',\n    };\n\n    return (\n      <Badge variant=\"outline\" className={colors[relationship] || ''}>\n        {relationship}\n      </Badge>\n    );\n  };\n\n  // Detect suspicious patterns\n  const suspiciousLogs = logs.filter(log => !log.access_granted);\n  const recentUnauthorized = suspiciousLogs.filter(log => {\n    const logTime = new Date(log.accessed_at).getTime();\n    const oneHourAgo = Date.now() - (60 * 60 * 1000);\n    return logTime > oneHourAgo;\n  });\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Alert for suspicious activity */}\n      {recentUnauthorized.length > 10 && (\n        <Card className=\"border-red-500 bg-red-50 dark:bg-red-950\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-red-900 dark:text-red-100\">\n              <AlertTriangle className=\"h-5 w-5\" />\n              Activité suspecte détectée\n            </CardTitle>\n            <CardDescription className=\"text-red-800 dark:text-red-200\">\n              {recentUnauthorized.length} tentatives d'accès non autorisées dans la dernière heure\n            </CardDescription>\n          </CardHeader>\n        </Card>\n      )}\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total accès</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{logs.length}</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Autorisés</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">\n              {logs.filter(l => l.access_granted).length}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Refusés</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-600\">\n              {suspiciousLogs.length}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Dernière heure</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {recentUnauthorized.length}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filters */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Shield className=\"h-5 w-5\" />\n            Logs d'accès aux données sensibles\n          </CardTitle>\n          <CardDescription>\n            Surveillance des accès aux numéros de téléphone, vérifications, paiements, etc.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex gap-4\">\n            <Select value={filterDataType} onValueChange={setFilterDataType}>\n              <SelectTrigger className=\"w-[200px]\">\n                <SelectValue placeholder=\"Type de données\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">Tous les types</SelectItem>\n                <SelectItem value=\"phone\">📱 Téléphone</SelectItem>\n                <SelectItem value=\"verification\">🆔 Vérification</SelectItem>\n                <SelectItem value=\"payment\">💳 Paiement</SelectItem>\n                <SelectItem value=\"dispute\">⚖️ Dispute</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Input\n              placeholder=\"Rechercher par User ID...\"\n              value={searchUserId}\n              onChange={(e) => setSearchUserId(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  fetchAccessLogs();\n                }\n              }}\n            />\n          </div>\n\n          {loading ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <Loader2 className=\"h-8 w-8 animate-spin\" />\n            </div>\n          ) : logs.length === 0 ? (\n            <div className=\"text-center py-8 text-muted-foreground\">\n              Aucun log d'accès trouvé\n            </div>\n          ) : (\n            <div className=\"space-y-2\">\n              {logs.map((log) => (\n                <div\n                  key={log.id}\n                  className=\"border rounded-lg p-4 hover:bg-accent/50 transition-colors\"\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"space-y-1\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-lg\">{getDataTypeIcon(log.data_type)}</span>\n                        <span className=\"font-medium\">{log.data_type}</span>\n                        {getAccessBadge(log.access_granted)}\n                        {getRelationshipBadge(log.relationship_type)}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        <span className=\"font-mono\">{log.requester_id.substring(0, 8)}...</span>\n                        {' → '}\n                        <span className=\"font-mono\">{log.target_user_id.substring(0, 8)}...</span>\n                      </div>\n                    </div>\n                    <div className=\"text-xs text-muted-foreground text-right\">\n                      {new Date(log.accessed_at).toLocaleString('fr-FR', {\n                        year: 'numeric',\n                        month: 'short',\n                        day: 'numeric',\n                        hour: '2-digit',\n                        minute: '2-digit',\n                      })}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default SensitiveDataAccessMonitor;\n","import { useState, useEffect, useCallback } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { logger } from '@/services/logger';\n\nexport interface MfaComplianceStatus {\n  user_id: string;\n  full_name: string;\n  role: 'admin' | 'super_admin';\n  has_mfa: boolean;\n  account_created_at: string;\n  grace_period_expires_at: string;\n  is_compliant: boolean;\n  days_remaining: number;\n  status: 'compliant' | 'warning' | 'critical';\n}\n\nexport const useMfaCompliance = () => {\n  const [admins, setAdmins] = useState<MfaComplianceStatus[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  const calculateStatus = (admin: any): MfaComplianceStatus => {\n    const expiresAt = new Date(admin.grace_period_expires_at);\n    const now = new Date();\n    const daysRemaining = Math.ceil((expiresAt.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));\n\n    let status: 'compliant' | 'warning' | 'critical';\n    if (admin.has_mfa) {\n      status = 'compliant';\n    } else if (daysRemaining < 0) {\n      status = 'critical';\n    } else if (daysRemaining <= 3) {\n      status = 'warning';\n    } else {\n      status = 'compliant';\n    }\n\n    return {\n      ...admin,\n      days_remaining: Math.max(0, daysRemaining),\n      status,\n    };\n  };\n\n  const fetchCompliance = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { data, error: rpcError } = await supabase.rpc('check_admin_mfa_compliance');\n\n      if (rpcError) throw rpcError;\n\n      const processedAdmins = (data || []).map(calculateStatus);\n      setAdmins(processedAdmins);\n    } catch (err) {\n      logger.logError(err, { context: 'useMfaCompliance', action: 'fetch' });\n      setError(err as Error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchCompliance();\n\n    // Auto-refresh every 60 seconds\n    const interval = setInterval(fetchCompliance, 60000);\n    return () => clearInterval(interval);\n  }, [fetchCompliance]);\n\n  const refresh = useCallback(() => {\n    fetchCompliance();\n  }, [fetchCompliance]);\n\n  const compliantCount = admins.filter(a => a.status === 'compliant').length;\n  const warningCount = admins.filter(a => a.status === 'warning').length;\n  const criticalCount = admins.filter(a => a.status === 'critical').length;\n\n  return {\n    admins,\n    loading,\n    error,\n    refresh,\n    stats: {\n      total: admins.length,\n      compliant: compliantCount,\n      warning: warningCount,\n      critical: criticalCount,\n    },\n  };\n};\n","import { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Shield, AlertTriangle, CheckCircle, XCircle, Clock, RefreshCw, Bell } from 'lucide-react';\nimport { useMfaCompliance } from '@/hooks/useMfaCompliance';\nimport { useToast } from '@/hooks/use-toast';\nimport { Skeleton } from '@/components/ui/skeleton';\n\nexport const EnhancedMfaSecurityMonitor = () => {\n  const { admins, loading, stats, refresh } = useMfaCompliance();\n  const { toast } = useToast();\n  const [sendingNotification, setSendingNotification] = useState<string | null>(null);\n\n  const handleSendReminder = async (userId: string, fullName: string) => {\n    setSendingNotification(userId);\n    try {\n      // Simuler l'envoi de notification\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      toast({\n        title: \"Rappel envoyé\",\n        description: `Notification envoyée à ${fullName}`,\n      });\n    } catch (error) {\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible d'envoyer la notification\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setSendingNotification(null);\n    }\n  };\n\n  const getStatusIcon = (status: 'compliant' | 'warning' | 'critical') => {\n    switch (status) {\n      case 'compliant':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'warning':\n        return <AlertTriangle className=\"h-4 w-4 text-amber-500\" />;\n      case 'critical':\n        return <XCircle className=\"h-4 w-4 text-destructive\" />;\n    }\n  };\n\n  const getGracePeriodText = (admin: typeof admins[0]) => {\n    if (admin.has_mfa) {\n      return (\n        <span className=\"flex items-center gap-1 text-green-600\">\n          <CheckCircle className=\"h-3 w-3\" />\n          Conforme\n        </span>\n      );\n    }\n\n    if (admin.status === 'critical') {\n      return (\n        <span className=\"flex items-center gap-1 text-destructive font-medium\">\n          <XCircle className=\"h-3 w-3\" />\n          Expiré depuis {-admin.days_remaining} jour{-admin.days_remaining > 1 ? 's' : ''}\n        </span>\n      );\n    }\n\n    if (admin.status === 'warning') {\n      return (\n        <span className=\"flex items-center gap-1 text-amber-600 font-medium\">\n          <Clock className=\"h-3 w-3\" />\n          Expire dans {admin.days_remaining} jour{admin.days_remaining > 1 ? 's' : ''}\n        </span>\n      );\n    }\n\n    return (\n      <span className=\"flex items-center gap-1 text-muted-foreground\">\n        <Clock className=\"h-3 w-3\" />\n        {admin.days_remaining} jours restants\n      </span>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"grid gap-4 md:grid-cols-4\">\n          {[...Array(4)].map((_, i) => (\n            <Card key={i}>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <Skeleton className=\"h-4 w-24\" />\n                <Skeleton className=\"h-8 w-8 rounded-full\" />\n              </CardHeader>\n              <CardContent>\n                <Skeleton className=\"h-8 w-16\" />\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Alerts */}\n      {stats.critical > 0 && (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertTitle>🚨 Action Immédiate Requise</AlertTitle>\n          <AlertDescription className=\"mt-2\">\n            {stats.critical} administrateur{stats.critical > 1 ? 's' : ''} doi{stats.critical > 1 ? 'vent' : 't'} activer la 2FA immédiatement.\n            Leur accès aux fonctions sensibles est bloqué.\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {stats.warning > 0 && stats.critical === 0 && (\n        <Alert className=\"border-amber-500 bg-amber-50\">\n          <Clock className=\"h-4 w-4 text-amber-600\" />\n          <AlertTitle className=\"text-amber-900\">⚠️ Attention</AlertTitle>\n          <AlertDescription className=\"text-amber-800\">\n            {stats.warning} administrateur{stats.warning > 1 ? 's' : ''} doi{stats.warning > 1 ? 'vent' : 't'} activer la 2FA avant expiration du délai de grâce.\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Metrics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Admins</CardTitle>\n            <Shield className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.total}</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Conformes</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-green-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">{stats.compliant}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {stats.total > 0 ? Math.round((stats.compliant / stats.total) * 100) : 0}% du total\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">En Attente</CardTitle>\n            <Clock className=\"h-4 w-4 text-amber-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-amber-600\">{stats.warning}</div>\n            <p className=\"text-xs text-muted-foreground\">Grace period actif</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Critiques</CardTitle>\n            <XCircle className=\"h-4 w-4 text-destructive\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-destructive\">{stats.critical}</div>\n            <p className=\"text-xs text-muted-foreground\">Grace period expiré</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Admin Table */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle>État MFA des Administrateurs</CardTitle>\n              <CardDescription>Suivi de la conformité 2FA en temps réel</CardDescription>\n            </div>\n            <Button onClick={refresh} variant=\"outline\" size=\"sm\">\n              <RefreshCw className=\"h-4 w-4 mr-2\" />\n              Actualiser\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Statut</TableHead>\n                <TableHead>Administrateur</TableHead>\n                <TableHead>MFA</TableHead>\n                <TableHead>Grace Period</TableHead>\n                <TableHead className=\"text-right\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {admins.map((admin) => (\n                <TableRow key={admin.user_id}>\n                  <TableCell>{getStatusIcon(admin.status)}</TableCell>\n                  <TableCell>\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-medium\">{admin.full_name}</span>\n                      <Badge variant={admin.role === 'super_admin' ? 'default' : 'secondary'} className=\"w-fit mt-1\">\n                        {admin.role === 'super_admin' ? 'Super Admin' : 'Admin'}\n                      </Badge>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    {admin.has_mfa ? (\n                      <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200\">\n                        Activée\n                      </Badge>\n                    ) : (\n                      <Badge variant=\"outline\" className=\"bg-red-50 text-red-700 border-red-200\">\n                        Désactivée\n                      </Badge>\n                    )}\n                  </TableCell>\n                  <TableCell>{getGracePeriodText(admin)}</TableCell>\n                  <TableCell className=\"text-right\">\n                    {!admin.has_mfa && (\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => handleSendReminder(admin.user_id, admin.full_name)}\n                        disabled={sendingNotification === admin.user_id}\n                      >\n                        <Bell className=\"h-3 w-3 mr-2\" />\n                        {sendingNotification === admin.user_id ? 'Envoi...' : 'Rappel'}\n                      </Button>\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n              {admins.length === 0 && (\n                <TableRow>\n                  <TableCell colSpan={5} className=\"text-center text-muted-foreground py-8\">\n                    Aucun administrateur trouvé\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { toast } from '@/hooks/use-toast';\nimport { supabase } from '@/lib/supabase';\nimport { Settings, AlertTriangle, Save, Clock } from 'lucide-react';\nimport { logger } from '@/services/logger';\n\nexport const ProcessingConfigPanel = () => {\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  \n  // Configuration du délai\n  const [deadlineHours, setDeadlineHours] = useState(48);\n  \n  // Configuration de l'action automatique\n  const [autoActionEnabled, setAutoActionEnabled] = useState(false);\n  const [autoActionType, setAutoActionType] = useState<'approved' | 'rejected' | 'none'>('none');\n\n  useEffect(() => {\n    fetchConfig();\n  }, []);\n\n  const fetchConfig = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('processing_config')\n        .select('*');\n\n      if (error) throw error;\n\n      if (data) {\n        data.forEach(config => {\n          if (config.config_key === 'application_processing_deadline_hours') {\n            const configValue = config.config_value as { value?: number; unit?: string };\n            setDeadlineHours(configValue.value || 48);\n          }\n          if (config.config_key === 'auto_action_after_deadline') {\n            const configValue = config.config_value as { enabled?: boolean; action?: 'approved' | 'rejected' | 'none' };\n            setAutoActionEnabled(configValue.enabled || false);\n            setAutoActionType(configValue.action || 'none');\n          }\n        });\n      }\n    } catch (error) {\n      logger.error('Error fetching processing config', { error });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger la configuration',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSave = async () => {\n    setSaving(true);\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('Non authentifié');\n\n      // Mettre à jour le délai\n      await supabase\n        .from('processing_config')\n        .update({\n          config_value: { value: deadlineHours, unit: 'hours' },\n          updated_by: user.id,\n          updated_at: new Date().toISOString()\n        })\n        .eq('config_key', 'application_processing_deadline_hours');\n\n      // Mettre à jour l'action automatique\n      await supabase\n        .from('processing_config')\n        .update({\n          config_value: {\n            enabled: autoActionEnabled,\n            action: autoActionEnabled ? autoActionType : 'none'\n          },\n          updated_by: user.id,\n          updated_at: new Date().toISOString()\n        })\n        .eq('config_key', 'auto_action_after_deadline');\n\n      toast({\n        title: 'Configuration enregistrée',\n        description: 'Les paramètres de traitement ont été mis à jour avec succès.',\n      });\n    } catch (error) {\n      logger.error('Error saving processing config', { error });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de sauvegarder la configuration',\n        variant: 'destructive',\n      });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"py-12\">\n          <div className=\"flex items-center justify-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center gap-2\">\n          <Settings className=\"h-5 w-5 text-primary\" />\n          <CardTitle>Configuration du Traitement des Dossiers</CardTitle>\n        </div>\n        <CardDescription>\n          Gérez les délais et actions automatiques pour le traitement des candidatures\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Section Délai */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center gap-2\">\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n            <Label className=\"text-base font-semibold\">Délai de traitement</Label>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"deadline\">Délai en heures</Label>\n            <div className=\"flex items-center gap-4\">\n              <Input\n                id=\"deadline\"\n                type=\"number\"\n                min={24}\n                max={168}\n                value={deadlineHours}\n                onChange={(e) => setDeadlineHours(Math.max(24, Math.min(168, parseInt(e.target.value) || 48)))}\n                className=\"w-32\"\n              />\n              <span className=\"text-sm text-muted-foreground\">\n                ({Math.round(deadlineHours / 24 * 10) / 10} jours)\n              </span>\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Les candidatures seront marquées comme en retard après ce délai (min: 24h, max: 168h/7 jours)\n            </p>\n          </div>\n        </div>\n\n        <div className=\"border-t pt-6 space-y-4\">\n          {/* Section Action Automatique */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2\">\n              <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\n              <Label className=\"text-base font-semibold\">Action automatique après délai</Label>\n            </div>\n\n            <div className=\"flex items-center justify-between p-4 rounded-lg bg-muted/50\">\n              <div className=\"space-y-0.5\">\n                <Label htmlFor=\"auto-action-toggle\" className=\"text-base\">\n                  Activer le traitement automatique\n                </Label>\n                <p className=\"text-sm text-muted-foreground\">\n                  Les dossiers en retard seront traités automatiquement\n                </p>\n              </div>\n              <Switch\n                id=\"auto-action-toggle\"\n                checked={autoActionEnabled}\n                onCheckedChange={setAutoActionEnabled}\n              />\n            </div>\n\n            {autoActionEnabled && (\n              <div className=\"space-y-3 ml-4 pl-4 border-l-2 border-primary/20\">\n                <Label htmlFor=\"auto-action-type\">Type d'action</Label>\n                <Select value={autoActionType} onValueChange={(value: 'approved' | 'rejected' | 'none') => setAutoActionType(value)}>\n                  <SelectTrigger id=\"auto-action-type\">\n                    <SelectValue placeholder=\"Sélectionner une action\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"approved\">✅ Valider automatiquement</SelectItem>\n                    <SelectItem value=\"rejected\">❌ Rejeter automatiquement</SelectItem>\n                    <SelectItem value=\"none\">⏸️ Aucune action (marquage seulement)</SelectItem>\n                  </SelectContent>\n                </Select>\n                <p className=\"text-xs text-muted-foreground\">\n                  Cette action sera appliquée aux dossiers dépassant le délai configuré\n                </p>\n\n                <Alert variant=\"destructive\">\n                  <AlertTriangle className=\"h-4 w-4\" />\n                  <AlertTitle>Attention</AlertTitle>\n                  <AlertDescription className=\"text-sm\">\n                    {autoActionType === 'approved' && 'Les candidatures en retard seront APPROUVÉES automatiquement. Assurez-vous que c\\'est le comportement souhaité.'}\n                    {autoActionType === 'rejected' && 'Les candidatures en retard seront REJETÉES automatiquement. Cela peut affecter l\\'expérience utilisateur.'}\n                    {autoActionType === 'none' && 'Les candidatures seront seulement marquées comme en retard, sans action automatique.'}\n                  </AlertDescription>\n                </Alert>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"pt-4 flex justify-end\">\n          <Button \n            onClick={handleSave} \n            disabled={saving}\n            className=\"gap-2\"\n          >\n            <Save className=\"h-4 w-4\" />\n            {saving ? 'Enregistrement...' : 'Enregistrer la configuration'}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { toast } from '@/hooks/use-toast';\nimport { supabase } from '@/lib/supabase';\nimport { BarChart, TrendingUp, Download, Clock, CheckCircle, XCircle, AlertCircle } from 'lucide-react';\nimport { AuditLogViewer } from './AuditLogViewer';\nimport { logger } from '@/services/logger';\n\ninterface AnalyticsKPI {\n  totalProcessed: number;\n  avgProcessingTimeHours: number;\n  complianceRate: number;\n  currentOverdue: number;\n  autoProcessed: number;\n}\n\nexport const ProcessingAnalytics = () => {\n  const [loading, setLoading] = useState(true);\n  const [kpis, setKpis] = useState<AnalyticsKPI>({\n    totalProcessed: 0,\n    avgProcessingTimeHours: 0,\n    complianceRate: 0,\n    currentOverdue: 0,\n    autoProcessed: 0\n  });\n\n  useEffect(() => {\n    fetchAnalytics();\n  }, []);\n\n  const fetchAnalytics = async () => {\n    try {\n      // Total traités (approved + rejected)\n      const { count: totalProcessed } = await supabase\n        .from('rental_applications')\n        .select('*', { count: 'exact', head: true })\n        .in('status', ['approved', 'rejected']);\n\n      // Temps moyen de traitement\n      const { data: processedApps } = await supabase\n        .from('rental_applications')\n        .select('created_at, reviewed_at')\n        .not('reviewed_at', 'is', null);\n\n      let avgProcessingTimeHours = 0;\n      if (processedApps && processedApps.length > 0) {\n        const totalHours = processedApps.reduce((sum, app) => {\n          if (app.reviewed_at && app.created_at) {\n            const diffMs = new Date(app.reviewed_at).getTime() - new Date(app.created_at).getTime();\n            return sum + (diffMs / (1000 * 60 * 60));\n          }\n          return sum;\n        }, 0);\n        avgProcessingTimeHours = Math.round(totalHours / processedApps.length);\n      }\n\n      // Taux de respect du délai\n      const { data: allProcessed } = await supabase\n        .from('rental_applications')\n        .select('processing_deadline, reviewed_at')\n        .not('reviewed_at', 'is', null);\n\n      let complianceRate = 0;\n      if (allProcessed && allProcessed.length > 0) {\n        const withinDeadline = allProcessed.filter(app => {\n          if (!app.reviewed_at || !app.processing_deadline) return false;\n          return new Date(app.reviewed_at) <= new Date(app.processing_deadline);\n        }).length;\n        complianceRate = Math.round((withinDeadline / allProcessed.length) * 100);\n      }\n\n      // Dossiers en retard actuellement\n      const { count: currentOverdue } = await supabase\n        .from('rental_applications')\n        .select('*', { count: 'exact', head: true })\n        .eq('status', 'pending')\n        .eq('is_overdue', true);\n\n      // Dossiers auto-traités\n      const { count: autoProcessed } = await supabase\n        .from('rental_applications')\n        .select('*', { count: 'exact', head: true })\n        .eq('auto_processed', true);\n\n      setKpis({\n        totalProcessed: totalProcessed || 0,\n        avgProcessingTimeHours,\n        complianceRate,\n        currentOverdue: currentOverdue || 0,\n        autoProcessed: autoProcessed || 0\n      });\n    } catch (error) {\n      logger.error('Error fetching processing analytics', { error });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger les analytics',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExportOverdue = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('rental_applications')\n        .select(`\n          *,\n          properties (title, city, monthly_rent),\n          profiles!rental_applications_applicant_id_fkey (full_name, phone)\n        `)\n        .eq('status', 'pending')\n        .eq('is_overdue', true)\n        .order('processing_deadline', { ascending: true });\n\n      if (error) throw error;\n\n      if (!data || data.length === 0) {\n        toast({\n          title: 'Aucun dossier en retard',\n          description: 'Il n\\'y a aucun dossier en retard à exporter.',\n        });\n        return;\n      }\n\n      // Générer CSV\n      const headers = ['ID', 'Candidat', 'Téléphone', 'Propriété', 'Ville', 'Loyer', 'Date soumission', 'Deadline', 'Score'];\n      const csvContent = [\n        headers.join(','),\n        ...data.map(app => [\n          app.id,\n          (app.profiles as any)?.full_name || 'N/A',\n          (app.profiles as any)?.phone || 'N/A',\n          (app.properties as any)?.title || 'N/A',\n          (app.properties as any)?.city || 'N/A',\n          (app.properties as any)?.monthly_rent || '0',\n          new Date(app.created_at).toLocaleDateString('fr-FR'),\n          app.processing_deadline ? new Date(app.processing_deadline).toLocaleDateString('fr-FR') : 'N/A',\n          app.application_score || '0'\n        ].join(','))\n      ].join('\\n');\n\n      // Télécharger\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = `dossiers-retard-${new Date().toISOString().split('T')[0]}.csv`;\n      link.click();\n\n      toast({\n        title: 'Export réussi',\n        description: `${data.length} dossier(s) exporté(s) avec succès.`,\n      });\n    } catch (error) {\n      logger.error('Error exporting processing analytics', { error });\n      toast({\n        title: 'Erreur d\\'export',\n        description: 'Impossible d\\'exporter les dossiers',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"py-12\">\n          <div className=\"flex items-center justify-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* KPI Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center gap-2\">\n              <BarChart className=\"h-4 w-4\" />\n              Total Traités\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{kpis.totalProcessed}</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">Dossiers approuvés ou rejetés</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center gap-2\">\n              <Clock className=\"h-4 w-4\" />\n              Temps Moyen\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{kpis.avgProcessingTimeHours}h</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              ~{Math.round(kpis.avgProcessingTimeHours / 24)} jours\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center gap-2\">\n              <TrendingUp className=\"h-4 w-4\" />\n              Taux de Respect\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{kpis.complianceRate}%</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">Traités dans les délais</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-orange-200 dark:border-orange-800\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-orange-600 flex items-center gap-2\">\n              <AlertCircle className=\"h-4 w-4\" />\n              En Retard\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-orange-600\">{kpis.currentOverdue}</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">Nécessitent attention</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground flex items-center gap-2\">\n              <CheckCircle className=\"h-4 w-4\" />\n              Auto-traités\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{kpis.autoProcessed}</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">Traités automatiquement</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Export */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Download className=\"h-5 w-5 text-primary\" />\n                Export des Données\n              </CardTitle>\n              <CardDescription>\n                Exportez les dossiers en retard au format CSV\n              </CardDescription>\n            </div>\n            <Button onClick={handleExportOverdue} variant=\"outline\" className=\"gap-2\">\n              <Download className=\"h-4 w-4\" />\n              Exporter les dossiers en retard\n            </Button>\n          </div>\n        </CardHeader>\n      </Card>\n\n      {/* Audit Logs filtrés */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <BarChart className=\"h-5 w-5 text-primary\" />\n            Historique des Actions Automatiques\n          </CardTitle>\n          <CardDescription>\n            Journal des traitements automatiques effectués par le système\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-sm text-muted-foreground mb-4\">\n            Pour consulter l'historique complet des actions automatiques, utilisez le filtre \"auto_process_overdue_applications\" dans l'onglet Audit.\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","import { useCallback, useEffect, useMemo, useRef, useState, startTransition } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { Database, Loader2, CheckCircle2, XCircle, RotateCcw } from 'lucide-react';\nimport { supabase } from '@/lib/supabase';\nimport { toast } from 'sonner';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger\n} from '@/components/ui/alert-dialog';\nimport { logger } from '@/services/logger';\n\ntype SeedStatus = 'idle' | 'seeding' | 'success' | 'error';\n\ninterface SeedResult {\n  users: number;\n  properties: number;\n  applications: number;\n  leases: number;\n  favorites: number;\n  messages: number;\n  searches: number;\n  reviews: number;\n  overdueApplications: number;\n}\n\ninterface SeedFunctionResponse {\n  result?: Partial<SeedResult>;\n  error?: string;\n  requestId?: string;\n}\n\nconst EMPTY_RESULT: SeedResult = {\n  users: 0,\n  properties: 0,\n  applications: 0,\n  leases: 0,\n  favorites: 0,\n  messages: 0,\n  searches: 0,\n  reviews: 0,\n  overdueApplications: 0\n};\n\nexport const SeedDemoDataButton = () => {\n  const [status, setStatus] = useState<SeedStatus>('idle');\n  const [progress, setProgress] = useState(0);\n  const [stats, setStats] = useState<SeedResult>(EMPTY_RESULT);\n  const [error, setError] = useState<string | null>(null);\n  const abortRef = useRef<AbortController | null>(null);\n  const mountedRef = useRef(true);\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const steps = useMemo(\n    () => [\n      { p: 10, label: 'Initialisation' },\n      { p: 35, label: 'Préparation des utilisateurs' },\n      { p: 60, label: 'Création propriétés & candidatures' },\n      { p: 85, label: 'Baux, favoris, messages' },\n      { p: 100, label: 'Nettoyage & vérification' }\n    ],\n    []\n  );\n\n  useEffect(() => {\n    return () => {\n      mountedRef.current = false;\n      abortRef.current?.abort();\n    };\n  }, []);\n\n  const escalateProgress = useCallback(async () => {\n    for (const s of steps) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (!mountedRef.current) return;\n      setProgress((prev) => (s.p > prev ? s.p : prev));\n    }\n  }, [steps]);\n\n  const safeSet = useCallback(<T,>(setter: (v: T | ((prev: T) => T)) => void, next: T | ((prev: T) => T)) => {\n    if (mountedRef.current) setter(next);\n  }, []);\n\n  const resetAll = useCallback(() => {\n    abortRef.current?.abort();\n    abortRef.current = null;\n    setStatus('idle');\n    setProgress(0);\n    setStats(EMPTY_RESULT);\n    setError(null);\n  }, []);\n\n  const invokeSeed = useCallback(async (): Promise<SeedFunctionResponse> => {\n    abortRef.current = new AbortController();\n\n    const { data, error: functionError } = await supabase.functions.invoke<SeedFunctionResponse>(\n      'seed-demo-data',\n      {\n        body: { idempotencyKey: crypto.randomUUID() },\n        signal: abortRef.current.signal,\n      }\n    );\n\n    if (functionError) {\n      throw new Error(functionError.message || 'Échec de la fonction Edge');\n    }\n\n    return data ?? {};\n  }, []);\n\n  const handleSeedData = useCallback(async () => {\n    setDialogOpen(false);\n    safeSet(setError, null);\n    safeSet(setStatus, 'seeding');\n    safeSet(setProgress, 5);\n\n    try {\n      escalateProgress();\n\n      const data = await invokeSeed();\n\n      if (data.error) {\n        throw new Error(data.error);\n      }\n\n      const merged: SeedResult = {\n        ...EMPTY_RESULT,\n        ...data.result,\n      };\n\n      startTransition(() => {\n        safeSet(setStats, merged);\n        safeSet(setProgress, 100);\n        safeSet(setStatus, 'success');\n      });\n\n      toast.success('Données de démo créées avec succès !', {\n        description: `${merged.users} utilisateurs, ${merged.properties} propriétés, ${merged.applications} candidatures, ${merged.leases} baux créés.`\n      });\n    } catch (err: unknown) {\n      logger.error('Error seeding demo data', { error: err });\n      const message =\n        err instanceof Error\n          ? err.message\n          : typeof err === 'string'\n          ? err\n          : 'Erreur lors de la création des données';\n\n      safeSet(setStatus, 'error');\n      safeSet(setError, message);\n      safeSet(setProgress, 0);\n\n      toast.error('Erreur lors de la création des données', {\n        description: message\n      });\n    } finally {\n      abortRef.current = null;\n    }\n  }, [escalateProgress, invokeSeed, safeSet]);\n\n  const seeding = status === 'seeding';\n  const success = status === 'success';\n  const failed = status === 'error';\n\n  const StatusIcon = () => {\n    if (seeding) return <Loader2 className=\"h-5 w-5 animate-spin\" aria-hidden />;\n    if (success) return <CheckCircle2 className=\"h-5 w-5 text-green-500\" aria-hidden />;\n    if (failed) return <XCircle className=\"h-5 w-5 text-destructive\" aria-hidden />;\n    return <Database className=\"h-5 w-5\" aria-hidden />;\n  };\n\n  const statusText =\n    seeding ? 'Génération en cours…'\n    : success ? 'Données créées avec succès !'\n    : failed ? 'Erreur lors de la génération'\n    : 'Prêt à générer les données';\n\n  return (\n    <Card aria-busy={seeding} aria-live=\"polite\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Database className=\"h-5 w-5\" aria-hidden />\n          Générer des données de démonstration\n        </CardTitle>\n        <CardDescription>\n          Crée un jeu de données complet pour tester la plateforme : utilisateurs, propriétés, candidatures, baux, etc.\n        </CardDescription>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        <AlertDialog open={dialogOpen} onOpenChange={setDialogOpen}>\n          <AlertDialogTrigger asChild>\n            <Button\n              className=\"w-full\"\n              disabled={seeding}\n              onClick={() => setDialogOpen(true)}\n            >\n              {seeding ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Génération en cours…\n                </>\n              ) : (\n                <>\n                  <Database className=\"mr-2 h-4 w-4\" />\n                  Générer les données\n                </>\n              )}\n            </Button>\n          </AlertDialogTrigger>\n\n          <AlertDialogContent>\n            <AlertDialogHeader>\n              <AlertDialogTitle>Générer les données de démonstration ?</AlertDialogTitle>\n              <AlertDialogDescription asChild>\n                <div>\n                  Cette action va créer un ensemble complet de données de test incluant :\n                  <ul className=\"list-disc list-inside mt-2 space-y-1\">\n                    <li>≈ 17 utilisateurs (propriétaires, agences, locataires, admins)</li>\n                    <li>≈ 18 propriétés dans différents quartiers d'Abidjan</li>\n                    <li>≈ 25 candidatures (dont 3 en retard)</li>\n                    <li>≈ 4 baux (dont 2 certifiés ANSUT)</li>\n                    <li>Favoris, messages et avis</li>\n                  </ul>\n                  <p className=\"mt-2 text-sm\">\n                    <strong>Note :</strong> L'opération peut prendre quelques instants.\n                  </p>\n                </div>\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n            <AlertDialogFooter>\n              <AlertDialogCancel disabled={seeding}>Annuler</AlertDialogCancel>\n              <AlertDialogAction disabled={seeding} onClick={handleSeedData}>\n                Générer\n              </AlertDialogAction>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n\n        {(status !== 'idle') && (\n          <div className=\"space-y-2\" role=\"status\" aria-label={statusText}>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <StatusIcon />\n                <span className=\"text-sm font-medium\">{statusText}</span>\n              </div>\n              <span className=\"text-sm text-muted-foreground\">{progress}%</span>\n            </div>\n            <Progress value={progress} />\n          </div>\n        )}\n\n        {error && (\n          <div className=\"rounded-lg bg-destructive/10 p-3 text-sm text-destructive\">\n            <strong>Erreur :</strong> {error}\n          </div>\n        )}\n\n        {success && (\n          <div className=\"rounded-lg bg-green-500/10 p-4 space-y-3\">\n            <h4 className=\"font-semibold text-green-700 dark:text-green-400\">\n              Données créées avec succès\n            </h4>\n\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 text-sm text-muted-foreground\">\n              <div>• {stats.users} utilisateurs</div>\n              <div>• {stats.properties} propriétés</div>\n              <div>• {stats.applications} candidatures</div>\n              <div>• {stats.leases} baux</div>\n              <div>• {stats.favorites} favoris</div>\n              <div>• {stats.messages} messages</div>\n              <div>• {stats.searches} recherches</div>\n              <div>• {stats.reviews} avis</div>\n              {stats.overdueApplications > 0 && (\n                <div>• {stats.overdueApplications} candidatures en retard traitées</div>\n              )}\n            </div>\n\n            <div className=\"pt-2\">\n              <Button variant=\"outline\" size=\"sm\" onClick={resetAll}>\n                <RotateCcw className=\"mr-2 h-4 w-4\" />\n                Réinitialiser l'état\n              </Button>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Shield, CheckCircle, XCircle, Clock, TrendingUp } from 'lucide-react';\nimport { DataTable } from './DataTable';\nimport { logger } from '@/services/logger';\n\ninterface SignatureMetrics {\n  totalCertificates: number;\n  activeCertificates: number;\n  expiringSoon: number;\n  totalSignatures: number;\n  successfulSignatures: number;\n  failedSignatures: number;\n  successRate: number;\n  avgProcessingTime: number;\n}\n\ninterface RecentSignature {\n  id: string;\n  lease_id: string;\n  user_id: string;\n  operation_id: string;\n  signature_type: string;\n  status: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport const ElectronicSignaturesDashboard = () => {\n  const [metrics, setMetrics] = useState<SignatureMetrics>({\n    totalCertificates: 0,\n    activeCertificates: 0,\n    expiringSoon: 0,\n    totalSignatures: 0,\n    successfulSignatures: 0,\n    failedSignatures: 0,\n    successRate: 0,\n    avgProcessingTime: 0\n  });\n  const [recentSignatures, setRecentSignatures] = useState<RecentSignature[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchMetrics();\n    fetchRecentSignatures();\n  }, []);\n\n  const fetchMetrics = async () => {\n    try {\n      // Certificates\n      const { count: totalCerts } = await supabase\n        .from('digital_certificates')\n        .select('*', { count: 'exact', head: true });\n\n      const { count: activeCerts } = await supabase\n        .from('digital_certificates')\n        .select('*', { count: 'exact', head: true })\n        .eq('certificate_status', 'active');\n\n      const expiringDate = new Date();\n      expiringDate.setDate(expiringDate.getDate() + 30);\n      \n      const { count: expiring } = await supabase\n        .from('digital_certificates')\n        .select('*', { count: 'exact', head: true })\n        .eq('certificate_status', 'active')\n        .lt('expires_at', expiringDate.toISOString());\n\n      // Signatures\n      const { count: totalSigs } = await supabase\n        .from('electronic_signature_logs')\n        .select('*', { count: 'exact', head: true });\n\n      const { count: successSigs } = await supabase\n        .from('electronic_signature_logs')\n        .select('*', { count: 'exact', head: true })\n        .eq('status', 'completed');\n\n      const { count: failedSigs } = await supabase\n        .from('electronic_signature_logs')\n        .select('*', { count: 'exact', head: true })\n        .eq('status', 'failed');\n\n      // Average processing time (simplified)\n      const avgTime = 45; // TODO: Calculate from actual data\n\n      setMetrics({\n        totalCertificates: totalCerts || 0,\n        activeCertificates: activeCerts || 0,\n        expiringSoon: expiring || 0,\n        totalSignatures: totalSigs || 0,\n        successfulSignatures: successSigs || 0,\n        failedSignatures: failedSigs || 0,\n        successRate: totalSigs ? ((successSigs || 0) / totalSigs) * 100 : 0,\n        avgProcessingTime: avgTime\n      });\n    } catch (error) {\n      logger.error('Error fetching signature metrics', { error });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchRecentSignatures = async () => {\n    const { data } = await supabase\n      .from('electronic_signature_logs')\n      .select('*')\n      .order('created_at', { ascending: false })\n      .limit(10);\n\n    if (data) {\n      setRecentSignatures(data);\n    }\n  };\n\n  const columns: any[] = [\n    {\n      header: 'Type',\n      accessorKey: 'signature_type',\n      cell: ({ row }: any) => (\n        <Badge variant=\"outline\">\n          {row.original.signature_type === 'landlord' ? 'Propriétaire' : 'Locataire'}\n        </Badge>\n      )\n    },\n    {\n      header: 'Statut',\n      accessorKey: 'status',\n      cell: ({ row }: any) => {\n        const status = row.original.status;\n        return (\n          <Badge variant={\n            status === 'completed' ? 'default' :\n            status === 'failed' ? 'destructive' :\n            'secondary'\n          }>\n            {status === 'completed' ? 'Complété' :\n             status === 'failed' ? 'Échoué' :\n             status === 'in_progress' ? 'En cours' : 'Initié'}\n          </Badge>\n        );\n      }\n    },\n    {\n      header: 'Date',\n      accessorKey: 'created_at',\n      cell: ({ row }: any) => new Date(row.original.created_at).toLocaleDateString('fr-FR')\n    }\n  ];\n\n  if (loading) {\n    return <div>Chargement...</div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Certificats Actifs</CardTitle>\n            <Shield className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.activeCertificates}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              sur {metrics.totalCertificates} total\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Taux de Succès</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.successRate.toFixed(1)}%</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {metrics.successfulSignatures} / {metrics.totalSignatures} signatures\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Certificats Expirant</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.expiringSoon}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              dans les 30 prochains jours\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Échecs</CardTitle>\n            <XCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.failedSignatures}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              signatures échouées\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Signatures Récentes</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <DataTable \n            columns={columns}\n            data={recentSignatures}\n          />\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","import { useState, useEffect, useMemo, useCallback } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { DataTable } from './DataTable';\nimport { MoreVertical, Shield, AlertTriangle, RefreshCw, Download, Filter, X, TrendingUp, CheckCircle2 } from 'lucide-react';\nimport { logger } from '@/services/logger';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { toast } from '@/hooks/use-toast';\n\ninterface User {\n  full_name: string;\n}\n\ninterface Certificate {\n  id: string;\n  user_id: string;\n  certificate_id: string;\n  certificate_status: 'active' | 'expired' | 'revoked';\n  expires_at: string;\n  created_at: string;\n  user?: User;\n}\n\ntype CertificateStatus = Certificate['certificate_status'];\n\nconst EXPIRY_WARNING_DAYS = 30;\nconst REFRESH_DELAY = 2000;\nconst PAGE_SIZE = 10;\n\nexport const CertificateManager = () => {\n  const [certificates, setCertificates] = useState<Certificate[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [revokeDialogOpen, setRevokeDialogOpen] = useState(false);\n  const [selectedCertificate, setSelectedCertificate] = useState<string | null>(null);\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<'all' | CertificateStatus>('all');\n  const [expiryFilter, setExpiryFilter] = useState<'all' | 'valid' | 'expiring'>('all');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    fetchCertificates();\n  }, []);\n\n  const fetchCertificates = async () => {\n    try {\n      setLoading(true);\n      \n      const { data, error } = await supabase\n        .from('digital_certificates')\n        .select('*, user:profiles(full_name)')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      if (data) {\n        setCertificates(data as Certificate[]);\n      }\n    } catch (error) {\n      logger.error('Error fetching certificates', { error });\n      toast({\n        title: 'Erreur de chargement',\n        description: 'Impossible de charger les certificats.',\n        variant: 'destructive'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const isExpiringSoon = useCallback((expiryDate: string): boolean => {\n    const date = new Date(expiryDate);\n    const daysUntilExpiry = (date.getTime() - Date.now()) / (1000 * 60 * 60 * 24);\n    return daysUntilExpiry < EXPIRY_WARNING_DAYS && daysUntilExpiry > 0;\n  }, []);\n\n  const stats = useMemo(() => {\n    const active = certificates.filter(c => c.certificate_status === 'active').length;\n    const expired = certificates.filter(c => c.certificate_status === 'expired').length;\n    const revoked = certificates.filter(c => c.certificate_status === 'revoked').length;\n    const expiringSoon = certificates.filter(c => \n      c.certificate_status === 'active' && isExpiringSoon(c.expires_at)\n    ).length;\n\n    return { total: certificates.length, active, expired, revoked, expiringSoon };\n  }, [certificates, isExpiringSoon]);\n\n  const filteredCertificates = useMemo(() => {\n    return certificates.filter(cert => {\n      const matchesSearch = !searchTerm || \n        cert.user?.full_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        cert.certificate_id.toLowerCase().includes(searchTerm.toLowerCase());\n\n      const matchesStatus = statusFilter === 'all' || cert.certificate_status === statusFilter;\n\n      let matchesExpiry = true;\n      if (expiryFilter === 'expiring') {\n        matchesExpiry = cert.certificate_status === 'active' && isExpiringSoon(cert.expires_at);\n      } else if (expiryFilter === 'valid') {\n        matchesExpiry = cert.certificate_status === 'active' && !isExpiringSoon(cert.expires_at);\n      }\n\n      return matchesSearch && matchesStatus && matchesExpiry;\n    });\n  }, [certificates, searchTerm, statusFilter, expiryFilter, isExpiringSoon]);\n\n  const paginatedCertificates = useMemo(() => {\n    const start = (currentPage - 1) * PAGE_SIZE;\n    return filteredCertificates.slice(start, start + PAGE_SIZE);\n  }, [filteredCertificates, currentPage]);\n\n  const totalPages = Math.ceil(filteredCertificates.length / PAGE_SIZE);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [searchTerm, statusFilter, expiryFilter]);\n\n  const confirmRevoke = useCallback((certificateId: string) => {\n    setSelectedCertificate(certificateId);\n    setRevokeDialogOpen(true);\n  }, []);\n\n  const handleRevokeCertificate = async () => {\n    if (!selectedCertificate) return;\n\n    try {\n      const { error } = await supabase\n        .from('digital_certificates')\n        .update({ certificate_status: 'revoked' })\n        .eq('id', selectedCertificate);\n\n      if (error) throw error;\n\n      toast({ \n        title: 'Certificat révoqué',\n        description: 'Le certificat a été révoqué avec succès.'\n      });\n      \n      fetchCertificates();\n    } catch (error) {\n      logger.error('Error revoking certificate', { error });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de révoquer le certificat.',\n        variant: 'destructive'\n      });\n    } finally {\n      setRevokeDialogOpen(false);\n      setSelectedCertificate(null);\n    }\n  };\n\n  const handleRegenerateCertificate = useCallback(async (userId: string) => {\n    try {\n      const { error } = await supabase.functions.invoke('cryptoneo-generate-certificate', {\n        body: { userId }\n      });\n\n      if (error) throw error;\n\n      toast({ \n        title: 'Régénération lancée',\n        description: 'Le certificat est en cours de régénération.'\n      });\n      \n      setTimeout(fetchCertificates, REFRESH_DELAY);\n    } catch (error) {\n      logger.error('Error regenerating certificate', { error });\n      toast({\n        title: 'Erreur de régénération',\n        description: 'Impossible de régénérer le certificat.',\n        variant: 'destructive'\n      });\n    }\n  }, []);\n\n  const handleExportCSV = useCallback(() => {\n    try {\n      const headers = ['Utilisateur', 'Certificat ID', 'Statut', 'Date expiration', 'Date création'];\n      const csvContent = [\n        headers.join(','),\n        ...filteredCertificates.map(cert => [\n          `\"${cert.user?.full_name || 'N/A'}\"`,\n          `\"${cert.certificate_id}\"`,\n          cert.certificate_status,\n          new Date(cert.expires_at).toLocaleDateString('fr-FR'),\n          new Date(cert.created_at).toLocaleDateString('fr-FR')\n        ].join(','))\n      ].join('\\n');\n\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const link = document.createElement('a');\n      const url = URL.createObjectURL(blob);\n      \n      link.setAttribute('href', url);\n      link.setAttribute('download', `certificats_${new Date().toISOString().split('T')[0]}.csv`);\n      link.style.visibility = 'hidden';\n      \n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      toast({\n        title: 'Export réussi',\n        description: `${filteredCertificates.length} certificat(s) exporté(s)`\n      });\n    } catch (error) {\n      logger.error('Error exporting CSV', { error });\n      toast({\n        title: 'Erreur export',\n        description: 'Impossible d\\'exporter les données',\n        variant: 'destructive'\n      });\n    }\n  }, [filteredCertificates]);\n\n  const clearFilters = useCallback(() => {\n    setSearchTerm('');\n    setStatusFilter('all');\n    setExpiryFilter('all');\n  }, []);\n\n  const hasActiveFilters = searchTerm || statusFilter !== 'all' || expiryFilter !== 'all';\n\n  const getStatusBadge = useCallback((status: CertificateStatus) => {\n    const variants = {\n      active: { variant: 'default' as const, label: 'Actif' },\n      expired: { variant: 'secondary' as const, label: 'Expiré' },\n      revoked: { variant: 'destructive' as const, label: 'Révoqué' }\n    };\n    \n    const config = variants[status];\n    return <Badge variant={config.variant}>{config.label}</Badge>;\n  }, []);\n\n  const columns: any[] = useMemo(() => [\n    {\n      header: 'Utilisateur',\n      accessorKey: 'user.full_name',\n      cell: ({ row }: any) => row.original.user?.full_name || 'N/A'\n    },\n    {\n      header: 'Certificat ID',\n      accessorKey: 'certificate_id',\n      cell: ({ row }: any) => (\n        <code className=\"text-xs bg-muted px-2 py-0.5 rounded\">\n          {row.original.certificate_id.substring(0, 16)}...\n        </code>\n      )\n    },\n    {\n      header: 'Statut',\n      accessorKey: 'certificate_status',\n      cell: ({ row }: any) => getStatusBadge(row.original.certificate_status)\n    },\n    {\n      header: 'Expire le',\n      accessorKey: 'expires_at',\n      cell: ({ row }: any) => {\n        const date = new Date(row.original.expires_at);\n        const showWarning = isExpiringSoon(row.original.expires_at);\n        \n        return (\n          <div className=\"flex items-center gap-2\">\n            {showWarning && (\n              <AlertTriangle className=\"h-3 w-3 text-orange-500\" />\n            )}\n            <span>{date.toLocaleDateString('fr-FR')}</span>\n          </div>\n        );\n      }\n    },\n    {\n      header: 'Actions',\n      id: 'actions',\n      cell: ({ row }: any) => {\n        const isRevoked = row.original.certificate_status === 'revoked';\n        \n        return (\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" size=\"sm\" aria-label=\"Actions\">\n                <MoreVertical className=\"h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuItem onClick={() => handleRegenerateCertificate(row.original.user_id)}>\n                <Shield className=\"h-4 w-4 mr-2\" />\n                Régénérer\n              </DropdownMenuItem>\n              {!isRevoked && (\n                <>\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem \n                    onClick={() => confirmRevoke(row.original.id)}\n                    className=\"text-destructive\"\n                  >\n                    Révoquer\n                  </DropdownMenuItem>\n                </>\n              )}\n            </DropdownMenuContent>\n          </DropdownMenu>\n        );\n      }\n    }\n  ], [getStatusBadge, isExpiringSoon, handleRegenerateCertificate, confirmRevoke]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Statistics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Total</p>\n                <p className=\"text-2xl font-bold\">{stats.total}</p>\n              </div>\n              <TrendingUp className=\"h-8 w-8 text-muted-foreground\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Actifs</p>\n                <p className=\"text-2xl font-bold text-green-600 dark:text-green-500\">{stats.active}</p>\n              </div>\n              <Shield className=\"h-8 w-8 text-green-600 dark:text-green-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Expire bientôt</p>\n                <p className=\"text-2xl font-bold text-orange-600 dark:text-orange-500\">{stats.expiringSoon}</p>\n              </div>\n              <AlertTriangle className=\"h-8 w-8 text-orange-600 dark:text-orange-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Expirés</p>\n                <p className=\"text-2xl font-bold\">{stats.expired}</p>\n              </div>\n              <CheckCircle2 className=\"h-8 w-8 text-muted-foreground\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Révoqués</p>\n                <p className=\"text-2xl font-bold text-red-600 dark:text-red-500\">{stats.revoked}</p>\n              </div>\n              <X className=\"h-8 w-8 text-red-600 dark:text-red-500\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Card */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-4\">\n          <CardTitle>Gestion des Certificats</CardTitle>\n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleExportCSV}\n              disabled={loading || filteredCertificates.length === 0}\n            >\n              <Download className=\"h-4 w-4 mr-2\" />\n              Exporter\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={fetchCertificates}\n              disabled={loading}\n            >\n              <RefreshCw className={loading ? 'h-4 w-4 mr-2 animate-spin' : 'h-4 w-4 mr-2'} />\n              Actualiser\n            </Button>\n          </div>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-4\">\n          {/* Filters */}\n          <div className=\"flex flex-col md:flex-row gap-4\">\n            <div className=\"flex-1\">\n              <Input\n                placeholder=\"Rechercher par nom ou ID certificat...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"max-w-sm\"\n              />\n            </div>\n            \n            <Select value={statusFilter} onValueChange={(value: any) => setStatusFilter(value)}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"Tous les statuts\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">Tous les statuts</SelectItem>\n                <SelectItem value=\"active\">Actif</SelectItem>\n                <SelectItem value=\"expired\">Expiré</SelectItem>\n                <SelectItem value=\"revoked\">Révoqué</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Select value={expiryFilter} onValueChange={(value: any) => setExpiryFilter(value)}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"Expiration\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">Toutes expirations</SelectItem>\n                <SelectItem value=\"valid\">Valide (&gt;30j)</SelectItem>\n                <SelectItem value=\"expiring\">Expire bientôt (&lt;30j)</SelectItem>\n              </SelectContent>\n            </Select>\n\n            {hasActiveFilters && (\n              <Button variant=\"ghost\" size=\"sm\" onClick={clearFilters}>\n                <X className=\"h-4 w-4 mr-2\" />\n                Réinitialiser\n              </Button>\n            )}\n          </div>\n\n          <div className=\"text-sm text-muted-foreground\">\n            {filteredCertificates.length} résultat(s) trouvé(s)\n          </div>\n\n          {/* Table or Loading/Empty State */}\n          {loading ? (\n            <div className=\"space-y-3\">\n              {[...Array(5)].map((_, i) => (\n                <Skeleton key={i} className=\"h-12 w-full\" />\n              ))}\n            </div>\n          ) : filteredCertificates.length === 0 ? (\n            <div className=\"text-center py-12 text-muted-foreground\">\n              <Filter className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n              <p className=\"text-lg font-medium\">Aucun certificat trouvé</p>\n              <p className=\"text-sm mt-2\">\n                {hasActiveFilters \n                  ? 'Essayez de modifier vos filtres de recherche'\n                  : 'Commencez par générer des certificats'\n                }\n              </p>\n            </div>\n          ) : (\n            <>\n              <DataTable columns={columns} data={paginatedCertificates} />\n\n              {/* Pagination */}\n              {totalPages > 1 && (\n                <div className=\"flex items-center justify-between pt-4\">\n                  <div className=\"text-sm text-muted-foreground\">\n                    Page {currentPage} sur {totalPages}\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n                      disabled={currentPage === 1}\n                    >\n                      Précédent\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n                      disabled={currentPage === totalPages}\n                    >\n                      Suivant\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Revoke Confirmation Dialog */}\n      <AlertDialog open={revokeDialogOpen} onOpenChange={setRevokeDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Confirmer la révocation</AlertDialogTitle>\n            <AlertDialogDescription>\n              Êtes-vous sûr de vouloir révoquer ce certificat ? Cette action est irréversible \n              et l'utilisateur devra obtenir un nouveau certificat.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Annuler</AlertDialogCancel>\n            <AlertDialogAction \n              onClick={handleRevokeCertificate}\n              className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n            >\n              Révoquer\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Card } from '@/components/ui/card';\nimport { supabase } from '@/lib/supabase';\nimport { Bell, Mail, Smartphone, TrendingUp, Users, Activity } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { logger } from '@/services/logger';\nimport {\n  LineChart,\n  Line,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n} from 'recharts';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\ninterface AlertStats {\n  total_alerts_active: number;\n  total_alerts_sent_today: number;\n  total_alerts_sent_week: number;\n  total_alerts_sent_month: number;\n  avg_open_rate: number;\n  avg_click_rate: number;\n  users_with_alerts: number;\n}\n\ninterface AlertHistory {\n  id: string;\n  alert_type: string;\n  delivery_method: string;\n  delivery_status: string;\n  created_at: string;\n  opened_at: string | null;\n  clicked_at: string | null;\n  user: {\n    full_name: string;\n  };\n  property: {\n    title: string;\n    city: string;\n  } | null;\n}\n\ninterface AlertAnalytics {\n  date: string;\n  alert_type: string;\n  delivery_method: string;\n  total_sent: number;\n  opened_count: number;\n  clicked_count: number;\n  open_rate: number;\n  click_rate: number;\n}\n\nconst COLORS = ['#8b5cf6', '#06b6d4', '#10b981', '#f59e0b'];\n\nexport const PropertyAlertsMonitor = () => {\n  const [stats, setStats] = useState<AlertStats | null>(null);\n  const [recentAlerts, setRecentAlerts] = useState<AlertHistory[]>([]);\n  const [analytics, setAnalytics] = useState<AlertAnalytics[]>([]);\n  const [loading, setLoading] = useState(true);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      // Fetch statistics\n      const { data: statsData, error: statsError } = await supabase\n        .rpc('get_alert_statistics');\n\n      if (statsError) throw statsError;\n      if (statsData && statsData.length > 0) {\n        setStats(statsData[0]);\n      }\n\n      // Fetch recent alerts\n      const { data: alertsData, error: alertsError } = await supabase\n        .from('alert_history')\n        .select(`\n          id,\n          alert_type,\n          delivery_method,\n          delivery_status,\n          created_at,\n          opened_at,\n          clicked_at,\n          user_id,\n          property_id\n        `)\n        .order('created_at', { ascending: false })\n        .limit(50);\n\n      if (alertsError) throw alertsError;\n\n      // Fetch user and property details separately\n      if (alertsData) {\n        const enrichedAlerts = await Promise.all(\n          alertsData.map(async (alert) => {\n            const [userData, propertyData] = await Promise.all([\n              alert.user_id\n                ? supabase.from('profiles').select('full_name').eq('id', alert.user_id).single()\n                : Promise.resolve({ data: null }),\n              alert.property_id\n                ? supabase.from('properties').select('title, city').eq('id', alert.property_id).single()\n                : Promise.resolve({ data: null }),\n            ]);\n\n            return {\n              ...alert,\n              user: userData.data || { full_name: 'N/A' },\n              property: propertyData.data,\n            };\n          })\n        );\n        setRecentAlerts(enrichedAlerts as any);\n      }\n\n      // Fetch analytics for last 7 days\n      const sevenDaysAgo = new Date();\n      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n\n      const { data: analyticsData, error: analyticsError } = await supabase\n        .from('property_alerts_analytics')\n        .select('*')\n        .gte('date', sevenDaysAgo.toISOString())\n        .order('date', { ascending: true });\n\n      if (analyticsError) throw analyticsError;\n      setAnalytics(analyticsData || []);\n\n    } catch (error: any) {\n      logger.error('Failed to fetch property alerts data', { component: 'PropertyAlertsMonitor', error: error.message });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger les données des alertes',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"flex justify-center p-8\">Chargement...</div>;\n  }\n\n  const byType = analytics.reduce((acc, item) => {\n    const existing = acc.find(i => i.name === item.alert_type);\n    if (existing) {\n      existing.value += item.total_sent;\n    } else {\n      acc.push({ name: item.alert_type, value: item.total_sent });\n    }\n    return acc;\n  }, [] as { name: string; value: number }[]);\n\n  const byMethod = analytics.reduce((acc, item) => {\n    const existing = acc.find(i => i.name === item.delivery_method);\n    if (existing) {\n      existing.value += item.total_sent;\n    } else {\n      acc.push({ name: item.delivery_method, value: item.total_sent });\n    }\n    return acc;\n  }, [] as { name: string; value: number }[]);\n\n  const dailyTrend = analytics.reduce((acc, item) => {\n    const date = new Date(item.date).toLocaleDateString('fr-FR', { month: 'short', day: 'numeric' });\n    const existing = acc.find(i => i.date === date);\n    if (existing) {\n      existing.total += item.total_sent;\n      existing.opened += item.opened_count;\n      existing.clicked += item.clicked_count;\n    } else {\n      acc.push({ \n        date, \n        total: item.total_sent,\n        opened: item.opened_count,\n        clicked: item.clicked_count,\n      });\n    }\n    return acc;\n  }, [] as { date: string; total: number; opened: number; clicked: number }[]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* KPIs */}\n      <div className=\"grid gap-4 md:grid-cols-4\">\n        <Card className=\"p-4\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <Bell className=\"h-4 w-4 text-primary\" />\n            <p className=\"text-sm font-medium text-muted-foreground\">Alertes Actives</p>\n          </div>\n          <p className=\"text-2xl font-bold\">{stats?.total_alerts_active || 0}</p>\n        </Card>\n\n        <Card className=\"p-4\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <Activity className=\"h-4 w-4 text-primary\" />\n            <p className=\"text-sm font-medium text-muted-foreground\">Envoyées Aujourd'hui</p>\n          </div>\n          <p className=\"text-2xl font-bold\">{stats?.total_alerts_sent_today || 0}</p>\n        </Card>\n\n        <Card className=\"p-4\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <Mail className=\"h-4 w-4 text-primary\" />\n            <p className=\"text-sm font-medium text-muted-foreground\">Taux d'Ouverture</p>\n          </div>\n          <p className=\"text-2xl font-bold\">{stats?.avg_open_rate?.toFixed(1) || 0}%</p>\n        </Card>\n\n        <Card className=\"p-4\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <Users className=\"h-4 w-4 text-primary\" />\n            <p className=\"text-sm font-medium text-muted-foreground\">Utilisateurs</p>\n          </div>\n          <p className=\"text-2xl font-bold\">{stats?.users_with_alerts || 0}</p>\n        </Card>\n      </div>\n\n      {/* Charts */}\n      <Tabs defaultValue=\"trend\">\n        <TabsList>\n          <TabsTrigger value=\"trend\">Tendance 7j</TabsTrigger>\n          <TabsTrigger value=\"type\">Par Type</TabsTrigger>\n          <TabsTrigger value=\"method\">Par Canal</TabsTrigger>\n          <TabsTrigger value=\"recent\">Récents</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"trend\">\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Évolution des Alertes</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={dailyTrend}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"total\" stroke=\"#8b5cf6\" name=\"Envoyées\" />\n                <Line type=\"monotone\" dataKey=\"opened\" stroke=\"#06b6d4\" name=\"Ouvertes\" />\n                <Line type=\"monotone\" dataKey=\"clicked\" stroke=\"#10b981\" name=\"Cliquées\" />\n              </LineChart>\n            </ResponsiveContainer>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"type\">\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Répartition par Type</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={byType}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={(entry) => `${entry.name}: ${entry.value}`}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {byType.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"method\">\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Répartition par Canal</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={byMethod}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"value\" fill=\"#8b5cf6\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"recent\">\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Alertes Récentes (50 dernières)</h3>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"text-left p-2\">Date</th>\n                    <th className=\"text-left p-2\">Type</th>\n                    <th className=\"text-left p-2\">Canal</th>\n                    <th className=\"text-left p-2\">Utilisateur</th>\n                    <th className=\"text-left p-2\">Propriété</th>\n                    <th className=\"text-left p-2\">Statut</th>\n                    <th className=\"text-left p-2\">Engagement</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {recentAlerts.map((alert) => (\n                    <tr key={alert.id} className=\"border-b hover:bg-muted/50\">\n                      <td className=\"p-2\">\n                        {new Date(alert.created_at).toLocaleDateString('fr-FR', {\n                          day: '2-digit',\n                          month: 'short',\n                          hour: '2-digit',\n                          minute: '2-digit',\n                        })}\n                      </td>\n                      <td className=\"p-2\">\n                        <span className=\"px-2 py-1 bg-primary/10 text-primary rounded text-xs\">\n                          {alert.alert_type}\n                        </span>\n                      </td>\n                      <td className=\"p-2\">\n                        {alert.delivery_method === 'email' && <Mail className=\"h-4 w-4 inline\" />}\n                        {alert.delivery_method === 'push' && <Smartphone className=\"h-4 w-4 inline\" />}\n                        {alert.delivery_method === 'in_app' && <Bell className=\"h-4 w-4 inline\" />}\n                      </td>\n                      <td className=\"p-2\">{alert.user?.full_name || 'N/A'}</td>\n                      <td className=\"p-2\">\n                        {alert.property ? `${alert.property.title} (${alert.property.city})` : 'N/A'}\n                      </td>\n                      <td className=\"p-2\">\n                        <span className={`px-2 py-1 rounded text-xs ${\n                          alert.delivery_status === 'sent' ? 'bg-green-500/10 text-green-700' :\n                          alert.delivery_status === 'failed' ? 'bg-red-500/10 text-red-700' :\n                          'bg-yellow-500/10 text-yellow-700'\n                        }`}>\n                          {alert.delivery_status}\n                        </span>\n                      </td>\n                      <td className=\"p-2\">\n                        <div className=\"flex gap-2 text-xs\">\n                          {alert.opened_at && <span className=\"text-green-600\">✓ Ouvert</span>}\n                          {alert.clicked_at && <span className=\"text-blue-600\">✓ Cliqué</span>}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport type { Owner } from '@/types/admin';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { supabase } from '@/lib/supabase';\nimport { toast } from 'sonner';\nimport { logger } from '@/services/logger';\nimport { Loader2, Send, CalendarIcon } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\n\nexport const ReportGenerator = () => {\n  const [selectedOwner, setSelectedOwner] = useState<string>('');\n  const [period, setPeriod] = useState<'last_month' | 'this_month' | 'custom'>('last_month');\n  const [startDate, setStartDate] = useState<Date>();\n  const [endDate, setEndDate] = useState<Date>();\n  const [reportType, setReportType] = useState<'monthly' | 'quarterly' | 'annual'>('monthly');\n  const [loading, setLoading] = useState(false);\n  const [owners, setOwners] = useState<Owner[]>([]);\n\n  const loadOwners = async () => {\n    const { data } = await supabase\n      .from('properties')\n      .select('owner_id, profiles!inner(full_name)')\n      .not('owner_id', 'is', null);\n\n    const uniqueOwners = Array.from(\n      new Map(data?.map(item => [item.owner_id, item.profiles]) || []).entries()\n    ).map(([id, profile]: [string, any]): Owner => ({\n      id,\n      full_name: profile.full_name,\n      email: profile.email || 'N/A',\n    }));\n\n    setOwners(uniqueOwners);\n  };\n\n  const handleGenerateAndSend = async () => {\n    if (!selectedOwner) {\n      toast.error('Veuillez sélectionner un propriétaire');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const { data, error } = await supabase.functions.invoke('generate-report', {\n        body: {\n          mode: 'manual',\n          owner_id: selectedOwner,\n          start_date: period === 'custom' ? startDate?.toISOString() : undefined,\n          end_date: period === 'custom' ? endDate?.toISOString() : undefined,\n          report_type: reportType\n        }\n      });\n\n      if (error) throw error;\n\n      toast.success(`Rapport généré et envoyé avec succès ! (${data.successful}/${data.processed})`);\n    } catch (error: any) {\n      logger.error('Failed to generate report', { component: 'ReportGenerator', reportType, error: error.message });\n      toast.error(`Erreur: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          📊 Générateur de Rapports\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"space-y-2\">\n          <Label>Propriétaire</Label>\n          <Select value={selectedOwner} onValueChange={setSelectedOwner}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Sélectionner un propriétaire\" />\n            </SelectTrigger>\n            <SelectContent>\n              {owners.map((owner) => (\n                <SelectItem key={owner.id} value={owner.id}>\n                  {owner.full_name} ({owner.email})\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n          <Button variant=\"outline\" size=\"sm\" onClick={loadOwners} className=\"mt-2\">\n            Charger les propriétaires\n          </Button>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label>Période</Label>\n          <Tabs value={period} onValueChange={(v: any) => setPeriod(v)}>\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"last_month\">Mois dernier</TabsTrigger>\n              <TabsTrigger value=\"this_month\">Ce mois</TabsTrigger>\n              <TabsTrigger value=\"custom\">Personnalisé</TabsTrigger>\n            </TabsList>\n          </Tabs>\n\n          {period === 'custom' && (\n            <div className=\"flex gap-4 mt-4\">\n              <div className=\"flex-1 space-y-2\">\n                <Label>Du</Label>\n                <Popover>\n                  <PopoverTrigger asChild>\n                    <Button variant=\"outline\" className=\"w-full justify-start text-left font-normal\">\n                      <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                      {startDate ? format(startDate, 'PPP', { locale: fr }) : 'Sélectionner'}\n                    </Button>\n                  </PopoverTrigger>\n                  <PopoverContent className=\"w-auto p-0\">\n                    <Calendar mode=\"single\" selected={startDate} onSelect={setStartDate} />\n                  </PopoverContent>\n                </Popover>\n              </div>\n\n              <div className=\"flex-1 space-y-2\">\n                <Label>Au</Label>\n                <Popover>\n                  <PopoverTrigger asChild>\n                    <Button variant=\"outline\" className=\"w-full justify-start text-left font-normal\">\n                      <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                      {endDate ? format(endDate, 'PPP', { locale: fr }) : 'Sélectionner'}\n                    </Button>\n                  </PopoverTrigger>\n                  <PopoverContent className=\"w-auto p-0\">\n                    <Calendar mode=\"single\" selected={endDate} onSelect={setEndDate} />\n                  </PopoverContent>\n                </Popover>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label>Type de rapport</Label>\n          <Select value={reportType} onValueChange={(v: any) => setReportType(v)}>\n            <SelectTrigger>\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"monthly\">Mensuel</SelectItem>\n              <SelectItem value=\"quarterly\">Trimestriel</SelectItem>\n              <SelectItem value=\"annual\">Annuel</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <Button \n          onClick={handleGenerateAndSend} \n          disabled={!selectedOwner || loading}\n          className=\"w-full\"\n        >\n          {loading ? (\n            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n          ) : (\n            <Send className=\"mr-2 h-4 w-4\" />\n          )}\n          Générer et envoyer\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { supabase } from \"@/lib/supabase\";\nimport { toast } from \"sonner\";\nimport { Download, Image, Loader2 } from \"lucide-react\";\n\ninterface Illustration {\n  filename: string;\n  prompt: string;\n  description: string;\n}\n\nconst ILLUSTRATIONS: Illustration[] = [\n  {\n    filename: \"famille-heureuse-cocody\",\n    description: \"Famille ivoirienne heureuse devant leur maison\",\n    prompt: \"Flat design vector illustration of a happy Ivorian family standing in front of their modern house in Cocody, Abidjan. Family of 4 people (parents and 2 children) smiling, contemporary West African home with orange and blue accent colors (#E67E22, #2C5F7F). Warm, welcoming atmosphere, clean composition, professional real estate marketing style. Ultra-realistic details, vibrant colors, 16:9 aspect ratio.\"\n  },\n  {\n    filename: \"couple-visite-appartement\",\n    description: \"Jeune couple visitant un appartement\",\n    prompt: \"Flat design illustration of a young Ivorian couple visiting an apartment with a real estate agent. Modern interior with large windows, natural light, agent showing the property on a tablet. Contemporary style, orange and blue accent colors (#E67E22, #2C5F7F), professional and trustworthy atmosphere. Clean lines, 16:9 aspect ratio.\"\n  },\n  {\n    filename: \"agent-immobilier-presentation\",\n    description: \"Agent présentant un dossier sur tablette\",\n    prompt: \"Flat design illustration of a professional Ivorian real estate agent presenting a property dossier on a digital tablet. Modern office setting, confident posture, orange and blue brand colors (#E67E22, #2C5F7F). Professional, trustworthy, contemporary style. Vector-style, clean composition, 16:9 aspect ratio.\"\n  },\n  {\n    filename: \"quartier-anime-abidjan\",\n    description: \"Rue animée d'Abidjan\",\n    prompt: \"Flat design illustration of a vibrant Abidjan neighborhood street scene. Orange taxis, people in colorful wax fabric, local shops, modern buildings mixed with traditional architecture. Lively atmosphere, warm colors with orange and blue accents (#E67E22, #2C5F7F). West African urban life, dynamic composition, 16:9 aspect ratio.\"\n  },\n  {\n    filename: \"interieur-moderne-salon\",\n    description: \"Salon ivoirien moderne\",\n    prompt: \"Flat design illustration of a modern Ivorian living room interior. Contemporary furniture, large TV, West African decorative elements (wax patterns, local art), warm and welcoming atmosphere. Natural light from large windows, orange and blue accent colors (#E67E22, #2C5F7F). Cozy, professional real estate photography style, 16:9 aspect ratio.\"\n  },\n  {\n    filename: \"vue-aerienne-abidjan\",\n    description: \"Skyline stylisé d'Abidjan\",\n    prompt: \"Minimalist flat design illustration of Abidjan skyline view. Recognizable landmarks including Plateau business district, Henri Konan Bédié Bridge. Stylized, elegant composition with orange and blue color scheme (#E67E22, #2C5F7F). Modern, clean lines, abstract geometric shapes, 16:9 aspect ratio.\"\n  },\n  {\n    filename: \"remise-cles-ceremonie\",\n    description: \"Propriétaire remettant les clés\",\n    prompt: \"Flat design illustration of a property owner handing keys to a new tenant. Both people smiling, handshake gesture, keys prominently featured. Joyful and trustworthy atmosphere, orange and blue accent colors (#E67E22, #2C5F7F). Professional, warm, celebratory moment. Clean composition, 16:9 aspect ratio.\"\n  },\n  {\n    filename: \"famille-emmenagement\",\n    description: \"Famille déballant des cartons\",\n    prompt: \"Flat design illustration of an Ivorian family unpacking moving boxes in their new home. Happy atmosphere, children helping, cardboard boxes, furniture being arranged. Dynamic, joyful scene with orange and blue accents (#E67E22, #2C5F7F). New beginning, fresh start feeling, 16:9 aspect ratio.\"\n  },\n  {\n    filename: \"reunion-copropriete\",\n    description: \"Réunion entre propriétaires\",\n    prompt: \"Flat design illustration of a professional co-ownership meeting. Diverse group of Ivorian property owners and residents sitting around a modern conference table, discussing. Professional, collaborative atmosphere, orange and blue brand colors (#E67E22, #2C5F7F). Contemporary office setting, 16:9 aspect ratio.\"\n  },\n  {\n    filename: \"certification-ansut-illustration\",\n    description: \"Document de certification ANSUT\",\n    prompt: \"Flat design illustration of an official ANSUT certification document with official stamp and seal. Professional, institutional style, green ANSUT color (#2ECC71) combined with orange and blue (#E67E22, #2C5F7F). Official government document aesthetic, trust and security, badge with stars, 16:9 aspect ratio.\"\n  }\n];\n\nexport const IllustrationGenerator = () => {\n  const [generating, setGenerating] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [currentIllustration, setCurrentIllustration] = useState<string>(\"\");\n  const [generatedImages, setGeneratedImages] = useState<{ [key: string]: string }>({});\n\n  const generateAllIllustrations = async () => {\n    setGenerating(true);\n    setProgress(0);\n    setGeneratedImages({});\n    \n    for (let i = 0; i < ILLUSTRATIONS.length; i++) {\n      const illustration = ILLUSTRATIONS[i];\n      setCurrentIllustration(illustration.description);\n      \n      try {\n        const { data, error } = await supabase.functions.invoke('generate-illustration', {\n          body: { \n            prompt: illustration.prompt,\n            filename: illustration.filename\n          }\n        });\n\n        if (error) throw error;\n\n        if (data?.imageUrl) {\n          setGeneratedImages(prev => ({\n            ...prev,\n            [illustration.filename]: data.imageUrl\n          }));\n          \n          toast.success(`Illustration générée : ${illustration.description}`);\n        }\n      } catch (error) {\n        toast.error(`Erreur pour ${illustration.description}`);\n      }\n      \n      setProgress(((i + 1) / ILLUSTRATIONS.length) * 100);\n    }\n    \n    setGenerating(false);\n    setCurrentIllustration(\"\");\n    toast.success(\"Toutes les illustrations ont été générées !\");\n  };\n\n  const downloadImage = (filename: string, imageUrl: string) => {\n    const link = document.createElement('a');\n    link.href = imageUrl;\n    link.download = `${filename}.png`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const downloadAllImages = () => {\n    Object.entries(generatedImages).forEach(([filename, imageUrl]) => {\n      setTimeout(() => downloadImage(filename, imageUrl), 100);\n    });\n    toast.success(\"Téléchargement de toutes les images lancé !\");\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Image className=\"h-5 w-5\" />\n          Générateur d'Illustrations Ivoiriennes\n        </CardTitle>\n        <CardDescription>\n          Générez automatiquement les 10 illustrations prioritaires avec Lovable AI\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Actions */}\n        <div className=\"flex gap-3\">\n          <Button \n            onClick={generateAllIllustrations} \n            disabled={generating}\n            className=\"flex items-center gap-2\"\n          >\n            {generating ? (\n              <>\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\n                Génération en cours...\n              </>\n            ) : (\n              <>\n                <Image className=\"h-4 w-4\" />\n                Générer les 10 illustrations\n              </>\n            )}\n          </Button>\n          \n          {Object.keys(generatedImages).length > 0 && (\n            <Button \n              onClick={downloadAllImages} \n              variant=\"outline\"\n              className=\"flex items-center gap-2\"\n            >\n              <Download className=\"h-4 w-4\" />\n              Télécharger toutes ({Object.keys(generatedImages).length})\n            </Button>\n          )}\n        </div>\n\n        {/* Progress */}\n        {generating && (\n          <div className=\"space-y-2\">\n            <Progress value={progress} />\n            <p className=\"text-sm text-muted-foreground\">\n              {currentIllustration} ({Math.round(progress)}%)\n            </p>\n          </div>\n        )}\n\n        {/* Generated Images Grid */}\n        {Object.keys(generatedImages).length > 0 && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {Object.entries(generatedImages).map(([filename, imageUrl]) => (\n              <div key={filename} className=\"relative group border rounded-lg overflow-hidden bg-muted/20\">\n                <img \n                  src={imageUrl} \n                  alt={filename}\n                  className=\"w-full h-48 object-cover\"\n                />\n                <div className=\"p-2 space-y-1\">\n                  <p className=\"text-xs font-medium truncate\">{filename}</p>\n                  <Button \n                    size=\"sm\" \n                    variant=\"outline\" \n                    className=\"w-full\"\n                    onClick={() => downloadImage(filename, imageUrl)}\n                  >\n                    <Download className=\"h-3 w-3 mr-1\" />\n                    Télécharger\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Illustrations List */}\n        <div className=\"space-y-2\">\n          <h3 className=\"font-semibold text-sm\">Illustrations à générer :</h3>\n          <ul className=\"text-sm text-muted-foreground space-y-1\">\n            {ILLUSTRATIONS.map((ill, idx) => (\n              <li key={ill.filename} className=\"flex items-center gap-2\">\n                <span className=\"text-xs bg-primary/10 text-primary px-2 py-0.5 rounded\">\n                  {idx + 1}\n                </span>\n                {ill.description}\n                {generatedImages[ill.filename] && (\n                  <span className=\"text-xs text-green-600\">✓</span>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};","import { useState, useEffect } from 'react';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Navigate } from 'react-router-dom';\nimport Navbar from '@/components/Navbar';\nimport Footer from '@/components/Footer';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { SidebarProvider, SidebarInset } from '@/components/ui/sidebar';\nimport { AdminSidebar } from '@/components/admin/AdminSidebar';\nimport { StickyHeader } from '@/components/ui/sticky-header';\nimport { Shield } from 'lucide-react';\nimport AdminStats from '@/components/admin/AdminStats';\nimport AdminProperties from '@/components/admin/AdminProperties';\nimport AdminUsers from '@/components/admin/AdminUsers';\nimport AdminLeases from '@/components/admin/AdminLeases';\nimport AdminIntegrations from '@/components/admin/AdminIntegrations';\nimport PlatformAnalytics from '@/components/admin/PlatformAnalytics';\nimport DisputeManager from '@/components/admin/DisputeManager';\nimport AdminVerificationQueue from '@/components/admin/AdminVerificationQueue';\nimport ReviewModeration from '@/components/admin/ReviewModeration';\nimport AdvancedReporting from '@/components/admin/AdvancedReporting';\nimport LeaseCertificationQueue from '@/components/admin/LeaseCertificationQueue';\nimport { AuditLogViewer } from '@/components/admin/AuditLogViewer';\nimport { LeaseTemplateManager } from '@/components/admin/LeaseTemplateManager';\nimport { PromoteToSuperAdmin } from '@/components/admin/PromoteToSuperAdmin';\nimport PropertyModerationQueue from '@/components/admin/PropertyModerationQueue';\nimport SensitiveDataAccessMonitor from '@/components/admin/SensitiveDataAccessMonitor';\nimport { EnhancedMfaSecurityMonitor } from '@/components/admin/EnhancedMfaSecurityMonitor';\nimport { ProcessingConfigPanel } from '@/components/admin/ProcessingConfigPanel';\nimport { ProcessingAnalytics } from '@/components/admin/ProcessingAnalytics';\nimport { SeedDemoDataButton } from '@/components/admin/SeedDemoDataButton';\nimport { ElectronicSignaturesDashboard } from '@/components/admin/ElectronicSignaturesDashboard';\nimport { CertificateManager } from '@/components/admin/CertificateManager';\nimport { PropertyAlertsMonitor } from '@/components/admin/PropertyAlertsMonitor';\nimport { ReportGenerator } from '@/components/admin/ReportGenerator';\nimport { IllustrationGenerator } from '@/components/admin/IllustrationGenerator';\nimport { supabase } from '@/lib/supabase';\n\nconst AdminDashboard = () => {\n  const { hasRole, loading } = useAuth();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [pendingCertifications, setPendingCertifications] = useState(0);\n  const [openDisputes, setOpenDisputes] = useState(0);\n  const [pendingProperties, setPendingProperties] = useState(0);\n  const [overdueApplications, setOverdueApplications] = useState(0);\n\n  useEffect(() => {\n    const fetchPendingCount = async () => {\n      const { count } = await supabase\n        .from('leases')\n        .select('*', { count: 'exact', head: true })\n        .eq('certification_status', 'pending');\n      setPendingCertifications(count || 0);\n    };\n\n    const fetchOpenDisputes = async () => {\n      // Utiliser le RPC sécurisé via get_my_disputes\n      const { data: disputes } = await supabase.rpc('get_my_disputes');\n      const openCount = disputes?.filter(d => d.status === 'open').length || 0;\n      setOpenDisputes(openCount);\n    };\n\n    const fetchPendingProperties = async () => {\n      const { count } = await supabase\n        .from('properties')\n        .select('*', { count: 'exact', head: true })\n        .eq('moderation_status', 'pending');\n      setPendingProperties(count || 0);\n    };\n\n    const fetchOverdueApplications = async () => {\n      const { count } = await supabase\n        .from('rental_applications')\n        .select('*', { count: 'exact', head: true })\n        .eq('status', 'pending')\n        .eq('is_overdue', true);\n      setOverdueApplications(count || 0);\n    };\n\n    fetchPendingCount();\n    fetchOpenDisputes();\n    fetchPendingProperties();\n    fetchOverdueApplications();\n\n    const leasesChannel = supabase\n      .channel('admin-pending-count')\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'leases',\n          filter: 'certification_status=eq.pending'\n        },\n        () => fetchPendingCount()\n      )\n      .subscribe();\n\n    const disputesChannel = supabase\n      .channel('admin-open-disputes')\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'disputes',\n          filter: 'status=eq.open'\n        },\n        () => fetchOpenDisputes()\n      )\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(leasesChannel);\n      supabase.removeChannel(disputesChannel);\n    };\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  if (!hasRole('admin')) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Navbar />\n      \n      <SidebarProvider>\n        <div className=\"flex w-full min-h-screen\">\n          <AdminSidebar \n            activeTab={activeTab}\n            onTabChange={setActiveTab}\n            badges={{\n              certifications: pendingCertifications,\n              disputes: openDisputes,\n              properties: pendingProperties,\n              overdueApplications: overdueApplications,\n            }}\n          />\n\n          <SidebarInset className=\"flex-1\">\n            <main className=\"container mx-auto px-6 py-6\">\n              <StickyHeader>\n                <h1 className=\"text-2xl font-bold\">Administration ANSUT</h1>\n                <p className=\"text-sm text-muted-foreground\">\n                  Gestion et validation de la plateforme Mon Toit\n                </p>\n              </StickyHeader>\n\n              {/* Vue d'ensemble */}\n              {activeTab === 'overview' && (\n                <div className=\"space-y-6\">\n                  <SeedDemoDataButton />\n                  <AdminStats />\n                </div>\n              )}\n\n              {/* Certifications */}\n              {activeTab === 'certifications' && (\n                <LeaseCertificationQueue />\n              )}\n\n              {/* Vérifications */}\n              {activeTab === 'verifications' && (\n                <AdminVerificationQueue />\n              )}\n\n              {/* Traitement */}\n              {activeTab === 'processing' && (\n                <div className=\"grid gap-6 lg:grid-cols-2\">\n                  <ProcessingConfigPanel />\n                  <ProcessingAnalytics />\n                </div>\n              )}\n\n              {/* Sécurité - Accès sensibles */}\n              {activeTab === 'security' && (\n                <SensitiveDataAccessMonitor />\n              )}\n\n              {/* Sécurité 2FA */}\n            {activeTab === 'mfa' && (\n              <EnhancedMfaSecurityMonitor />\n            )}\n\n              {/* Audit */}\n              {activeTab === 'audit' && (\n                <div className=\"space-y-6\">\n                  {!hasRole('super_admin') && !hasRole('admin') && (\n                    <PromoteToSuperAdmin />\n                  )}\n                  <AuditLogViewer />\n                </div>\n              )}\n\n              {/* Analytics */}\n              {activeTab === 'analytics' && (\n                <PlatformAnalytics />\n              )}\n\n              {/* Litiges */}\n              {activeTab === 'disputes' && (\n                <DisputeManager />\n              )}\n\n              {/* Modération */}\n              {activeTab === 'moderation' && (\n                <ReviewModeration />\n              )}\n\n              {/* Rapports */}\n              {activeTab === 'reporting' && (\n                <AdvancedReporting />\n              )}\n\n              {/* Rapports Mensuels */}\n              {activeTab === 'reports' && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      📊 Générateur de Rapports Mensuels\n                    </CardTitle>\n                    <CardDescription>\n                      Générer et envoyer des rapports de performance aux propriétaires\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <ReportGenerator />\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* Générateur d'Illustrations */}\n              {activeTab === 'illustrations' && (\n                <IllustrationGenerator />\n              )}\n\n              {/* Signatures Électroniques */}\n              {activeTab === 'electronic-signatures' && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Shield className=\"h-5 w-5\" />\n                      Signatures Électroniques CryptoNeo\n                    </CardTitle>\n                    <CardDescription>\n                      Gestion des certificats numériques et signatures électroniques\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <Tabs defaultValue=\"dashboard\" className=\"w-full\">\n                      <TabsList className=\"grid w-full grid-cols-2 mb-6\">\n                        <TabsTrigger value=\"dashboard\">Tableau de bord</TabsTrigger>\n                        <TabsTrigger value=\"certificates\">Gestion des certificats</TabsTrigger>\n                      </TabsList>\n\n                      <TabsContent value=\"dashboard\">\n                        <ElectronicSignaturesDashboard />\n                      </TabsContent>\n\n                      <TabsContent value=\"certificates\">\n                        <CertificateManager />\n                      </TabsContent>\n                    </Tabs>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* Biens */}\n              {activeTab === 'properties' && (\n                <AdminProperties />\n              )}\n\n              {/* Utilisateurs */}\n              {activeTab === 'users' && (\n                <AdminUsers />\n              )}\n\n              {/* Baux */}\n              {activeTab === 'leases' && (\n                <Tabs defaultValue=\"list\" className=\"w-full\">\n                  <TabsList>\n                    <TabsTrigger value=\"list\">Liste des Baux</TabsTrigger>\n                    <TabsTrigger value=\"templates\">Modèles de Baux</TabsTrigger>\n                  </TabsList>\n\n                  <TabsContent value=\"list\" className=\"mt-4\">\n                    <AdminLeases />\n                  </TabsContent>\n\n                  <TabsContent value=\"templates\" className=\"mt-4\">\n                    <LeaseTemplateManager />\n                  </TabsContent>\n                </Tabs>\n              )}\n\n              {/* Alertes Propriétés */}\n              {activeTab === 'alerts' && (\n                <PropertyAlertsMonitor />\n              )}\n            </main>\n          </SidebarInset>\n        </div>\n      </SidebarProvider>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from './useAuth';\nimport { toast } from './use-toast';\n\n/**\n * Hook pour exiger un rôle spécifique\n * Redirige automatiquement si l'utilisateur n'a pas le rôle requis\n */\nexport const useRequireRole = (role: string, redirectTo = '/') => {\n  const { hasRole, loading } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!loading && !hasRole(role)) {\n      toast({\n        title: \"Accès refusé\",\n        description: `Vous devez avoir le rôle '${role}' pour accéder à cette page.`,\n        variant: \"destructive\",\n      });\n      navigate(redirectTo);\n    }\n  }, [hasRole, loading, role, navigate, redirectTo]);\n\n  return { hasRole: hasRole(role), loading };\n};\n","import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Shield, CheckCircle, XCircle, Clock, TrendingUp } from 'lucide-react';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Badge } from '@/components/ui/badge';\nimport { logger } from '@/services/logger';\n\ninterface CertificationMetrics {\n  totalCertified: number;\n  totalRejected: number;\n  totalPending: number;\n  avgProcessingDays: number;\n  approvalRate: number;\n  topRejectionReasons: { reason: string; count: number }[];\n  thisMonthCertified: number;\n}\n\nconst CertificationStats = () => {\n  const [metrics, setMetrics] = useState<CertificationMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchMetrics();\n  }, []);\n\n  const fetchMetrics = async () => {\n    try {\n      const { data: leases, error } = await supabase\n        .from('leases')\n        .select('certification_status, certification_requested_at, ansut_certified_at, certification_notes');\n\n      if (error) throw error;\n\n      const now = new Date();\n      const thirtyDaysAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n      const totalCertified = leases.filter(l => l.certification_status === 'certified').length;\n      const totalRejected = leases.filter(l => l.certification_status === 'rejected').length;\n      const totalPending = leases.filter(l => l.certification_status === 'pending').length;\n\n      const processingTimes = leases\n        .filter(l => l.certification_requested_at && l.ansut_certified_at)\n        .map(l => {\n          const requested = new Date(l.certification_requested_at!);\n          const certified = new Date(l.ansut_certified_at!);\n          return (certified.getTime() - requested.getTime()) / (1000 * 60 * 60 * 24);\n        });\n\n      const avgProcessingDays = processingTimes.length > 0\n        ? processingTimes.reduce((a, b) => a + b, 0) / processingTimes.length\n        : 0;\n\n      const totalProcessed = totalCertified + totalRejected;\n      const approvalRate = totalProcessed > 0 ? (totalCertified / totalProcessed) * 100 : 0;\n\n      const thisMonthCertified = leases.filter(l => \n        l.certification_status === 'certified' && \n        l.ansut_certified_at &&\n        new Date(l.ansut_certified_at) >= thirtyDaysAgo\n      ).length;\n\n      const rejectionNotes = leases\n        .filter(l => l.certification_status === 'rejected' && l.certification_notes)\n        .map(l => l.certification_notes!);\n\n      const reasonCounts: { [key: string]: number } = {};\n      rejectionNotes.forEach(note => {\n        const key = note.substring(0, 50);\n        reasonCounts[key] = (reasonCounts[key] || 0) + 1;\n      });\n\n      const topRejectionReasons = Object.entries(reasonCounts)\n        .map(([reason, count]) => ({ reason, count }))\n        .sort((a, b) => b.count - a.count)\n        .slice(0, 3);\n\n      setMetrics({\n        totalCertified,\n        totalRejected,\n        totalPending,\n        avgProcessingDays,\n        approvalRate,\n        topRejectionReasons,\n        thisMonthCertified,\n      });\n    } catch (error) {\n      logger.error('Error fetching certification metrics', { error });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {[...Array(4)].map((_, i) => (\n          <Card key={i}>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <Skeleton className=\"h-4 w-24\" />\n              <Skeleton className=\"h-4 w-4 rounded-full\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-8 w-16\" />\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (!metrics) return null;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Certifications (30j)</CardTitle>\n            <Shield className=\"h-4 w-4 text-secondary\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.thisMonthCertified}</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Total: {metrics.totalCertified}\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Taux d'approbation</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.approvalRate.toFixed(1)}%</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              {metrics.totalCertified} approuvés / {metrics.totalRejected} rejetés\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Temps moyen</CardTitle>\n            <Clock className=\"h-4 w-4 text-primary\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.avgProcessingDays.toFixed(1)} jours</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              De la demande à l'approbation\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">En attente</CardTitle>\n            <Clock className=\"h-4 w-4 text-yellow-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.totalPending}</div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Demandes à traiter\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {metrics.topRejectionReasons.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <XCircle className=\"h-5 w-5 text-destructive\" />\n              Top 3 des raisons de rejet\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {metrics.topRejectionReasons.map((reason, index) => (\n                <div key={index} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Badge variant=\"outline\" className=\"text-xs\">\n                      {reason.count}x\n                    </Badge>\n                    <span className=\"text-sm text-muted-foreground line-clamp-1\">\n                      {reason.reason}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default CertificationStats;\n","import { useState } from \"react\";\nimport { useRequireRole } from \"@/hooks/useRequireRole\";\nimport Navbar from \"@/components/Navbar\";\nimport CertificationStats from \"@/components/admin/CertificationStats\";\nimport LeaseCertificationQueue from \"@/components/admin/LeaseCertificationQueue\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Clock, CheckCircle, XCircle, AlertCircle } from \"lucide-react\";\n\nconst AdminCertifications = () => {\n  useRequireRole('admin');\n  const [selectedTab, setSelectedTab] = useState(\"pending\");\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navbar />\n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2 flex items-center gap-3\">\n            Certifications ANSUT\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Gérez les demandes de certification des baux et suivez leur statut\n          </p>\n        </div>\n\n        <div className=\"space-y-8\">\n          <CertificationStats />\n          \n          <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-4\">\n              <TabsTrigger value=\"pending\" className=\"flex items-center gap-2\">\n                <Clock className=\"h-4 w-4\" />\n                En attente\n              </TabsTrigger>\n              <TabsTrigger value=\"in_review\" className=\"flex items-center gap-2\">\n                <AlertCircle className=\"h-4 w-4\" />\n                En révision\n              </TabsTrigger>\n              <TabsTrigger value=\"certified\" className=\"flex items-center gap-2\">\n                <CheckCircle className=\"h-4 w-4\" />\n                Certifiés\n              </TabsTrigger>\n              <TabsTrigger value=\"rejected\" className=\"flex items-center gap-2\">\n                <XCircle className=\"h-4 w-4\" />\n                Rejetés\n              </TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"pending\" className=\"mt-6\">\n              <LeaseCertificationQueue status=\"pending\" />\n            </TabsContent>\n            \n            <TabsContent value=\"in_review\" className=\"mt-6\">\n              <LeaseCertificationQueue status=\"in_review\" />\n            </TabsContent>\n            \n            <TabsContent value=\"certified\" className=\"mt-6\">\n              <LeaseCertificationQueue status=\"certified\" />\n            </TabsContent>\n            \n            <TabsContent value=\"rejected\" className=\"mt-6\">\n              <LeaseCertificationQueue status=\"rejected\" />\n            </TabsContent>\n          </Tabs>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminCertifications;"],"file":"assets/route-admin-B1Ip8YDE.js"}