{"version":3,"file":"Leases-DmBdttAl.js","sources":["../../src/components/leases/CertificationRequest.tsx","../../src/components/leases/PreCertificationChecklist.tsx","../../src/components/reviews/ReviewForm.tsx","../../src/components/documents/DocumentUpload.tsx","../../src/components/documents/DocumentManager.tsx","../../src/pages/Leases.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Button } from '@/components/ui/button';\nimport { logger } from '@/services/logger';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { toast } from '@/hooks/use-toast';\nimport { Shield, Info, Loader2 } from 'lucide-react';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\n\ninterface CertificationRequestProps {\n  leaseId: string;\n  certificationStatus: string;\n  onRequestSubmitted?: () => void;\n}\n\nconst CertificationRequest = ({ leaseId, certificationStatus, onRequestSubmitted }: CertificationRequestProps) => {\n  const { user } = useAuth();\n  const [open, setOpen] = useState(false);\n  const [notes, setNotes] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const canRequestCertification = certificationStatus === 'not_requested' || certificationStatus === 'rejected';\n\n  const handleSubmit = async () => {\n    if (!user) return;\n\n    setLoading(true);\n    try {\n      const { error } = await supabase\n        .from('leases')\n        .update({\n          certification_status: 'pending',\n          certification_requested_at: new Date().toISOString(),\n          certification_notes: notes.trim() || null,\n        })\n        .eq('id', leaseId);\n\n      if (error) throw error;\n\n      toast({\n        title: '✅ Demande envoyée avec succès',\n        description: 'Un agent ANSUT examinera votre dossier sous 2-5 jours ouvrables',\n      });\n\n      setOpen(false);\n      setNotes('');\n      onRequestSubmitted?.();\n    } catch (error: any) {\n      logger.logError(error, { context: 'CertificationRequest', action: 'submit' });\n      toast({\n        title: 'Erreur',\n        description: error.message || 'Impossible de soumettre la demande',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!canRequestCertification) {\n    return null;\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button variant=\"outline\" className=\"gap-2\">\n          <Shield className=\"h-4 w-4\" />\n          Demander la certification ANSUT\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Shield className=\"h-5 w-5 text-secondary\" />\n            Demande de Certification ANSUT\n          </DialogTitle>\n          <DialogDescription>\n            La certification ANSUT garantit la conformité de votre bail avec les normes ivoiriennes\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          <Alert>\n            <Info className=\"h-4 w-4\" />\n            <AlertDescription>\n              <strong>Avant de soumettre :</strong>\n              <ul className=\"list-disc list-inside mt-2 space-y-1 text-sm\">\n                <li>Assurez-vous que le bail est signé par les deux parties</li>\n                <li>Vérifiez que toutes les informations sont correctes</li>\n                <li>La certification peut prendre 2-5 jours ouvrables</li>\n                <li>Un agent ANSUT examinera votre dossier complet</li>\n              </ul>\n              <p className=\"text-sm mt-2\">\n                <Link to=\"/certification-faq\" className=\"text-primary underline hover:text-primary/80\">\n                  Consulter la FAQ complète\n                </Link>\n              </p>\n            </AlertDescription>\n          </Alert>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"notes\">\n              Notes additionnelles (optionnel)\n            </Label>\n            <Textarea\n              id=\"notes\"\n              placeholder=\"Ajoutez des informations complémentaires pour faciliter la certification...\"\n              value={notes}\n              onChange={(e) => setNotes(e.target.value)}\n              rows={4}\n            />\n            <p className=\"text-sm text-muted-foreground\">\n              Vous pouvez ajouter des précisions sur le bail ou des documents complémentaires\n            </p>\n          </div>\n\n          <div className=\"flex justify-end gap-2\">\n            <Button variant=\"outline\" onClick={() => setOpen(false)} disabled={loading}>\n              Annuler\n            </Button>\n            <Button onClick={handleSubmit} disabled={loading} className=\"gap-2\">\n              {loading && <Loader2 className=\"h-4 w-4 animate-spin\" />}\n              {loading ? 'Envoi en cours...' : 'Soumettre la demande'}\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default CertificationRequest;\n","import { useEffect, useState } from \"react\";\nimport { CheckCircle2, XCircle, Loader2 } from \"lucide-react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { supabase } from \"@/lib/supabase\";\nimport { cn } from \"@/lib/utils\";\nimport { logger } from \"@/services/logger\";\n\ninterface ValidationCheck {\n  check_name: string;\n  label: string;\n  passed: boolean;\n  message: string;\n}\n\ninterface ValidationResult {\n  lease_id: string;\n  checks: ValidationCheck[];\n  all_passed: boolean;\n  validated_at: string;\n}\n\ninterface PreCertificationChecklistProps {\n  leaseId: string;\n}\n\nexport const PreCertificationChecklist = ({ leaseId }: PreCertificationChecklistProps) => {\n  const [validation, setValidation] = useState<ValidationResult | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    validateLease();\n  }, [leaseId]);\n\n  const validateLease = async () => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase.rpc('pre_validate_lease_for_certification', {\n        p_lease_id: leaseId\n      });\n\n      if (error) throw error;\n      setValidation(data as unknown as ValidationResult);\n    } catch (error) {\n      logger.logError(error, { context: 'PreCertificationChecklist', action: 'validate' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"flex items-center justify-center py-8\">\n          <Loader2 className=\"h-6 w-6 animate-spin text-muted-foreground\" />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!validation) return null;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          {validation.all_passed ? (\n            <CheckCircle2 className=\"h-5 w-5 text-success\" />\n          ) : (\n            <XCircle className=\"h-5 w-5 text-destructive\" />\n          )}\n          Vérifications pré-certification\n        </CardTitle>\n        <CardDescription>\n          {validation.all_passed \n            ? \"Tous les critères sont remplis pour la certification ANSUT\" \n            : \"Certains critères doivent être complétés avant la certification\"}\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {validation.checks.map((check, index) => (\n          <div \n            key={check.check_name} \n            className={cn(\n              \"flex items-start gap-3 p-3 rounded-lg border animate-fade-in\",\n              check.passed && \"border-green-600/20 bg-green-50/50 dark:bg-green-950/20\"\n            )}\n            style={{ animationDelay: `${index * 100}ms` }}\n          >\n            {check.passed ? (\n              <CheckCircle2 className=\"h-5 w-5 text-green-600 shrink-0 mt-0.5 animate-scale-in\" />\n            ) : (\n              <XCircle className=\"h-5 w-5 text-destructive shrink-0 mt-0.5\" />\n            )}\n            <div className=\"flex-1 space-y-1\">\n              <p className=\"font-medium\">{check.label}</p>\n              <p className=\"text-sm text-muted-foreground\">{check.message}</p>\n            </div>\n          </div>\n        ))}\n        \n        {!validation.all_passed && (\n          <Alert>\n            <AlertDescription>\n              Complétez les critères manquants avant de demander la certification ANSUT.\n            </AlertDescription>\n          </Alert>\n        )}\n      </CardContent>\n    </Card>\n  );\n};","import { useState } from 'react';\nimport { useAuth } from '@/hooks/useAuth';\nimport { supabase } from '@/lib/supabase';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useToast } from '@/hooks/use-toast';\nimport { Star } from 'lucide-react';\nimport { z } from 'zod';\n\nconst reviewSchema = z.object({\n  rating: z.number().min(1, 'Veuillez sélectionner une note').max(5),\n  comment: z.string()\n    .trim()\n    .min(10, 'Le commentaire doit contenir au moins 10 caractères')\n    .max(1000, 'Le commentaire ne peut pas dépasser 1000 caractères')\n    .optional()\n    .or(z.literal('')),\n});\n\ninterface ReviewFormProps {\n  revieweeId: string;\n  revieweeName: string;\n  leaseId?: string;\n  reviewType: 'tenant_to_landlord' | 'landlord_to_tenant';\n  onSuccess?: () => void;\n}\n\nexport const ReviewForm = ({\n  revieweeId,\n  revieweeName,\n  leaseId,\n  reviewType,\n  onSuccess,\n}: ReviewFormProps) => {\n  const { user } = useAuth();\n  const { toast } = useToast();\n  const [rating, setRating] = useState(0);\n  const [hoveredRating, setHoveredRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!user) {\n      toast({\n        title: 'Erreur',\n        description: 'Vous devez être connecté pour laisser un avis',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    try {\n      // Validation avec Zod\n      const validatedData = reviewSchema.parse({ rating, comment });\n\n      setLoading(true);\n\n      const { error } = await supabase.from('reviews').insert({\n        reviewer_id: user.id,\n        reviewee_id: revieweeId,\n        lease_id: leaseId || null,\n        rating: validatedData.rating,\n        comment: validatedData.comment || null,\n        review_type: reviewType,\n      });\n\n      if (error) throw error;\n\n      toast({\n        title: 'Avis publié',\n        description: 'Votre avis a été publié avec succès',\n      });\n\n      // Reset form\n      setRating(0);\n      setComment('');\n      onSuccess?.();\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        toast({\n          title: 'Erreur de validation',\n          description: error.errors[0].message,\n          variant: 'destructive',\n        });\n      } else if (error instanceof Error) {\n        if (error.message.includes('unique_review_per_lease')) {\n          toast({\n            title: 'Avis déjà existant',\n            description: 'Vous avez déjà laissé un avis pour cette location',\n            variant: 'destructive',\n          });\n        } else {\n          toast({\n            title: 'Erreur',\n            description: error.message,\n            variant: 'destructive',\n          });\n        }\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Laisser un avis</CardTitle>\n        <CardDescription>\n          Partagez votre expérience avec {revieweeName}\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label>Note</Label>\n            <div className=\"flex gap-2\">\n              {[1, 2, 3, 4, 5].map((star) => (\n                <button\n                  key={star}\n                  type=\"button\"\n                  onClick={() => setRating(star)}\n                  onMouseEnter={() => setHoveredRating(star)}\n                  onMouseLeave={() => setHoveredRating(0)}\n                  className=\"transition-transform hover:scale-110\"\n                >\n                  <Star\n                    className={`h-8 w-8 ${\n                      star <= (hoveredRating || rating)\n                        ? 'fill-yellow-400 text-yellow-400'\n                        : 'text-gray-300'\n                    }`}\n                  />\n                </button>\n              ))}\n            </div>\n            {rating > 0 && (\n              <p className=\"text-sm text-muted-foreground\">\n                {rating === 5 && 'Excellent'}\n                {rating === 4 && 'Très bien'}\n                {rating === 3 && 'Bien'}\n                {rating === 2 && 'Passable'}\n                {rating === 1 && 'Décevant'}\n              </p>\n            )}\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"comment\">\n              Commentaire <span className=\"text-muted-foreground\">(optionnel)</span>\n            </Label>\n            <Textarea\n              id=\"comment\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n              placeholder=\"Décrivez votre expérience...\"\n              rows={4}\n              maxLength={1000}\n            />\n            <p className=\"text-xs text-muted-foreground\">\n              {comment.length}/1000 caractères\n            </p>\n          </div>\n\n          <Button type=\"submit\" disabled={loading || rating === 0}>\n            {loading ? 'Publication...' : 'Publier l\\'avis'}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Progress } from '@/components/ui/progress';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport { Upload, X, FileText, Image, File } from 'lucide-react';\nimport { z } from 'zod';\nimport { FILE_LIMITS, ERROR_MESSAGES, VALIDATION_LIMITS } from '@/constants';\n\nconst ALLOWED_FILE_TYPES = [\n  'application/pdf',\n  'image/jpeg',\n  'image/png',\n  'image/webp',\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n];\n\nconst fileSchema = z.custom<File>((val) => val instanceof File, {\n  message: ERROR_MESSAGES.FIELD_REQUIRED,\n})\n.refine((file) => file.size <= FILE_LIMITS.MAX_DOCUMENT_SIZE, ERROR_MESSAGES.DOCUMENT_TOO_LARGE)\n.refine((file) => ALLOWED_FILE_TYPES.includes(file.type), ERROR_MESSAGES.FILE_TYPE_INVALID);\n\nconst documentSchema = z.object({\n  file: fileSchema,\n  documentType: z.string().min(1, ERROR_MESSAGES.FIELD_REQUIRED),\n  name: z.string()\n    .min(VALIDATION_LIMITS.MIN_NAME_LENGTH, `Le nom doit contenir au moins ${VALIDATION_LIMITS.MIN_NAME_LENGTH} caractères`)\n    .max(VALIDATION_LIMITS.MAX_NAME_LENGTH, `Le nom ne peut pas dépasser ${VALIDATION_LIMITS.MAX_NAME_LENGTH} caractères`),\n});\n\ninterface DocumentUploadProps {\n  leaseId: string;\n  onUploadSuccess?: () => void;\n}\n\nconst DOCUMENT_TYPES = [\n  { value: 'lease_contract', label: 'Contrat de bail' },\n  { value: 'inventory_in', label: \"État des lieux d'entrée\" },\n  { value: 'inventory_out', label: 'État des lieux de sortie' },\n  { value: 'rent_receipt', label: 'Quittance de loyer' },\n  { value: 'deposit_receipt', label: 'Reçu de dépôt de garantie' },\n  { value: 'insurance', label: \"Attestation d'assurance\" },\n  { value: 'identity_document', label: \"Pièce d'identité\" },\n  { value: 'income_proof', label: 'Justificatif de revenus' },\n  { value: 'employment_contract', label: 'Contrat de travail' },\n  { value: 'other', label: 'Autre' },\n];\n\nexport const DocumentUpload = ({ leaseId, onUploadSuccess }: DocumentUploadProps) => {\n  const { user } = useAuth();\n  const { toast } = useToast();\n  const [file, setFile] = useState<File | null>(null);\n  const [documentType, setDocumentType] = useState('');\n  const [documentName, setDocumentName] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  const getFileIcon = (fileType: string) => {\n    if (fileType.startsWith('image/')) return Image;\n    if (fileType === 'application/pdf') return FileText;\n    return File;\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0];\n    if (!selectedFile) return;\n\n    try {\n      fileSchema.parse(selectedFile);\n      setFile(selectedFile);\n      if (!documentName) {\n        setDocumentName(selectedFile.name.replace(/\\.[^/.]+$/, ''));\n      }\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        toast({\n          title: 'Fichier invalide',\n          description: error.errors[0].message,\n          variant: 'destructive',\n        });\n      }\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!file || !user) return;\n\n    try {\n      // Validation complète\n      const validatedData = documentSchema.parse({\n        file,\n        documentType,\n        name: documentName,\n      });\n\n      setUploading(true);\n      setUploadProgress(0);\n\n      // Upload vers Supabase Storage\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${leaseId}/${Date.now()}_${documentName}.${fileExt}`;\n      \n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('lease-documents')\n        .upload(fileName, file, {\n          cacheControl: '3600',\n          upsert: false,\n        });\n\n      if (uploadError) throw uploadError;\n\n      setUploadProgress(50);\n\n      // Obtenir l'URL publique\n      const { data: { publicUrl } } = supabase.storage\n        .from('lease-documents')\n        .getPublicUrl(fileName);\n\n      // Enregistrer dans la base de données\n      const { error: dbError } = await supabase.from('lease_documents').insert({\n        lease_id: leaseId,\n        document_type: validatedData.documentType,\n        name: validatedData.name,\n        file_url: publicUrl,\n        file_size: file.size,\n        file_type: file.type,\n        uploaded_by: user.id,\n        status: 'pending',\n      });\n\n      if (dbError) throw dbError;\n\n      setUploadProgress(100);\n\n      toast({\n        title: 'Document uploadé',\n        description: 'Le document a été ajouté avec succès',\n      });\n\n      // Reset form\n      setFile(null);\n      setDocumentType('');\n      setDocumentName('');\n      setUploadProgress(0);\n      \n      onUploadSuccess?.();\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        toast({\n          title: 'Erreur de validation',\n          description: error.errors[0].message,\n          variant: 'destructive',\n        });\n      } else if (error instanceof Error) {\n        toast({\n          title: 'Erreur',\n          description: error.message,\n          variant: 'destructive',\n        });\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const FileIcon = file ? getFileIcon(file.type) : Upload;\n\n  return (\n    <div className=\"space-y-4\">\n      {/* File input */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"file-upload\">Fichier</Label>\n        <div className=\"flex items-center gap-2\">\n          <Input\n            id=\"file-upload\"\n            type=\"file\"\n            accept=\".pdf,.jpg,.jpeg,.png,.webp,.doc,.docx\"\n            onChange={handleFileSelect}\n            disabled={uploading}\n            className=\"hidden\"\n          />\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            className=\"w-full\"\n            onClick={() => document.getElementById('file-upload')?.click()}\n            disabled={uploading}\n          >\n            <Upload className=\"h-4 w-4 mr-2\" />\n            {file ? 'Changer de fichier' : 'Sélectionner un fichier'}\n          </Button>\n        </div>\n\n        {file && (\n          <div className=\"flex items-center gap-2 p-3 border rounded-lg bg-muted/50\">\n            <FileIcon className=\"h-5 w-5 text-muted-foreground\" />\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium truncate\">{file.name}</p>\n              <p className=\"text-xs text-muted-foreground\">\n                {(file.size / 1024 / 1024).toFixed(2)} MB\n              </p>\n            </div>\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setFile(null)}\n              disabled={uploading}\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {/* Document type */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"document-type\">Type de document</Label>\n        <Select value={documentType} onValueChange={setDocumentType} disabled={uploading}>\n          <SelectTrigger>\n            <SelectValue placeholder=\"Sélectionnez le type\" />\n          </SelectTrigger>\n          <SelectContent>\n            {DOCUMENT_TYPES.map((type) => (\n              <SelectItem key={type.value} value={type.value}>\n                {type.label}\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n      </div>\n\n      {/* Document name */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"document-name\">Nom du document</Label>\n        <Input\n          id=\"document-name\"\n          value={documentName}\n          onChange={(e) => setDocumentName(e.target.value)}\n          placeholder=\"Ex: Contrat de bail 2024\"\n          maxLength={255}\n          disabled={uploading}\n        />\n      </div>\n\n      {/* Upload progress */}\n      {uploading && (\n        <div className=\"space-y-2\">\n          <Progress value={uploadProgress} />\n          <p className=\"text-sm text-center text-muted-foreground\">\n            Upload en cours... {uploadProgress}%\n          </p>\n        </div>\n      )}\n\n      {/* Upload button */}\n      <Button\n        onClick={handleUpload}\n        disabled={!file || !documentType || !documentName || uploading}\n        className=\"w-full\"\n      >\n        {uploading ? 'Upload en cours...' : 'Uploader le document'}\n      </Button>\n\n      <p className=\"text-xs text-muted-foreground\">\n        Formats acceptés: PDF, JPG, PNG, WEBP, DOC, DOCX (max 10MB)\n      </p>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { logger } from '@/services/logger';\nimport { Badge } from '@/components/ui/badge';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { useToast } from '@/hooks/use-toast';\nimport { \n  FileText, Download, Trash2, Upload, CheckCircle2, \n  Clock, XCircle, AlertCircle, Eye \n} from 'lucide-react';\nimport { DocumentUpload } from './DocumentUpload';\nimport { formatDistanceToNow } from 'date-fns';\nimport { fr } from 'date-fns/locale';\n\ninterface LeaseDocument {\n  id: string;\n  document_type: string;\n  name: string;\n  file_url: string;\n  file_size: number | null;\n  file_type: string | null;\n  status: string;\n  notes: string | null;\n  created_at: string;\n  uploaded_by: string;\n  uploader?: {\n    full_name: string;\n  };\n}\n\ninterface DocumentManagerProps {\n  leaseId: string;\n  landlordId: string;\n  tenantId: string;\n}\n\nconst DOCUMENT_TYPE_LABELS: Record<string, string> = {\n  lease_contract: 'Contrat de bail',\n  inventory_in: \"État des lieux d'entrée\",\n  inventory_out: 'État des lieux de sortie',\n  rent_receipt: 'Quittance de loyer',\n  deposit_receipt: 'Reçu de dépôt de garantie',\n  insurance: \"Attestation d'assurance\",\n  identity_document: \"Pièce d'identité\",\n  income_proof: 'Justificatif de revenus',\n  employment_contract: 'Contrat de travail',\n  other: 'Autre',\n};\n\nconst REQUIRED_DOCUMENTS = [\n  'lease_contract',\n  'inventory_in',\n  'insurance',\n  'identity_document',\n];\n\nexport const DocumentManager = ({ leaseId, landlordId, tenantId }: DocumentManagerProps) => {\n  const { user } = useAuth();\n  const { toast } = useToast();\n  const [documents, setDocuments] = useState<LeaseDocument[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [uploadDialogOpen, setUploadDialogOpen] = useState(false);\n\n  useEffect(() => {\n    fetchDocuments();\n  }, [leaseId]);\n\n  const fetchDocuments = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('lease_documents')\n        .select(`\n          *,\n          uploader:uploaded_by (full_name)\n        `)\n        .eq('lease_id', leaseId)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      // Transform data\n      const transformedData = data?.map((doc: any) => ({\n        ...doc,\n        uploader: Array.isArray(doc.uploader) ? doc.uploader[0] : doc.uploader,\n      })) || [];\n\n      setDocuments(transformedData);\n    } catch (error) {\n      logger.logError(error, { context: 'DocumentManager', action: 'fetch' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownload = async (fileUrl: string, fileName: string) => {\n    try {\n      const response = await fetch(fileUrl);\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = fileName;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de télécharger le fichier',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleDelete = async (documentId: string, fileUrl: string) => {\n    if (!confirm('Êtes-vous sûr de vouloir supprimer ce document ?')) return;\n\n    try {\n      // Extraire le chemin du fichier depuis l'URL\n      const urlParts = fileUrl.split('/lease-documents/');\n      const filePath = urlParts[1];\n\n      // Supprimer du storage\n      if (filePath) {\n        await supabase.storage.from('lease-documents').remove([filePath]);\n      }\n\n      // Supprimer de la base de données\n      const { error } = await supabase\n        .from('lease_documents')\n        .delete()\n        .eq('id', documentId);\n\n      if (error) throw error;\n\n      toast({\n        title: 'Document supprimé',\n        description: 'Le document a été supprimé avec succès',\n      });\n\n      fetchDocuments();\n    } catch (error) {\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de supprimer le document',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'approved':\n        return <Badge className=\"bg-green-600\"><CheckCircle2 className=\"h-3 w-3 mr-1\" />Approuvé</Badge>;\n      case 'rejected':\n        return <Badge variant=\"destructive\"><XCircle className=\"h-3 w-3 mr-1\" />Rejeté</Badge>;\n      default:\n        return <Badge variant=\"secondary\"><Clock className=\"h-3 w-3 mr-1\" />En attente</Badge>;\n    }\n  };\n\n  const getMissingDocuments = () => {\n    const uploadedTypes = documents.map(d => d.document_type);\n    return REQUIRED_DOCUMENTS.filter(type => !uploadedTypes.includes(type));\n  };\n\n  const missingDocs = getMissingDocuments();\n  const completionRate = ((REQUIRED_DOCUMENTS.length - missingDocs.length) / REQUIRED_DOCUMENTS.length) * 100;\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"p-8\">\n          <div className=\"flex items-center justify-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Checklist des documents obligatoires */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <AlertCircle className=\"h-5 w-5\" />\n            Documents obligatoires\n          </CardTitle>\n          <CardDescription>\n            Complétude: {completionRate.toFixed(0)}% ({REQUIRED_DOCUMENTS.length - missingDocs.length}/{REQUIRED_DOCUMENTS.length})\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-2\">\n            {REQUIRED_DOCUMENTS.map(type => {\n              const isUploaded = documents.some(d => d.document_type === type);\n              return (\n                <div key={type} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                  <div className=\"flex items-center gap-3\">\n                    {isUploaded ? (\n                      <CheckCircle2 className=\"h-5 w-5 text-green-600\" />\n                    ) : (\n                      <XCircle className=\"h-5 w-5 text-muted-foreground\" />\n                    )}\n                    <span className={isUploaded ? 'font-medium' : 'text-muted-foreground'}>\n                      {DOCUMENT_TYPE_LABELS[type]}\n                    </span>\n                  </div>\n                  {isUploaded && (\n                    <Badge variant=\"outline\" className=\"bg-green-50\">\n                      <CheckCircle2 className=\"h-3 w-3 mr-1\" />\n                      Uploadé\n                    </Badge>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Liste des documents */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle>Documents du bail</CardTitle>\n              <CardDescription>\n                {documents.length} document{documents.length > 1 ? 's' : ''} uploadé{documents.length > 1 ? 's' : ''}\n              </CardDescription>\n            </div>\n            <Dialog open={uploadDialogOpen} onOpenChange={setUploadDialogOpen}>\n              <DialogTrigger asChild>\n                <Button>\n                  <Upload className=\"h-4 w-4 mr-2\" />\n                  Ajouter un document\n                </Button>\n              </DialogTrigger>\n              <DialogContent>\n                <DialogHeader>\n                  <DialogTitle>Uploader un document</DialogTitle>\n                  <DialogDescription>\n                    Ajoutez un document à ce bail\n                  </DialogDescription>\n                </DialogHeader>\n                <DocumentUpload\n                  leaseId={leaseId}\n                  onUploadSuccess={() => {\n                    fetchDocuments();\n                    setUploadDialogOpen(false);\n                  }}\n                />\n              </DialogContent>\n            </Dialog>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <ScrollArea className=\"h-[400px]\">\n            {documents.length === 0 ? (\n              <div className=\"text-center py-8 text-muted-foreground\">\n                <FileText className=\"h-12 w-12 mx-auto mb-3 opacity-50\" />\n                <p>Aucun document uploadé</p>\n              </div>\n            ) : (\n              <div className=\"space-y-3\">\n                {documents.map((doc) => (\n                  <div key={doc.id} className=\"flex items-start justify-between p-4 border rounded-lg hover:bg-muted/50 transition-colors\">\n                    <div className=\"flex items-start gap-3 flex-1\">\n                      <FileText className=\"h-5 w-5 mt-0.5 text-primary\" />\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <p className=\"font-medium\">{doc.name}</p>\n                          {getStatusBadge(doc.status)}\n                        </div>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {DOCUMENT_TYPE_LABELS[doc.document_type]}\n                        </p>\n                        <div className=\"flex items-center gap-3 mt-2 text-xs text-muted-foreground\">\n                          <span>Par {doc.uploader?.full_name || 'Inconnu'}</span>\n                          <span>•</span>\n                          <span>\n                            {formatDistanceToNow(new Date(doc.created_at), {\n                              addSuffix: true,\n                              locale: fr,\n                            })}\n                          </span>\n                          {doc.file_size && (\n                            <>\n                              <span>•</span>\n                              <span>{(doc.file_size / 1024 / 1024).toFixed(2)} MB</span>\n                            </>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => window.open(doc.file_url, '_blank')}\n                      >\n                        <Eye className=\"h-4 w-4\" />\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => handleDownload(doc.file_url, doc.name)}\n                      >\n                        <Download className=\"h-4 w-4\" />\n                      </Button>\n                      {user?.id === doc.uploaded_by && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          onClick={() => handleDelete(doc.id, doc.file_url)}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </ScrollArea>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { supabase } from \"@/lib/supabase\";\nimport { logger } from \"@/services/logger\";\nimport Navbar from \"@/components/Navbar\";\nimport Footer from \"@/components/Footer\";\nimport { DynamicBreadcrumb } from \"@/components/navigation/DynamicBreadcrumb\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FileText, Calendar, MapPin, DollarSign, CheckCircle, Clock, Shield } from \"lucide-react\";\nimport { ElectronicSignature } from \"@/components/leases/ElectronicSignature\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport CertificationRequest from \"@/components/leases/CertificationRequest\";\nimport { PreCertificationChecklist } from \"@/components/leases/PreCertificationChecklist\";\nimport ANSUTCertifiedBadge from \"@/components/ui/ansut-certified-badge\";\nimport { Download, FileText as FileTextIcon, Loader2, Star, Folder } from \"lucide-react\";\nimport { ReviewForm } from \"@/components/reviews/ReviewForm\";\nimport { DocumentManager } from \"@/components/documents/DocumentManager\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\n\ninterface Lease {\n  id: string;\n  property_id: string;\n  monthly_rent: number;\n  deposit_amount: number;\n  charges_amount: number;\n  status: string;\n  lease_type: string;\n  start_date: string;\n  end_date: string;\n  tenant_signed_at: string | null;\n  landlord_signed_at: string | null;\n  ansut_certified_at: string | null;\n  certification_status: 'not_requested' | 'pending' | 'certified' | 'rejected';\n  certification_requested_at: string | null;\n  document_url: string | null;\n  cryptoneo_operation_id: string | null;\n  signed_document_url: string | null;\n  is_electronically_signed: boolean;\n  landlord_cryptoneo_signature_at: string | null;\n  tenant_cryptoneo_signature_at: string | null;\n  properties: {\n    title: string;\n    address: string;\n    city: string;\n    main_image: string;\n  };\n  tenant_id: string;\n  landlord_id: string;\n  tenant?: {\n    full_name: string;\n  } | null;\n  landlord?: {\n    full_name: string;\n  } | null;\n}\n\nexport default function Leases() {\n  const { user, profile } = useAuth();\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const [leases, setLeases] = useState<Lease[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [generatingPdf, setGeneratingPdf] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (user) {\n      fetchLeases();\n    }\n  }, [user]);\n\n  const fetchLeases = async () => {\n    try {\n      // Fetch leases with profiles data\n      const { data, error } = await supabase\n        .from(\"leases\")\n        .select(`\n          *,\n          properties (title, address, city, main_image)\n        `)\n        .or(`landlord_id.eq.${user?.id},tenant_id.eq.${user?.id}`)\n        .order(\"created_at\", { ascending: false });\n\n      if (error) throw error;\n      \n      // Fetch profiles for each lease\n      const leasesWithProfiles = await Promise.all(\n        (data || []).map(async (lease) => {\n          const { data: tenantData } = await supabase\n            .from('profiles')\n            .select('full_name')\n            .eq('id', lease.tenant_id)\n            .single();\n          \n          const { data: landlordData } = await supabase\n            .from('profiles')\n            .select('full_name')\n            .eq('id', lease.landlord_id)\n            .single();\n          \n          return {\n            ...lease,\n            tenant: tenantData,\n            landlord: landlordData,\n          };\n        })\n      );\n\n      setLeases(leasesWithProfiles as unknown as Lease[]);\n    } catch (error) {\n      logger.error('Error fetching leases', { error, userId: user?.id });\n      toast({\n        title: \"Erreur\",\n        description: error instanceof Error ? error.message : \"Erreur lors du chargement\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSign = async (leaseId: string, userType: \"landlord\" | \"tenant\") => {\n    try {\n      const updateField = userType === \"landlord\" ? \"landlord_signed_at\" : \"tenant_signed_at\";\n      \n      const { error } = await supabase\n        .from(\"leases\")\n        .update({ [updateField]: new Date().toISOString() })\n        .eq(\"id\", leaseId);\n\n      if (error) throw error;\n\n      toast({\n        title: \"Signature enregistrée\",\n        description: \"Votre signature électronique a été enregistrée avec succès\",\n      });\n\n      fetchLeases();\n    } catch (error) {\n      logger.error(\"Error signing lease\", { error, leaseId });\n      toast({\n        title: \"Erreur\",\n        description: error instanceof Error ? error.message : \"Erreur lors de la signature\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleGeneratePdf = async (leaseId: string) => {\n    try {\n      setGeneratingPdf(leaseId);\n      \n      const { data, error } = await supabase.functions.invoke('generate-lease-pdf', {\n        body: { leaseId }\n      });\n\n      if (error) throw error;\n\n      // Ouvrir le PDF dans un nouvel onglet\n      if (data?.documentUrl) {\n        window.open(data.documentUrl, '_blank');\n        toast({\n          title: \"Contrat généré\",\n          description: \"Le contrat PDF a été généré avec succès\",\n        });\n        fetchLeases(); // Rafraîchir pour obtenir l'URL mise à jour\n      }\n    } catch (error) {\n      logger.error('Error generating PDF', { error, leaseId });\n      toast({\n        title: \"Erreur\",\n        description: error instanceof Error ? error.message : \"Impossible de générer le PDF\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setGeneratingPdf(null);\n    }\n  };\n\n  const getStatusBadge = (lease: Lease) => {\n    // Use the new certification badge component\n    return (\n                      <ANSUTCertifiedBadge \n                        status={lease.certification_status}\n                        certifiedAt={lease.ansut_certified_at}\n                      />\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-background\">\n        <Navbar />\n        <div className=\"container mx-auto px-4 py-8\">\n          <p>Chargement...</p>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navbar />\n      <main className=\"container mx-auto px-4 py-6 pt-24\">\n        <DynamicBreadcrumb />\n        \n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">Mes Baux</h1>\n          <p className=\"text-muted-foreground\">\n            Gérez vos contrats de location et effectuez les paiements\n          </p>\n        </div>\n\n        <div className=\"grid gap-6\">\n          {leases.length === 0 ? (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <FileText className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground\" />\n                <p className=\"text-muted-foreground\">Aucun bail trouvé</p>\n              </CardContent>\n            </Card>\n          ) : (\n            leases.map((lease) => (\n              <Card key={lease.id}>\n                <CardHeader>\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <CardTitle className=\"mb-2\">{lease.properties.title}</CardTitle>\n                      <div className=\"flex items-center gap-2 text-sm text-muted-foreground mb-2\">\n                        <MapPin className=\"h-4 w-4\" />\n                        {lease.properties.address}, {lease.properties.city}\n                      </div>\n                      <div className=\"flex gap-2 mb-4\">\n                        {getStatusBadge(lease)}\n                        <Badge variant=\"outline\">{lease.lease_type}</Badge>\n                      </div>\n                    </div>\n                    {lease.properties.main_image && (\n                      <img\n                        src={lease.properties.main_image}\n                        alt={lease.properties.title}\n                        className=\"w-24 h-24 object-cover rounded-lg\"\n                      />\n                    )}\n                  </div>\n                </CardHeader>\n                \n                <Tabs defaultValue=\"details\" className=\"w-full\">\n                  <TabsList className=\"grid w-full grid-cols-2 px-6\">\n                    <TabsTrigger value=\"details\">Détails</TabsTrigger>\n                    <TabsTrigger value=\"documents\">\n                      <Folder className=\"h-4 w-4 mr-2\" />\n                      Documents\n                    </TabsTrigger>\n                  </TabsList>\n\n                  <TabsContent value=\"details\">\n                <CardContent>\n                  <div className=\"grid md:grid-cols-2 gap-4 mb-6\">\n                    <div>\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n                        <span className=\"font-semibold\">\n                          {lease.monthly_rent.toLocaleString()} FCFA/mois\n                        </span>\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        Dépôt: {lease.deposit_amount?.toLocaleString() || 0} FCFA\n                      </div>\n                      {lease.charges_amount && (\n                        <div className=\"text-sm text-muted-foreground\">\n                          Charges: {lease.charges_amount.toLocaleString()} FCFA\n                        </div>\n                      )}\n                    </div>\n                    <div>\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                        <span className=\"text-sm\">\n                          Du {new Date(lease.start_date).toLocaleDateString()} au{\" \"}\n                          {new Date(lease.end_date).toLocaleDateString()}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2 mb-6\">\n                    <div className=\"flex items-center gap-2 text-sm\">\n                      {lease.landlord_signed_at ? (\n                        <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                      ) : (\n                        <Clock className=\"h-4 w-4 text-yellow-500\" />\n                      )}\n                      <span>\n                        Signature propriétaire:{\" \"}\n                        {lease.landlord_signed_at\n                          ? new Date(lease.landlord_signed_at).toLocaleDateString()\n                          : \"En attente\"}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm\">\n                      {lease.tenant_signed_at ? (\n                        <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                      ) : (\n                        <Clock className=\"h-4 w-4 text-yellow-500\" />\n                      )}\n                      <span>\n                        Signature locataire:{\" \"}\n                        {lease.tenant_signed_at\n                          ? new Date(lease.tenant_signed_at).toLocaleDateString()\n                          : \"En attente\"}\n                      </span>\n                    </div>\n                    {lease.ansut_certified_at && (\n                      <div className=\"flex items-center gap-2 text-sm\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                        <span>\n                          Certifié ANSUT le{\" \"}\n                          {new Date(lease.ansut_certified_at).toLocaleDateString()}\n                        </span>\n                      </div>\n                    )}\n                    {lease.is_electronically_signed && (\n                      <div className=\"flex items-center gap-2 text-sm\">\n                        <Shield className=\"h-4 w-4 text-blue-500\" />\n                        <span className=\"font-medium text-blue-600 dark:text-blue-400\">\n                          Signé électroniquement via CryptoNeo\n                        </span>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Electronic Signature Component */}\n                  {((profile?.user_type === \"proprietaire\" && !lease.landlord_signed_at) ||\n                    (profile?.user_type === \"locataire\" && !lease.tenant_signed_at)) && (\n                    <div className=\"mb-4\">\n                      <ElectronicSignature\n                        lease={lease}\n                        userType={profile?.user_type === \"proprietaire\" ? \"proprietaire\" : \"locataire\"}\n                        onSignatureComplete={fetchLeases}\n                      />\n                    </div>\n                  )}\n                    \n                  <div className=\"flex flex-wrap gap-2\">\n                    {/* PDF Download buttons - shown after both parties signed */}\n                    {lease.tenant_signed_at && lease.landlord_signed_at && (\n                      <>\n                        {/* Signed document (priority if available) */}\n                        {lease.signed_document_url ? (\n                          <Button\n                            onClick={() => window.open(lease.signed_document_url!, '_blank')}\n                            className=\"gap-2\"\n                          >\n                            <Shield className=\"h-4 w-4\" />\n                            Contrat signé électroniquement\n                          </Button>\n                        ) : lease.document_url ? (\n                          <Button\n                            variant=\"outline\"\n                            onClick={() => window.open(lease.document_url!, '_blank')}\n                          >\n                            <Download className=\"h-4 w-4 mr-2\" />\n                            Télécharger le contrat\n                          </Button>\n                        ) : (\n                          <Button\n                            variant=\"outline\"\n                            onClick={() => handleGeneratePdf(lease.id)}\n                            disabled={generatingPdf === lease.id}\n                          >\n                            {generatingPdf === lease.id ? (\n                              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                            ) : (\n                              <FileTextIcon className=\"h-4 w-4 mr-2\" />\n                            )}\n                            {generatingPdf === lease.id ? 'Génération...' : 'Générer le contrat'}\n                          </Button>\n                        )}\n                      </>\n                    )}\n\n                    {/* Pre-certification checklist */}\n                    {lease.tenant_signed_at && lease.landlord_signed_at && lease.certification_status === 'not_requested' && (\n                      <div className=\"w-full mt-4\">\n                        <PreCertificationChecklist leaseId={lease.id} />\n                      </div>\n                    )}\n\n                    {/* Certification request button */}\n                    {lease.tenant_signed_at && lease.landlord_signed_at && (\n                      <CertificationRequest\n                        leaseId={lease.id}\n                        certificationStatus={lease.certification_status}\n                        onRequestSubmitted={fetchLeases}\n                      />\n                    )}\n                    \n                    <Button\n                      variant=\"outline\"\n                      onClick={() => navigate(`/payments?lease=${lease.id}`)}\n                    >\n                      <DollarSign className=\"h-4 w-4 mr-2\" />\n                      Paiements\n                    </Button>\n\n                    {/* Review button for completed leases */}\n                    {lease.status === 'signed' && (\n                      <Dialog>\n                        <DialogTrigger asChild>\n                          <Button variant=\"outline\">\n                            <Star className=\"h-4 w-4 mr-2\" />\n                            Laisser un avis\n                          </Button>\n                        </DialogTrigger>\n                        <DialogContent className=\"max-w-2xl\">\n                          <DialogHeader>\n                            <DialogTitle>Laisser un avis</DialogTitle>\n                            <DialogDescription>\n                              Partagez votre expérience pour cette location\n                            </DialogDescription>\n                          </DialogHeader>\n                          <ReviewForm\n                            revieweeId={\n                              profile?.user_type === 'locataire' \n                                ? lease.landlord_id \n                                : lease.tenant_id\n                            }\n                            revieweeName={\n                              profile?.user_type === 'locataire'\n                                ? lease.landlord?.full_name || 'Propriétaire'\n                                : lease.tenant?.full_name || 'Locataire'\n                            }\n                            leaseId={lease.id}\n                            reviewType={\n                              profile?.user_type === 'locataire'\n                                ? 'tenant_to_landlord'\n                                : 'landlord_to_tenant'\n                            }\n                            onSuccess={fetchLeases}\n                          />\n                        </DialogContent>\n                      </Dialog>\n                    )}\n                  </div>\n                </CardContent>\n              </TabsContent>\n\n              <TabsContent value=\"documents\">\n                <CardContent>\n                  <DocumentManager\n                    leaseId={lease.id}\n                    landlordId={lease.landlord_id}\n                    tenantId={lease.tenant_id}\n                  />\n                </CardContent>\n              </TabsContent>\n            </Tabs>\n          </Card>\n            ))\n          )}\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"],"names":["CertificationRequest","leaseId","certificationStatus","onRequestSubmitted","user","useAuth","open","setOpen","useState","notes","setNotes","loading","setLoading","canRequestCertification","handleSubmit","error","supabase","toast","logger","jsxs","Dialog","jsx","DialogTrigger","Button","Shield","DialogContent","DialogHeader","DialogTitle","DialogDescription","Alert","Info","AlertDescription","Link","Label","Textarea","e","Loader2","PreCertificationChecklist","validation","setValidation","useEffect","validateLease","data","Card","CardContent","CardHeader","CardTitle","CheckCircle2","XCircle","CardDescription","check","index","cn","reviewSchema","z.object","z.number","z.string","z.literal","ReviewForm","revieweeId","revieweeName","reviewType","onSuccess","useToast","rating","setRating","hoveredRating","setHoveredRating","comment","setComment","validatedData","z.ZodError","star","Star","ALLOWED_FILE_TYPES","fileSchema","z.custom","val","File","ERROR_MESSAGES","file","FILE_LIMITS","documentSchema","VALIDATION_LIMITS","DOCUMENT_TYPES","DocumentUpload","onUploadSuccess","setFile","documentType","setDocumentType","documentName","setDocumentName","uploading","setUploading","uploadProgress","setUploadProgress","getFileIcon","fileType","Image","FileText","handleFileSelect","selectedFile","_a","handleUpload","fileExt","fileName","uploadData","uploadError","publicUrl","dbError","FileIcon","Upload","Input","X","Select","SelectTrigger","SelectValue","SelectContent","type","SelectItem","Progress","DOCUMENT_TYPE_LABELS","REQUIRED_DOCUMENTS","DocumentManager","landlordId","tenantId","documents","setDocuments","uploadDialogOpen","setUploadDialogOpen","fetchDocuments","transformedData","doc","handleDownload","fileUrl","blob","url","a","handleDelete","documentId","filePath","getStatusBadge","status","Badge","Clock","missingDocs","uploadedTypes","d","completionRate","AlertCircle","isUploaded","ScrollArea","formatDistanceToNow","fr","Fragment","Eye","Download","Trash2","Leases","profile","navigate","useNavigate","leases","setLeases","generatingPdf","setGeneratingPdf","fetchLeases","leasesWithProfiles","lease","tenantData","landlordData","handleGeneratePdf","ANSUTCertifiedBadge","Navbar","Footer","DynamicBreadcrumb","MapPin","Tabs","TabsList","TabsTrigger","Folder","TabsContent","DollarSign","Calendar","CheckCircle","ElectronicSignature","FileTextIcon","_b","_c"],"mappings":"kuDA0BA,MAAMA,GAAuB,CAAC,CAAE,QAAAC,EAAS,oBAAAC,EAAqB,mBAAAC,KAAoD,CAChH,KAAM,CAAE,KAAAC,CAAA,EAASC,EAAA,EACX,CAACC,EAAMC,CAAO,EAAIC,EAAAA,SAAS,EAAK,EAChC,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAAS,EAAE,EAC/B,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAK,EAEtCK,EAA0BX,IAAwB,iBAAmBA,IAAwB,WAE7FY,EAAe,SAAY,CAC/B,GAAKV,EAEL,CAAAQ,EAAW,EAAI,EACf,GAAI,CACF,KAAM,CAAE,MAAAG,GAAU,MAAMC,EACrB,KAAK,QAAQ,EACb,OAAO,CACN,qBAAsB,UACtB,2BAA4B,IAAI,KAAA,EAAO,YAAA,EACvC,oBAAqBP,EAAM,QAAU,IAAA,CACtC,EACA,GAAG,KAAMR,CAAO,EAEnB,GAAIc,EAAO,MAAMA,EAEjBE,GAAM,CACJ,MAAO,gCACP,YAAa,iEAAA,CACd,EAEDV,EAAQ,EAAK,EACbG,EAAS,EAAE,EACXP,GAAA,MAAAA,GACF,OAASY,EAAY,CACnBG,EAAO,SAASH,EAAO,CAAE,QAAS,uBAAwB,OAAQ,SAAU,EAC5EE,GAAM,CACJ,MAAO,SACP,YAAaF,EAAM,SAAW,qCAC9B,QAAS,aAAA,CACV,CACH,QAAA,CACEH,EAAW,EAAK,CAClB,EACF,EAEA,OAAKC,EAKHM,EAAAA,KAACC,EAAA,CAAO,KAAAd,EAAY,aAAcC,EAChC,SAAA,CAAAc,EAAAA,IAACC,EAAA,CAAc,QAAO,GACpB,SAAAH,EAAAA,KAACI,GAAO,QAAQ,UAAU,UAAU,QAClC,SAAA,CAAAF,EAAAA,IAACG,EAAA,CAAO,UAAU,SAAA,CAAU,EAAE,iCAAA,CAAA,CAEhC,CAAA,CACF,EACAL,EAAAA,KAACM,EAAA,CAAc,UAAU,YACvB,SAAA,CAAAN,OAACO,GAAA,CACC,SAAA,CAAAP,EAAAA,KAACQ,GAAA,CAAY,UAAU,0BACrB,SAAA,CAAAN,EAAAA,IAACG,EAAA,CAAO,UAAU,wBAAA,CAAyB,EAAE,gCAAA,EAE/C,EACAH,EAAAA,IAACO,IAAkB,SAAA,yFAAA,CAEnB,CAAA,EACF,EAEAT,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAACU,GAAA,CACC,SAAA,CAAAR,EAAAA,IAACS,GAAA,CAAK,UAAU,SAAA,CAAU,SACzBC,GAAA,CACC,SAAA,CAAAV,EAAAA,IAAC,UAAO,SAAA,sBAAA,CAAoB,EAC5BF,EAAAA,KAAC,KAAA,CAAG,UAAU,+CACZ,SAAA,CAAAE,EAAAA,IAAC,MAAG,SAAA,yDAAA,CAAuD,EAC3DA,EAAAA,IAAC,MAAG,SAAA,qDAAA,CAAmD,EACvDA,EAAAA,IAAC,MAAG,SAAA,mDAAA,CAAiD,EACrDA,EAAAA,IAAC,MAAG,SAAA,gDAAA,CAA8C,CAAA,EACpD,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,eACX,SAAAA,EAAAA,IAACW,GAAA,CAAK,GAAG,qBAAqB,UAAU,+CAA+C,SAAA,2BAAA,CAEvF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAEAb,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAE,EAAAA,IAACY,EAAA,CAAM,QAAQ,QAAQ,SAAA,mCAEvB,EACAZ,EAAAA,IAACa,GAAA,CACC,GAAG,QACH,YAAY,8EACZ,MAAOzB,EACP,SAAW0B,GAAMzB,EAASyB,EAAE,OAAO,KAAK,EACxC,KAAM,CAAA,CAAA,EAERd,EAAAA,IAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,iFAAA,CAE7C,CAAA,EACF,EAEAF,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAE,EAAAA,IAACE,EAAA,CAAO,QAAQ,UAAU,QAAS,IAAMhB,EAAQ,EAAK,EAAG,SAAUI,EAAS,SAAA,SAAA,CAE5E,SACCY,EAAA,CAAO,QAAST,EAAc,SAAUH,EAAS,UAAU,QACzD,SAAA,CAAAA,GAAWU,EAAAA,IAACe,EAAA,CAAQ,UAAU,sBAAA,CAAuB,EACrDzB,EAAU,oBAAsB,sBAAA,CAAA,CACnC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EApEO,IAsEX,ECnHa0B,GAA4B,CAAC,CAAE,QAAApC,KAA8C,CACxF,KAAM,CAACqC,EAAYC,CAAa,EAAI/B,EAAAA,SAAkC,IAAI,EACpE,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAI,EAE3CgC,EAAAA,UAAU,IAAM,CACdC,EAAA,CACF,EAAG,CAACxC,CAAO,CAAC,EAEZ,MAAMwC,EAAgB,SAAY,CAChC,GAAI,CACF7B,EAAW,EAAI,EACf,KAAM,CAAE,KAAA8B,EAAM,MAAA3B,CAAA,EAAU,MAAMC,EAAS,IAAI,uCAAwC,CACjF,WAAYf,CAAA,CACb,EAED,GAAIc,EAAO,MAAMA,EACjBwB,EAAcG,CAAmC,CACnD,OAAS3B,EAAO,CACdG,EAAO,SAASH,EAAO,CAAE,QAAS,4BAA6B,OAAQ,WAAY,CACrF,QAAA,CACEH,EAAW,EAAK,CAClB,CACF,EAEA,OAAID,EAEAU,EAAAA,IAACsB,EAAA,CACC,SAAAtB,EAAAA,IAACuB,EAAA,CAAY,UAAU,wCACrB,SAAAvB,EAAAA,IAACe,EAAA,CAAQ,UAAU,4CAAA,CAA6C,CAAA,CAClE,EACF,EAICE,SAGFK,EAAA,CACC,SAAA,CAAAxB,OAAC0B,EAAA,CACC,SAAA,CAAA1B,EAAAA,KAAC2B,EAAA,CAAU,UAAU,0BAClB,SAAA,CAAAR,EAAW,iBACTS,EAAA,CAAa,UAAU,uBAAuB,EAE/C1B,EAAAA,IAAC2B,EAAA,CAAQ,UAAU,0BAAA,CAA2B,EAC9C,iCAAA,EAEJ,EACA3B,EAAAA,IAAC4B,EAAA,CACE,SAAAX,EAAW,WACR,6DACA,iEAAA,CACN,CAAA,EACF,EACAnB,EAAAA,KAACyB,EAAA,CAAY,UAAU,YACpB,SAAA,CAAAN,EAAW,OAAO,IAAI,CAACY,EAAOC,IAC7BhC,EAAAA,KAAC,MAAA,CAEC,UAAWiC,GACT,+DACAF,EAAM,QAAU,yDAAA,EAElB,MAAO,CAAE,eAAgB,GAAGC,EAAQ,GAAG,IAAA,EAEtC,SAAA,CAAAD,EAAM,aACJH,EAAA,CAAa,UAAU,0DAA0D,EAElF1B,EAAAA,IAAC2B,EAAA,CAAQ,UAAU,0CAAA,CAA2C,EAEhE7B,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAe,SAAA6B,EAAM,MAAM,EACxC7B,EAAAA,IAAC,IAAA,CAAE,UAAU,gCAAiC,WAAM,OAAA,CAAQ,CAAA,CAAA,CAC9D,CAAA,CAAA,EAfK6B,EAAM,UAAA,CAiBd,EAEA,CAACZ,EAAW,YACXjB,EAAAA,IAACQ,IACC,SAAAR,EAAAA,IAACU,GAAA,CAAiB,sFAElB,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,EAjDsB,IAmD1B,ECpGMsB,GAAeC,GAAS,CAC5B,OAAQC,GAAE,EAAS,IAAI,EAAG,gCAAgC,EAAE,IAAI,CAAC,EACjE,QAASC,EAAE,EACR,OACA,IAAI,GAAI,qDAAqD,EAC7D,IAAI,IAAM,qDAAqD,EAC/D,SAAA,EACA,GAAGC,GAAU,EAAE,CAAC,CACrB,CAAC,EAUYC,GAAa,CAAC,CACzB,WAAAC,EACA,aAAAC,EACA,QAAA3D,EACA,WAAA4D,EACA,UAAAC,CACF,IAAuB,CACrB,KAAM,CAAE,KAAA1D,CAAA,EAASC,EAAA,EACX,CAAE,MAAAY,CAAA,EAAU8C,EAAA,EACZ,CAACC,EAAQC,CAAS,EAAIzD,EAAAA,SAAS,CAAC,EAChC,CAAC0D,EAAeC,CAAgB,EAAI3D,EAAAA,SAAS,CAAC,EAC9C,CAAC4D,EAASC,CAAU,EAAI7D,EAAAA,SAAS,EAAE,EACnC,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAK,EAEtCM,EAAe,MAAOqB,GAAuB,CAGjD,GAFAA,EAAE,eAAA,EAEE,CAAC/B,EAAM,CACTa,EAAM,CACJ,MAAO,SACP,YAAa,gDACb,QAAS,aAAA,CACV,EACD,MACF,CAEA,GAAI,CAEF,MAAMqD,EAAgBjB,GAAa,MAAM,CAAE,OAAAW,EAAQ,QAAAI,EAAS,EAE5DxD,EAAW,EAAI,EAEf,KAAM,CAAE,MAAAG,GAAU,MAAMC,EAAS,KAAK,SAAS,EAAE,OAAO,CACtD,YAAaZ,EAAK,GAClB,YAAauD,EACb,SAAU1D,GAAW,KACrB,OAAQqE,EAAc,OACtB,QAASA,EAAc,SAAW,KAClC,YAAaT,CAAA,CACd,EAED,GAAI9C,EAAO,MAAMA,EAEjBE,EAAM,CACJ,MAAO,cACP,YAAa,qCAAA,CACd,EAGDgD,EAAU,CAAC,EACXI,EAAW,EAAE,EACbP,GAAA,MAAAA,GACF,OAAS/C,EAAO,CACVA,aAAiBwD,EACnBtD,EAAM,CACJ,MAAO,uBACP,YAAaF,EAAM,OAAO,CAAC,EAAE,QAC7B,QAAS,aAAA,CACV,EACQA,aAAiB,QACtBA,EAAM,QAAQ,SAAS,yBAAyB,EAClDE,EAAM,CACJ,MAAO,qBACP,YAAa,oDACb,QAAS,aAAA,CACV,EAEDA,EAAM,CACJ,MAAO,SACP,YAAaF,EAAM,QACnB,QAAS,aAAA,CACV,EAGP,QAAA,CACEH,EAAW,EAAK,CAClB,CACF,EAEA,cACG+B,EAAA,CACC,SAAA,CAAAxB,OAAC0B,EAAA,CACC,SAAA,CAAAxB,EAAAA,IAACyB,GAAU,SAAA,iBAAA,CAAe,SACzBG,EAAA,CAAgB,SAAA,CAAA,kCACiBW,CAAA,CAAA,CAClC,CAAA,EACF,QACChB,EAAA,CACC,SAAAzB,OAAC,QAAK,SAAUL,EAAc,UAAU,YACtC,SAAA,CAAAK,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAE,EAAAA,IAACY,GAAM,SAAA,MAAA,CAAI,EACXZ,EAAAA,IAAC,MAAA,CAAI,UAAU,aACZ,SAAA,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKmD,GACpBnD,EAAAA,IAAC,SAAA,CAEC,KAAK,SACL,QAAS,IAAM4C,EAAUO,CAAI,EAC7B,aAAc,IAAML,EAAiBK,CAAI,EACzC,aAAc,IAAML,EAAiB,CAAC,EACtC,UAAU,uCAEV,SAAA9C,EAAAA,IAACoD,GAAA,CACC,UAAW,WACTD,IAASN,GAAiBF,GACtB,kCACA,eACN,EAAA,CAAA,CACF,EAbKQ,CAAA,CAeR,EACH,EACCR,EAAS,GACR7C,OAAC,IAAA,CAAE,UAAU,gCACV,SAAA,CAAA6C,IAAW,GAAK,YAChBA,IAAW,GAAK,YAChBA,IAAW,GAAK,OAChBA,IAAW,GAAK,WAChBA,IAAW,GAAK,UAAA,CAAA,CACnB,CAAA,EAEJ,EAEA7C,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAACc,EAAA,CAAM,QAAQ,UAAU,SAAA,CAAA,eACXZ,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,aAAA,CAAW,CAAA,EACjE,EACAA,EAAAA,IAACa,GAAA,CACC,GAAG,UACH,MAAOkC,EACP,SAAWjC,GAAMkC,EAAWlC,EAAE,OAAO,KAAK,EAC1C,YAAY,+BACZ,KAAM,EACN,UAAW,GAAA,CAAA,EAEbhB,EAAAA,KAAC,IAAA,CAAE,UAAU,gCACV,SAAA,CAAAiD,EAAQ,OAAO,kBAAA,CAAA,CAClB,CAAA,EACF,EAEA/C,EAAAA,IAACE,EAAA,CAAO,KAAK,SAAS,SAAUZ,GAAWqD,IAAW,EACnD,SAAArD,EAAU,iBAAmB,gBAAA,CAChC,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ,EClKM+D,GAAqB,CACzB,kBACA,aACA,YACA,aACA,qBACA,yEACF,EAEMC,GAAaC,GAAgBC,GAAQA,aAAeC,GAAM,CAC9D,QAASC,EAAe,cAC1B,CAAC,EACA,OAAQC,GAASA,EAAK,MAAQC,GAAY,kBAAmBF,EAAe,kBAAkB,EAC9F,OAAQC,GAASN,GAAmB,SAASM,EAAK,IAAI,EAAGD,EAAe,iBAAiB,EAEpFG,GAAiB5B,GAAS,CAC9B,KAAMqB,GACN,aAAcnB,EAAE,EAAS,IAAI,EAAGuB,EAAe,cAAc,EAC7D,KAAMvB,EAAE,EACL,IAAI2B,EAAkB,gBAAiB,iCAAiCA,EAAkB,eAAe,aAAa,EACtH,IAAIA,EAAkB,gBAAiB,+BAA+BA,EAAkB,eAAe,aAAa,CACzH,CAAC,EAOKC,GAAiB,CACrB,CAAE,MAAO,iBAAkB,MAAO,iBAAA,EAClC,CAAE,MAAO,eAAgB,MAAO,yBAAA,EAChC,CAAE,MAAO,gBAAiB,MAAO,0BAAA,EACjC,CAAE,MAAO,eAAgB,MAAO,oBAAA,EAChC,CAAE,MAAO,kBAAmB,MAAO,2BAAA,EACnC,CAAE,MAAO,YAAa,MAAO,yBAAA,EAC7B,CAAE,MAAO,oBAAqB,MAAO,kBAAA,EACrC,CAAE,MAAO,eAAgB,MAAO,yBAAA,EAChC,CAAE,MAAO,sBAAuB,MAAO,oBAAA,EACvC,CAAE,MAAO,QAAS,MAAO,OAAA,CAC3B,EAEaC,GAAiB,CAAC,CAAE,QAAApF,EAAS,gBAAAqF,KAA2C,CACnF,KAAM,CAAE,KAAAlF,CAAA,EAASC,EAAA,EACX,CAAE,MAAAY,CAAA,EAAU8C,EAAA,EACZ,CAACiB,EAAMO,CAAO,EAAI/E,EAAAA,SAAsB,IAAI,EAC5C,CAACgF,EAAcC,CAAe,EAAIjF,EAAAA,SAAS,EAAE,EAC7C,CAACkF,EAAcC,CAAe,EAAInF,EAAAA,SAAS,EAAE,EAC7C,CAACoF,EAAWC,CAAY,EAAIrF,EAAAA,SAAS,EAAK,EAC1C,CAACsF,EAAgBC,CAAiB,EAAIvF,EAAAA,SAAS,CAAC,EAEhDwF,EAAeC,GACfA,EAAS,WAAW,QAAQ,EAAUC,GACtCD,IAAa,kBAA0BE,EACpCrB,GAGHsB,EAAoBjE,GAA2C,OACnE,MAAMkE,GAAeC,EAAAnE,EAAE,OAAO,QAAT,YAAAmE,EAAiB,GACtC,GAAKD,EAEL,GAAI,CACF1B,GAAW,MAAM0B,CAAY,EAC7Bd,EAAQc,CAAY,EACfX,GACHC,EAAgBU,EAAa,KAAK,QAAQ,YAAa,EAAE,CAAC,CAE9D,OAAStF,EAAO,CACVA,aAAiBwD,GACnBtD,EAAM,CACJ,MAAO,mBACP,YAAaF,EAAM,OAAO,CAAC,EAAE,QAC7B,QAAS,aAAA,CACV,CAEL,CACF,EAEMwF,EAAe,SAAY,CAC/B,GAAI,GAACvB,GAAQ,CAAC5E,GAEd,GAAI,CAEF,MAAMkE,EAAgBY,GAAe,MAAM,CACzC,KAAAF,EACA,aAAAQ,EACA,KAAME,CAAA,CACP,EAEDG,EAAa,EAAI,EACjBE,EAAkB,CAAC,EAGnB,MAAMS,EAAUxB,EAAK,KAAK,MAAM,GAAG,EAAE,IAAA,EAC/ByB,EAAW,GAAGxG,CAAO,IAAI,KAAK,KAAK,IAAIyF,CAAY,IAAIc,CAAO,GAE9D,CAAE,KAAME,EAAY,MAAOC,GAAgB,MAAM3F,EAAS,QAC7D,KAAK,iBAAiB,EACtB,OAAOyF,EAAUzB,EAAM,CACtB,aAAc,OACd,OAAQ,EAAA,CACT,EAEH,GAAI2B,EAAa,MAAMA,EAEvBZ,EAAkB,EAAE,EAGpB,KAAM,CAAE,KAAM,CAAE,UAAAa,CAAA,GAAgB5F,EAAS,QACtC,KAAK,iBAAiB,EACtB,aAAayF,CAAQ,EAGlB,CAAE,MAAOI,IAAY,MAAM7F,EAAS,KAAK,iBAAiB,EAAE,OAAO,CACvE,SAAUf,EACV,cAAeqE,EAAc,aAC7B,KAAMA,EAAc,KACpB,SAAUsC,EACV,UAAW5B,EAAK,KAChB,UAAWA,EAAK,KAChB,YAAa5E,EAAK,GAClB,OAAQ,SAAA,CACT,EAED,GAAIyG,GAAS,MAAMA,GAEnBd,EAAkB,GAAG,EAErB9E,EAAM,CACJ,MAAO,mBACP,YAAa,sCAAA,CACd,EAGDsE,EAAQ,IAAI,EACZE,EAAgB,EAAE,EAClBE,EAAgB,EAAE,EAClBI,EAAkB,CAAC,EAEnBT,GAAA,MAAAA,GACF,OAASvE,EAAO,CACVA,aAAiBwD,EACnBtD,EAAM,CACJ,MAAO,uBACP,YAAaF,EAAM,OAAO,CAAC,EAAE,QAC7B,QAAS,aAAA,CACV,EACQA,aAAiB,OAC1BE,EAAM,CACJ,MAAO,SACP,YAAaF,EAAM,QACnB,QAAS,aAAA,CACV,CAEL,QAAA,CACE8E,EAAa,EAAK,CACpB,CACF,EAEMiB,EAAW9B,EAAOgB,EAAYhB,EAAK,IAAI,EAAI+B,EAEjD,OACE5F,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAE,EAAAA,IAACY,EAAA,CAAM,QAAQ,cAAc,SAAA,UAAO,EACpCd,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAE,EAAAA,IAAC2F,GAAA,CACC,GAAG,cACH,KAAK,OACL,OAAO,wCACP,SAAUZ,EACV,SAAUR,EACV,UAAU,QAAA,CAAA,EAEZzE,EAAAA,KAACI,EAAA,CACC,KAAK,SACL,QAAQ,UACR,UAAU,SACV,QAAS,IAAA,OAAM,OAAA+E,EAAA,SAAS,eAAe,aAAa,IAArC,YAAAA,EAAwC,SACvD,SAAUV,EAEV,SAAA,CAAAvE,EAAAA,IAAC0F,EAAA,CAAO,UAAU,cAAA,CAAe,EAChC/B,EAAO,qBAAuB,yBAAA,CAAA,CAAA,CACjC,EACF,EAECA,GACC7D,EAAAA,KAAC,MAAA,CAAI,UAAU,4DACb,SAAA,CAAAE,EAAAA,IAACyF,EAAA,CAAS,UAAU,+BAAA,CAAgC,EACpD3F,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,+BAAgC,SAAA2D,EAAK,KAAK,EACvD7D,EAAAA,KAAC,IAAA,CAAE,UAAU,gCACT,SAAA,EAAA6D,EAAK,KAAO,KAAO,MAAM,QAAQ,CAAC,EAAE,KAAA,CAAA,CACxC,CAAA,EACF,EACA3D,EAAAA,IAACE,EAAA,CACC,KAAK,SACL,QAAQ,QACR,KAAK,OACL,QAAS,IAAMgE,EAAQ,IAAI,EAC3B,SAAUK,EAEV,SAAAvE,EAAAA,IAAC4F,GAAA,CAAE,UAAU,SAAA,CAAU,CAAA,CAAA,CACzB,CAAA,CACF,CAAA,EAEJ,EAGA9F,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAE,EAAAA,IAACY,EAAA,CAAM,QAAQ,gBAAgB,SAAA,mBAAgB,SAC9CiF,GAAA,CAAO,MAAO1B,EAAc,cAAeC,EAAiB,SAAUG,EACrE,SAAA,CAAAvE,MAAC8F,GAAA,CACC,SAAA9F,EAAAA,IAAC+F,GAAA,CAAY,YAAY,uBAAuB,EAClD,QACCC,GAAA,CACE,SAAAjC,GAAe,IAAKkC,GACnBjG,EAAAA,IAACkG,GAAA,CAA4B,MAAOD,EAAK,MACtC,SAAAA,EAAK,OADSA,EAAK,KAEtB,CACD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,EACF,EAGAnG,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAE,EAAAA,IAACY,EAAA,CAAM,QAAQ,gBAAgB,SAAA,kBAAe,EAC9CZ,EAAAA,IAAC2F,GAAA,CACC,GAAG,gBACH,MAAOtB,EACP,SAAWvD,GAAMwD,EAAgBxD,EAAE,OAAO,KAAK,EAC/C,YAAY,2BACZ,UAAW,IACX,SAAUyD,CAAA,CAAA,CACZ,EACF,EAGCA,GACCzE,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAE,EAAAA,IAACmG,GAAA,CAAS,MAAO1B,CAAA,CAAgB,EACjC3E,EAAAA,KAAC,IAAA,CAAE,UAAU,4CAA4C,SAAA,CAAA,sBACnC2E,EAAe,GAAA,CAAA,CACrC,CAAA,EACF,EAIFzE,EAAAA,IAACE,EAAA,CACC,QAASgF,EACT,SAAU,CAACvB,GAAQ,CAACQ,GAAgB,CAACE,GAAgBE,EACrD,UAAU,SAET,WAAY,qBAAuB,sBAAA,CAAA,EAGtCvE,EAAAA,IAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,6DAAA,CAE7C,CAAA,EACF,CAEJ,EC1OMoG,GAA+C,CACnD,eAAgB,kBAChB,aAAc,0BACd,cAAe,2BACf,aAAc,qBACd,gBAAiB,4BACjB,UAAW,0BACX,kBAAmB,mBACnB,aAAc,0BACd,oBAAqB,qBACrB,MAAO,OACT,EAEMC,EAAqB,CACzB,iBACA,eACA,YACA,mBACF,EAEaC,GAAkB,CAAC,CAAE,QAAA1H,EAAS,WAAA2H,EAAY,SAAAC,KAAqC,CAC1F,KAAM,CAAE,KAAAzH,CAAA,EAASC,EAAA,EACX,CAAE,MAAAY,CAAA,EAAU8C,EAAA,EACZ,CAAC+D,EAAWC,CAAY,EAAIvH,EAAAA,SAA0B,CAAA,CAAE,EACxD,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAI,EACrC,CAACwH,EAAkBC,CAAmB,EAAIzH,EAAAA,SAAS,EAAK,EAE9DgC,EAAAA,UAAU,IAAM,CACd0F,EAAA,CACF,EAAG,CAACjI,CAAO,CAAC,EAEZ,MAAMiI,EAAiB,SAAY,CACjC,GAAI,CACF,KAAM,CAAE,KAAAxF,EAAM,MAAA3B,GAAU,MAAMC,EAC3B,KAAK,iBAAiB,EACtB,OAAO;AAAA;AAAA;AAAA,SAGP,EACA,GAAG,WAAYf,CAAO,EACtB,MAAM,aAAc,CAAE,UAAW,GAAO,EAE3C,GAAIc,EAAO,MAAMA,EAGjB,MAAMoH,GAAkBzF,GAAA,YAAAA,EAAM,IAAK0F,IAAc,CAC/C,GAAGA,EACH,SAAU,MAAM,QAAQA,EAAI,QAAQ,EAAIA,EAAI,SAAS,CAAC,EAAIA,EAAI,QAAA,MACzD,CAAA,EAEPL,EAAaI,CAAe,CAC9B,OAASpH,EAAO,CACdG,EAAO,SAASH,EAAO,CAAE,QAAS,kBAAmB,OAAQ,QAAS,CACxE,QAAA,CACEH,EAAW,EAAK,CAClB,CACF,EAEMyH,EAAiB,MAAOC,EAAiB7B,IAAqB,CAClE,GAAI,CAEF,MAAM8B,EAAO,MADI,MAAM,MAAMD,CAAO,GACR,KAAA,EACtBE,EAAM,OAAO,IAAI,gBAAgBD,CAAI,EACrCE,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOD,EACTC,EAAE,SAAWhC,EACb,SAAS,KAAK,YAAYgC,CAAC,EAC3BA,EAAE,MAAA,EACF,OAAO,IAAI,gBAAgBD,CAAG,EAC9B,SAAS,KAAK,YAAYC,CAAC,CAC7B,MAAgB,CACdxH,EAAM,CACJ,MAAO,SACP,YAAa,uCACb,QAAS,aAAA,CACV,CACH,CACF,EAEMyH,EAAe,MAAOC,EAAoBL,IAAoB,CAClE,GAAK,QAAQ,kDAAkD,EAE/D,GAAI,CAGF,MAAMM,EADWN,EAAQ,MAAM,mBAAmB,EACxB,CAAC,EAGvBM,GACF,MAAM5H,EAAS,QAAQ,KAAK,iBAAiB,EAAE,OAAO,CAAC4H,CAAQ,CAAC,EAIlE,KAAM,CAAE,MAAA7H,CAAA,EAAU,MAAMC,EACrB,KAAK,iBAAiB,EACtB,OAAA,EACA,GAAG,KAAM2H,CAAU,EAEtB,GAAI5H,EAAO,MAAMA,EAEjBE,EAAM,CACJ,MAAO,oBACP,YAAa,wCAAA,CACd,EAEDiH,EAAA,CACF,MAAgB,CACdjH,EAAM,CACJ,MAAO,SACP,YAAa,sCACb,QAAS,aAAA,CACV,CACH,CACF,EAEM4H,EAAkBC,GAAmB,CACzC,OAAQA,EAAA,CACN,IAAK,WACH,OAAO3H,EAAAA,KAAC4H,EAAA,CAAM,UAAU,eAAe,SAAA,CAAA1H,EAAAA,IAAC0B,EAAA,CAAa,UAAU,cAAA,CAAe,EAAE,UAAA,EAAQ,EAC1F,IAAK,WACH,OAAO5B,EAAAA,KAAC4H,EAAA,CAAM,QAAQ,cAAc,SAAA,CAAA1H,EAAAA,IAAC2B,EAAA,CAAQ,UAAU,cAAA,CAAe,EAAE,QAAA,EAAM,EAChF,QACE,OAAO7B,EAAAA,KAAC4H,EAAA,CAAM,QAAQ,YAAY,SAAA,CAAA1H,EAAAA,IAAC2H,EAAA,CAAM,UAAU,cAAA,CAAe,EAAE,YAAA,EAAU,CAAA,CAEpF,EAOMC,GALsB,IAAM,CAChC,MAAMC,EAAgBpB,EAAU,IAAIqB,GAAKA,EAAE,aAAa,EACxD,OAAOzB,EAAmB,OAAOJ,GAAQ,CAAC4B,EAAc,SAAS5B,CAAI,CAAC,CACxE,GAEoB,EACd8B,GAAmB1B,EAAmB,OAASuB,EAAY,QAAUvB,EAAmB,OAAU,IAExG,OAAI/G,QAECgC,EAAA,CACC,SAAAtB,EAAAA,IAACuB,EAAA,CAAY,UAAU,MACrB,SAAAvB,MAAC,MAAA,CAAI,UAAU,mCACb,eAAC,MAAA,CAAI,UAAU,6DAAA,CAA8D,EAC/E,EACF,CAAA,CACF,EAKFF,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,OAACwB,EAAA,CACC,SAAA,CAAAxB,OAAC0B,EAAA,CACC,SAAA,CAAA1B,EAAAA,KAAC2B,EAAA,CAAU,UAAU,0BACnB,SAAA,CAAAzB,EAAAA,IAACgI,GAAA,CAAY,UAAU,SAAA,CAAU,EAAE,wBAAA,EAErC,SACCpG,EAAA,CAAgB,SAAA,CAAA,eACFmG,EAAe,QAAQ,CAAC,EAAE,MAAI1B,EAAmB,OAASuB,EAAY,OAAO,IAAEvB,EAAmB,OAAO,GAAA,CAAA,CACxH,CAAA,EACF,EACArG,EAAAA,IAACuB,GACC,SAAAvB,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAAqG,EAAmB,IAAIJ,GAAQ,CAC9B,MAAMgC,EAAaxB,EAAU,KAAKqB,GAAKA,EAAE,gBAAkB7B,CAAI,EAC/D,OACEnG,EAAAA,KAAC,MAAA,CAAe,UAAU,0DACxB,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAAmI,EACCjI,EAAAA,IAAC0B,GAAa,UAAU,wBAAA,CAAyB,EAEjD1B,EAAAA,IAAC2B,EAAA,CAAQ,UAAU,+BAAA,CAAgC,EAErD3B,MAAC,QAAK,UAAWiI,EAAa,cAAgB,wBAC3C,SAAA7B,GAAqBH,CAAI,CAAA,CAC5B,CAAA,EACF,EACCgC,GACCnI,EAAAA,KAAC4H,EAAA,CAAM,QAAQ,UAAU,UAAU,cACjC,SAAA,CAAA1H,EAAAA,IAAC0B,EAAA,CAAa,UAAU,cAAA,CAAe,EAAE,SAAA,CAAA,CAE3C,CAAA,CAAA,EAfMuE,CAiBV,CAEJ,CAAC,EACH,CAAA,CACF,CAAA,EACF,SAGC3E,EAAA,CACC,SAAA,CAAAtB,MAACwB,EAAA,CACC,SAAA1B,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAE,EAAAA,IAACyB,GAAU,SAAA,mBAAA,CAAiB,SAC3BG,EAAA,CACE,SAAA,CAAA6E,EAAU,OAAO,YAAUA,EAAU,OAAS,EAAI,IAAM,GAAG,WAASA,EAAU,OAAS,EAAI,IAAM,EAAA,CAAA,CACpG,CAAA,EACF,EACA3G,EAAAA,KAACC,EAAA,CAAO,KAAM4G,EAAkB,aAAcC,EAC5C,SAAA,CAAA5G,MAACC,EAAA,CAAc,QAAO,GACpB,SAAAH,EAAAA,KAACI,EAAA,CACC,SAAA,CAAAF,EAAAA,IAAC0F,EAAA,CAAO,UAAU,cAAA,CAAe,EAAE,qBAAA,CAAA,CAErC,CAAA,CACF,SACCtF,EAAA,CACC,SAAA,CAAAN,OAACO,GAAA,CACC,SAAA,CAAAL,EAAAA,IAACM,IAAY,SAAA,sBAAA,CAAoB,EACjCN,EAAAA,IAACO,IAAkB,SAAA,+BAAA,CAEnB,CAAA,EACF,EACAP,EAAAA,IAACgE,GAAA,CACC,QAAApF,EACA,gBAAiB,IAAM,CACrBiI,EAAA,EACAD,EAAoB,EAAK,CAC3B,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EACA5G,EAAAA,IAACuB,EAAA,CACC,SAAAvB,EAAAA,IAACkI,GAAA,CAAW,UAAU,YACnB,SAAAzB,EAAU,SAAW,EACpB3G,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAE,EAAAA,IAAC8E,EAAA,CAAS,UAAU,mCAAA,CAAoC,EACxD9E,EAAAA,IAAC,KAAE,SAAA,wBAAA,CAAsB,CAAA,CAAA,CAC3B,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAAyG,EAAU,IAAKM,GAAA,OACdjH,OAAAA,OAAC,MAAA,CAAiB,UAAU,6FAC1B,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,gCACb,SAAA,CAAAE,EAAAA,IAAC8E,EAAA,CAAS,UAAU,6BAAA,CAA8B,EAClDhF,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAe,SAAA+G,EAAI,KAAK,EACpCS,EAAeT,EAAI,MAAM,CAAA,EAC5B,QACC,IAAA,CAAE,UAAU,gCACV,SAAAX,GAAqBW,EAAI,aAAa,EACzC,EACAjH,EAAAA,KAAC,MAAA,CAAI,UAAU,6DACb,SAAA,CAAAA,OAAC,OAAA,CAAK,SAAA,CAAA,SAAKmF,EAAA8B,EAAI,WAAJ,YAAA9B,EAAc,YAAa,SAAA,EAAU,EAChDjF,EAAAA,IAAC,QAAK,SAAA,GAAA,CAAC,QACN,OAAA,CACE,SAAAmI,GAAoB,IAAI,KAAKpB,EAAI,UAAU,EAAG,CAC7C,UAAW,GACX,OAAQqB,EAAA,CACT,EACH,EACCrB,EAAI,WACHjH,EAAAA,KAAAuI,EAAAA,SAAA,CACE,SAAA,CAAArI,EAAAA,IAAC,QAAK,SAAA,GAAA,CAAC,SACN,OAAA,CAAO,SAAA,EAAA+G,EAAI,UAAY,KAAO,MAAM,QAAQ,CAAC,EAAE,KAAA,CAAA,CAAG,CAAA,CAAA,CACrD,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,EACF,EACAjH,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAE,EAAAA,IAACE,EAAA,CACC,QAAQ,QACR,KAAK,OACL,QAAS,IAAM,OAAO,KAAK6G,EAAI,SAAU,QAAQ,EAEjD,SAAA/G,EAAAA,IAACsI,GAAA,CAAI,UAAU,SAAA,CAAU,CAAA,CAAA,EAE3BtI,EAAAA,IAACE,EAAA,CACC,QAAQ,QACR,KAAK,OACL,QAAS,IAAM8G,EAAeD,EAAI,SAAUA,EAAI,IAAI,EAEpD,SAAA/G,EAAAA,IAACuI,GAAA,CAAS,UAAU,SAAA,CAAU,CAAA,CAAA,GAE/BxJ,GAAA,YAAAA,EAAM,MAAOgI,EAAI,aAChB/G,EAAAA,IAACE,EAAA,CACC,QAAQ,QACR,KAAK,OACL,QAAS,IAAMmH,EAAaN,EAAI,GAAIA,EAAI,QAAQ,EAEhD,SAAA/G,EAAAA,IAACwI,GAAA,CAAO,UAAU,SAAA,CAAU,CAAA,CAAA,CAC9B,CAAA,CAEJ,CAAA,CAAA,EArDQzB,EAAI,EAsDd,EACD,CAAA,CACH,EAEJ,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ,EC9QA,SAAwB0B,IAAS,CAC/B,KAAM,CAAE,KAAA1J,EAAM,QAAA2J,CAAA,EAAY1J,EAAA,EACpB2J,EAAWC,GAAA,EACX,CAAE,MAAAhJ,CAAA,EAAU8C,EAAA,EACZ,CAACmG,EAAQC,CAAS,EAAI3J,EAAAA,SAAkB,CAAA,CAAE,EAC1C,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAI,EACrC,CAAC4J,EAAeC,CAAgB,EAAI7J,EAAAA,SAAwB,IAAI,EAEtEgC,EAAAA,UAAU,IAAM,CACVpC,GACFkK,EAAA,CAEJ,EAAG,CAAClK,CAAI,CAAC,EAET,MAAMkK,EAAc,SAAY,CAC9B,GAAI,CAEF,KAAM,CAAE,KAAA5H,EAAM,MAAA3B,GAAU,MAAMC,EAC3B,KAAK,QAAQ,EACb,OAAO;AAAA;AAAA;AAAA,SAGP,EACA,GAAG,kBAAkBZ,GAAA,YAAAA,EAAM,EAAE,iBAAiBA,GAAA,YAAAA,EAAM,EAAE,EAAE,EACxD,MAAM,aAAc,CAAE,UAAW,GAAO,EAE3C,GAAIW,EAAO,MAAMA,EAGjB,MAAMwJ,EAAqB,MAAM,QAAQ,KACtC7H,GAAQ,CAAA,GAAI,IAAI,MAAO8H,GAAU,CAChC,KAAM,CAAE,KAAMC,CAAA,EAAe,MAAMzJ,EAChC,KAAK,UAAU,EACf,OAAO,WAAW,EAClB,GAAG,KAAMwJ,EAAM,SAAS,EACxB,OAAA,EAEG,CAAE,KAAME,CAAA,EAAiB,MAAM1J,EAClC,KAAK,UAAU,EACf,OAAO,WAAW,EAClB,GAAG,KAAMwJ,EAAM,WAAW,EAC1B,OAAA,EAEH,MAAO,CACL,GAAGA,EACH,OAAQC,EACR,SAAUC,CAAA,CAEd,CAAC,CAAA,EAGHP,EAAUI,CAAwC,CACpD,OAASxJ,EAAO,CACdG,EAAO,MAAM,wBAAyB,CAAE,MAAAH,EAAO,OAAQX,GAAA,YAAAA,EAAM,GAAI,EACjEa,EAAM,CACJ,MAAO,SACP,YAAaF,aAAiB,MAAQA,EAAM,QAAU,4BACtD,QAAS,aAAA,CACV,CACH,QAAA,CACEH,EAAW,EAAK,CAClB,CACF,EA6BM+J,EAAoB,MAAO1K,GAAoB,CACnD,GAAI,CACFoK,EAAiBpK,CAAO,EAExB,KAAM,CAAE,KAAAyC,EAAM,MAAA3B,CAAA,EAAU,MAAMC,EAAS,UAAU,OAAO,qBAAsB,CAC5E,KAAM,CAAE,QAAAf,CAAA,CAAQ,CACjB,EAED,GAAIc,EAAO,MAAMA,EAGb2B,GAAA,MAAAA,EAAM,cACR,OAAO,KAAKA,EAAK,YAAa,QAAQ,EACtCzB,EAAM,CACJ,MAAO,iBACP,YAAa,yCAAA,CACd,EACDqJ,EAAA,EAEJ,OAASvJ,EAAO,CACdG,EAAO,MAAM,uBAAwB,CAAE,MAAAH,EAAO,QAAAd,EAAS,EACvDgB,EAAM,CACJ,MAAO,SACP,YAAaF,aAAiB,MAAQA,EAAM,QAAU,+BACtD,QAAS,aAAA,CACV,CACH,QAAA,CACEsJ,EAAiB,IAAI,CACvB,CACF,EAEMxB,EAAkB2B,GAGJnJ,EAAAA,IAACuJ,GAAA,CACC,OAAQJ,EAAM,qBACd,YAAaA,EAAM,kBAAA,CAAA,EAKzC,OAAI7J,EAEAQ,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAE,EAAAA,IAACwJ,GAAA,EAAO,QACP,MAAA,CAAI,UAAU,8BACb,SAAAxJ,MAAC,IAAA,CAAE,yBAAa,CAAA,CAClB,QACCyJ,GAAA,CAAA,CAAO,CAAA,EACV,EAKF3J,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAE,EAAAA,IAACwJ,GAAA,EAAO,EACR1J,EAAAA,KAAC,OAAA,CAAK,UAAU,oCACd,SAAA,CAAAE,EAAAA,IAAC0J,GAAA,EAAkB,EAEnB5J,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAG,UAAU,0BAA0B,SAAA,WAAQ,EAChDA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,2DAAA,CAErC,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,aACZ,SAAA6I,EAAO,SAAW,EACjB7I,EAAAA,IAACsB,EAAA,CACC,SAAAxB,EAAAA,KAACyB,EAAA,CAAY,UAAU,kBACrB,SAAA,CAAAvB,EAAAA,IAAC8E,EAAA,CAAS,UAAU,8CAAA,CAA+C,EACnE9E,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,mBAAA,CAAiB,CAAA,EACxD,EACF,EAEA6I,EAAO,IAAKM,4BACT7H,EAAA,CACC,SAAA,CAAAtB,MAACwB,EAAA,CACC,SAAA1B,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAE,MAACyB,EAAA,CAAU,UAAU,OAAQ,SAAA0H,EAAM,WAAW,MAAM,EACpDrJ,EAAAA,KAAC,MAAA,CAAI,UAAU,6DACb,SAAA,CAAAE,EAAAA,IAAC2J,GAAA,CAAO,UAAU,SAAA,CAAU,EAC3BR,EAAM,WAAW,QAAQ,KAAGA,EAAM,WAAW,IAAA,EAChD,EACArJ,EAAAA,KAAC,MAAA,CAAI,UAAU,kBACZ,SAAA,CAAA0H,EAAe2B,CAAK,EACrBnJ,EAAAA,IAAC0H,EAAA,CAAM,QAAQ,UAAW,WAAM,UAAA,CAAW,CAAA,CAAA,CAC7C,CAAA,EACF,EACCyB,EAAM,WAAW,YAChBnJ,EAAAA,IAAC,MAAA,CACC,IAAKmJ,EAAM,WAAW,WACtB,IAAKA,EAAM,WAAW,MACtB,UAAU,mCAAA,CAAA,CACZ,CAAA,CAEJ,CAAA,CACF,EAEArJ,EAAAA,KAAC8J,GAAA,CAAK,aAAa,UAAU,UAAU,SACrC,SAAA,CAAA9J,EAAAA,KAAC+J,GAAA,CAAS,UAAU,+BAClB,SAAA,CAAA7J,EAAAA,IAAC8J,GAAA,CAAY,MAAM,UAAU,SAAA,UAAO,EACpChK,EAAAA,KAACgK,GAAA,CAAY,MAAM,YACjB,SAAA,CAAA9J,EAAAA,IAAC+J,GAAA,CAAO,UAAU,cAAA,CAAe,EAAE,WAAA,CAAA,CAErC,CAAA,EACF,EAEA/J,MAACgK,GAAA,CAAY,MAAM,UACrB,gBAACzI,EAAA,CACC,SAAA,CAAAzB,EAAAA,KAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAE,EAAAA,IAACiK,GAAA,CAAW,UAAU,+BAAA,CAAgC,EACtDnK,EAAAA,KAAC,OAAA,CAAK,UAAU,gBACb,SAAA,CAAAqJ,EAAM,aAAa,eAAA,EAAiB,YAAA,CAAA,CACvC,CAAA,EACF,EACArJ,EAAAA,KAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,CAAA,YACrCmF,EAAAkE,EAAM,iBAAN,YAAAlE,EAAsB,mBAAoB,EAAE,OAAA,EACtD,EACCkE,EAAM,gBACLrJ,OAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,CAAA,YACnCqJ,EAAM,eAAe,eAAA,EAAiB,OAAA,CAAA,CAClD,CAAA,EAEJ,EACAnJ,MAAC,MAAA,CACC,SAAAF,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAE,EAAAA,IAACkK,GAAA,CAAS,UAAU,+BAAA,CAAgC,EACpDpK,EAAAA,KAAC,OAAA,CAAK,UAAU,UAAU,SAAA,CAAA,MACpB,IAAI,KAAKqJ,EAAM,UAAU,EAAE,mBAAA,EAAqB,MAAI,IACvD,IAAI,KAAKA,EAAM,QAAQ,EAAE,mBAAA,CAAmB,CAAA,CAC/C,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAEArJ,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,kCACZ,SAAA,CAAAqJ,EAAM,yBACJgB,EAAA,CAAY,UAAU,yBAAyB,EAEhDnK,EAAAA,IAAC2H,EAAA,CAAM,UAAU,yBAAA,CAA0B,SAE5C,OAAA,CAAK,SAAA,CAAA,0BACoB,IACvBwB,EAAM,mBACH,IAAI,KAAKA,EAAM,kBAAkB,EAAE,qBACnC,YAAA,CAAA,CACN,CAAA,EACF,EACArJ,EAAAA,KAAC,MAAA,CAAI,UAAU,kCACZ,SAAA,CAAAqJ,EAAM,uBACJgB,EAAA,CAAY,UAAU,yBAAyB,EAEhDnK,EAAAA,IAAC2H,EAAA,CAAM,UAAU,yBAAA,CAA0B,SAE5C,OAAA,CAAK,SAAA,CAAA,uBACiB,IACpBwB,EAAM,iBACH,IAAI,KAAKA,EAAM,gBAAgB,EAAE,qBACjC,YAAA,CAAA,CACN,CAAA,EACF,EACCA,EAAM,oBACLrJ,OAAC,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAE,EAAAA,IAACmK,EAAA,CAAY,UAAU,wBAAA,CAAyB,SAC/C,OAAA,CAAK,SAAA,CAAA,oBACc,IACjB,IAAI,KAAKhB,EAAM,kBAAkB,EAAE,mBAAA,CAAmB,CAAA,CACzD,CAAA,EACF,EAEDA,EAAM,0BACLrJ,OAAC,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAE,EAAAA,IAACG,EAAA,CAAO,UAAU,uBAAA,CAAwB,EAC1CH,EAAAA,IAAC,OAAA,CAAK,UAAU,+CAA+C,SAAA,sCAAA,CAE/D,CAAA,CAAA,CACF,CAAA,EAEJ,IAGG0I,GAAA,YAAAA,EAAS,aAAc,gBAAkB,CAACS,EAAM,qBAChDT,GAAA,YAAAA,EAAS,aAAc,aAAe,CAACS,EAAM,mBAC9CnJ,MAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAACoK,GAAA,CACC,MAAAjB,EACA,UAAUT,GAAA,YAAAA,EAAS,aAAc,eAAiB,eAAiB,YACnE,oBAAqBO,CAAA,CAAA,EAEzB,EAGFnJ,EAAAA,KAAC,MAAA,CAAI,UAAU,uBAEZ,SAAA,CAAAqJ,EAAM,kBAAoBA,EAAM,oBAC/BnJ,EAAAA,IAAAqI,EAAAA,SAAA,CAEG,WAAM,oBACLvI,EAAAA,KAACI,EAAA,CACC,QAAS,IAAM,OAAO,KAAKiJ,EAAM,oBAAsB,QAAQ,EAC/D,UAAU,QAEV,SAAA,CAAAnJ,EAAAA,IAACG,EAAA,CAAO,UAAU,SAAA,CAAU,EAAE,gCAAA,CAAA,CAAA,EAG9BgJ,EAAM,aACRrJ,EAAAA,KAACI,EAAA,CACC,QAAQ,UACR,QAAS,IAAM,OAAO,KAAKiJ,EAAM,aAAe,QAAQ,EAExD,SAAA,CAAAnJ,EAAAA,IAACuI,GAAA,CAAS,UAAU,cAAA,CAAe,EAAE,wBAAA,CAAA,CAAA,EAIvCzI,EAAAA,KAACI,EAAA,CACC,QAAQ,UACR,QAAS,IAAMoJ,EAAkBH,EAAM,EAAE,EACzC,SAAUJ,IAAkBI,EAAM,GAEjC,SAAA,CAAAJ,IAAkBI,EAAM,GACvBnJ,EAAAA,IAACe,EAAA,CAAQ,UAAU,4BAA4B,EAE/Cf,EAAAA,IAACqK,EAAA,CAAa,UAAU,cAAA,CAAe,EAExCtB,IAAkBI,EAAM,GAAK,gBAAkB,oBAAA,CAAA,CAAA,EAGtD,EAIDA,EAAM,kBAAoBA,EAAM,oBAAsBA,EAAM,uBAAyB,iBACpFnJ,EAAAA,IAAC,MAAA,CAAI,UAAU,cACb,SAAAA,EAAAA,IAACgB,GAAA,CAA0B,QAASmI,EAAM,GAAI,EAChD,EAIDA,EAAM,kBAAoBA,EAAM,oBAC/BnJ,EAAAA,IAACrB,GAAA,CACC,QAASwK,EAAM,GACf,oBAAqBA,EAAM,qBAC3B,mBAAoBF,CAAA,CAAA,EAIxBnJ,EAAAA,KAACI,EAAA,CACC,QAAQ,UACR,QAAS,IAAMyI,EAAS,mBAAmBQ,EAAM,EAAE,EAAE,EAErD,SAAA,CAAAnJ,EAAAA,IAACiK,GAAA,CAAW,UAAU,cAAA,CAAe,EAAE,WAAA,CAAA,CAAA,EAKxCd,EAAM,SAAW,UAChBrJ,EAAAA,KAACC,EAAA,CACC,SAAA,CAAAC,EAAAA,IAACC,GAAc,QAAO,GACpB,SAAAH,EAAAA,KAACI,EAAA,CAAO,QAAQ,UACd,SAAA,CAAAF,EAAAA,IAACoD,GAAA,CAAK,UAAU,cAAA,CAAe,EAAE,iBAAA,CAAA,CAEnC,CAAA,CACF,EACAtD,EAAAA,KAACM,EAAA,CAAc,UAAU,YACvB,SAAA,CAAAN,OAACO,GAAA,CACC,SAAA,CAAAL,EAAAA,IAACM,IAAY,SAAA,iBAAA,CAAe,EAC5BN,EAAAA,IAACO,IAAkB,SAAA,+CAAA,CAEnB,CAAA,EACF,EACAP,EAAAA,IAACqC,GAAA,CACC,YACEqG,GAAA,YAAAA,EAAS,aAAc,YACnBS,EAAM,YACNA,EAAM,UAEZ,cACET,GAAA,YAAAA,EAAS,aAAc,cACnB4B,EAAAnB,EAAM,WAAN,YAAAmB,EAAgB,YAAa,iBAC7BC,EAAApB,EAAM,SAAN,YAAAoB,EAAc,YAAa,YAEjC,QAASpB,EAAM,GACf,YACET,GAAA,YAAAA,EAAS,aAAc,YACnB,qBACA,qBAEN,UAAWO,CAAA,CAAA,CACb,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,EAEAjJ,MAACgK,GAAA,CAAY,MAAM,YACjB,eAACzI,EAAA,CACC,SAAAvB,EAAAA,IAACsG,GAAA,CACC,QAAS6C,EAAM,GACf,WAAYA,EAAM,YAClB,SAAUA,EAAM,SAAA,CAAA,EAEpB,CAAA,CACF,CAAA,CAAA,CACF,CAAA,GA1OaA,EAAM,EA2OrB,EACG,CAAA,CAEL,CAAA,EACF,QACCM,GAAA,CAAA,CAAO,CAAA,EACV,CAEJ"}