{"version":3,"file":"route-tenant-DNBKfVUX.js","sources":["../../src/components/ui/shimmer.tsx","../../src/components/ui/cultural-badge.tsx","../../src/components/navigation/ModernAppSidebar.tsx","../../src/components/mobile/BottomNav.tsx","../../src/components/layout/MainLayout.tsx","../../src/components/ui/collapsible.tsx","../../src/components/illustrations/LazyIllustration.tsx","../../src/components/recommendations/PreferencesModal.tsx","../../src/components/recommendations/RecommendationsCarousel.tsx","../../src/components/dashboard/SearchHistory.tsx","../../src/components/dashboard/SmartReminders.tsx","../../src/components/dashboard/TenantScoreMeter.tsx","../../src/components/dashboard/ProfileScoreCardCompact.tsx","../../src/components/dashboard/QuickActionsGridCompact.tsx","../../src/components/dashboard/ActivityTimeline.tsx","../../src/components/dashboard/ApplicationsOverviewCompact.tsx","../../src/components/dashboard/MarketInsightsWidget.tsx","../../src/components/ui/collapsible-section.tsx","../../src/components/dashboard/WelcomeBanner.tsx","../../src/pages/Dashboard.tsx","../../src/components/dashboard/tenant/ApplicationsStatusWidget.tsx","../../src/components/dashboard/tenant/ActiveLeaseWidget.tsx","../../src/components/dashboard/tenant/PaymentHistoryWidget.tsx","../../src/components/dashboard/tenant/MaintenanceRequestsWidget.tsx","../../src/pages/TenantDashboard.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\n\ninterface ShimmerProps {\n  className?: string;\n}\n\nexport const Shimmer = ({ className }: ShimmerProps) => (\n  <div className={cn(\"relative overflow-hidden bg-muted rounded\", className)}>\n    <div className=\"shimmer-effect absolute inset-0\" />\n  </div>\n);\n","import { ReactNode } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface CulturalBadgeProps {\n  children: ReactNode;\n  variant?: 'flag' | 'kente' | 'gold' | 'green';\n  className?: string;\n}\n\nexport const CulturalBadge = ({ \n  children, \n  variant = 'flag',\n  className = ''\n}: CulturalBadgeProps) => {\n  const variants = {\n    flag: 'bg-gradient-to-r from-[hsl(30_100%_50%)] via-white to-[hsl(142_76%_36%)]',\n    kente: 'bg-gradient-to-r from-[hsl(30_100%_50%)] via-[hsl(45_100%_51%)] to-[hsl(142_76%_36%)]',\n    gold: 'bg-[hsl(45_100%_51%)]',\n    green: 'bg-[hsl(142_76%_36%)]'\n  };\n\n  const textColors = {\n    flag: 'text-gray-800',\n    kente: 'text-white',\n    gold: 'text-white',\n    green: 'text-white'\n  };\n\n  return (\n    <div className={cn(\n      'inline-flex items-center gap-2 px-3 py-1 rounded-full text-sm font-semibold',\n      variants[variant],\n      textColors[variant],\n      'shadow-md',\n      className\n    )}>\n      {children}\n    </div>\n  );\n};\n\n","import { Link, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { usePermissions } from \"@/hooks/usePermissions\";\nimport { motion } from \"framer-motion\";\nimport {\n  Home,\n  Search,\n  Heart,\n  MessageSquare,\n  User,\n  Building2,\n  FileText,\n  CreditCard,\n  Wrench,\n  ShieldCheck,\n  MapPin,\n  PlusCircle,\n  LayoutDashboard,\n  Shield,\n  HelpCircle,\n  Settings,\n  LogOut,\n  Bell,\n  Star,\n} from \"lucide-react\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarHeader,\n  SidebarFooter,\n  useSidebar,\n} from \"@/components/ui/sidebar\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { CulturalBadge } from \"@/components/ui/cultural-badge\";\nimport monToitLogo from \"@/assets/logo/mon-toit-logo.png\";\nimport { cn } from \"@/lib/utils\";\n\nexport function ModernAppSidebar() {\n  const { profile, user } = useAuth();\n  const { canAccessAdminDashboard } = usePermissions();\n  const location = useLocation();\n  const { open } = useSidebar();\n\n  const isActive = (path: string) => location.pathname === path;\n\n  // Get user initials\n  const getUserInitials = () => {\n    if (!profile?.full_name) return \"U\";\n    const names = profile.full_name.split(\" \");\n    return names.map(n => n[0]).join(\"\").toUpperCase().slice(0, 2);\n  };\n\n  // Navigation commune\n  const commonLinks = [\n    { to: \"/\", icon: Home, label: \"Accueil\", color: \"text-blue-500\" },\n    { to: \"/recherche\", icon: Search, label: \"Recherche\", color: \"text-purple-500\" },\n    { to: \"/explorer\", icon: MapPin, label: \"Explorer\", color: \"text-green-500\" },\n  ];\n\n  // Navigation pour utilisateurs connectés\n  const userLinks = profile ? [\n    { to: \"/dashboard\", icon: LayoutDashboard, label: \"Tableau de bord\", color: \"text-orange-500\", badge: null },\n    { to: \"/favoris\", icon: Heart, label: \"Mes Favoris\", color: \"text-red-500\", badge: null },\n    { to: \"/messages\", icon: MessageSquare, label: \"Messages\", color: \"text-blue-500\", badge: 3 },\n  ] : [];\n\n  // Navigation pour locataires\n  const tenantLinks = profile?.user_type === \"locataire\" ? [\n    { to: \"/candidatures\", icon: FileText, label: \"Mes Candidatures\", color: \"text-indigo-500\" },\n    { to: \"/baux\", icon: FileText, label: \"Mes Baux\", color: \"text-teal-500\" },\n    { to: \"/payments\", icon: CreditCard, label: \"Paiements\", color: \"text-emerald-500\" },\n  ] : [];\n\n  // Navigation pour propriétaires et agences\n  const ownerLinks = (profile?.user_type === \"proprietaire\" || profile?.user_type === \"agence\") ? [\n    { to: \"/mes-biens\", icon: Building2, label: \"Mes Biens\", color: \"text-cyan-500\" },\n    { to: \"/ajouter-bien\", icon: PlusCircle, label: \"Publier un bien\", color: \"text-green-500\" },\n    { to: \"/my-mandates\", icon: FileText, label: \"Mes Mandats\", color: \"text-amber-500\" },\n  ] : [];\n\n  // Navigation admin\n  const adminLinks = canAccessAdminDashboard ? [\n    { to: \"/admin\", icon: Shield, label: \"Admin Dashboard\", color: \"text-red-500\" },\n    { to: \"/admin/certifications\", icon: ShieldCheck, label: \"Certifications\", color: \"text-orange-500\" },\n  ] : [];\n\n  // Autres liens\n  const otherLinks = [\n    { to: \"/guide\", icon: HelpCircle, label: \"Aide & Guide\", color: \"text-gray-500\" },\n    { to: \"/verification\", icon: ShieldCheck, label: \"Vérification ANSUT\", color: \"text-primary\" },\n  ];\n\n  const settingsLinks = profile ? [\n    { to: \"/profil\", icon: Settings, label: \"Mon Profil\", color: \"text-gray-600\" },\n  ] : [];\n\n  const renderMenuItems = (links: any[], showBadge = false) => {\n    return links.map((link) => {\n      const active = isActive(link.to);\n      return (\n        <SidebarMenuItem key={link.to}>\n          <SidebarMenuButton asChild isActive={active}>\n            <Link to={link.to} className=\"group relative\">\n              <motion.div\n                className={cn(\n                  \"flex items-center gap-3 w-full rounded-lg px-3 py-2.5 transition-all duration-200\",\n                  active \n                    ? \"bg-gradient-to-r from-primary/10 to-secondary/10 border-l-3 border-primary\" \n                    : \"hover:bg-gradient-to-r hover:from-primary/5 hover:to-transparent\"\n                )}\n                whileHover={{ x: 4 }}\n                whileTap={{ scale: 0.98 }}\n              >\n                <link.icon className={cn(\"h-5 w-5\", active ? \"text-primary\" : link.color)} />\n                {open && (\n                  <>\n                    <span className={cn(\n                      \"flex-1 font-medium text-sm\",\n                      active ? \"text-primary\" : \"text-foreground\"\n                    )}>\n                      {link.label}\n                    </span>\n                    {showBadge && link.badge && (\n                      <Badge variant=\"destructive\" className=\"h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs\">\n                        {link.badge}\n                      </Badge>\n                    )}\n                  </>\n                )}\n              </motion.div>\n            </Link>\n          </SidebarMenuButton>\n        </SidebarMenuItem>\n      );\n    });\n  };\n\n  return (\n    <Sidebar collapsible=\"icon\" className=\"border-r border-border/50 bg-gradient-to-b from-background via-background to-muted/20\">\n      {/* Header avec logo et badge ANSUT */}\n      <SidebarHeader className=\"border-b border-border/50 px-4 py-4 bg-gradient-to-r from-primary/5 to-secondary/5\">\n        <Link to=\"/\" className=\"flex items-center gap-3\">\n          <motion.img \n            src={monToitLogo} \n            alt=\"Mon Toit\" \n            className=\"h-10 w-10 rounded-lg shadow-md\"\n            whileHover={{ scale: 1.05, rotate: 5 }}\n            transition={{ type: \"spring\", stiffness: 400 }}\n          />\n          {open && (\n            <div className=\"flex flex-col\">\n              <span className=\"text-base font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n                Mon Toit\n              </span>\n              <CulturalBadge variant=\"kente\" className=\"text-xs px-2 py-0.5\">\n                Certifié ANSUT\n              </CulturalBadge>\n            </div>\n          )}\n        </Link>\n      </SidebarHeader>\n\n      <SidebarContent className=\"px-2 py-4\">\n        {/* User Profile Card */}\n        {profile && open && (\n          <motion.div \n            className=\"mx-2 mb-4 p-3 rounded-xl bg-gradient-to-br from-primary/10 via-secondary/5 to-primary/5 border border-primary/20\"\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n          >\n            <div className=\"flex items-center gap-3\">\n              <Avatar className=\"h-10 w-10 border-2 border-primary/30\">\n                <AvatarFallback className=\"bg-gradient-to-br from-primary to-secondary text-white font-bold\">\n                  {getUserInitials()}\n                </AvatarFallback>\n              </Avatar>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-semibold text-foreground truncate\">\n                  {profile.full_name || \"Utilisateur\"}\n                </p>\n                <p className=\"text-xs text-muted-foreground capitalize\">\n                  {profile.user_type || \"Membre\"}\n                </p>\n              </div>\n              <Bell className=\"h-4 w-4 text-muted-foreground\" />\n            </div>\n          </motion.div>\n        )}\n\n        {/* Navigation Principale */}\n        <SidebarGroup>\n          {open && (\n            <SidebarGroupLabel className=\"text-xs font-semibold text-muted-foreground uppercase tracking-wider px-3 mb-2\">\n              Navigation\n            </SidebarGroupLabel>\n          )}\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {renderMenuItems(commonLinks)}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n\n        {/* Mon Espace */}\n        {userLinks.length > 0 && (\n          <SidebarGroup className=\"mt-4\">\n            {open && (\n              <SidebarGroupLabel className=\"text-xs font-semibold text-muted-foreground uppercase tracking-wider px-3 mb-2\">\n                Mon Espace\n              </SidebarGroupLabel>\n            )}\n            <SidebarGroupContent>\n              <SidebarMenu>\n                {renderMenuItems(userLinks, true)}\n              </SidebarMenu>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        )}\n\n        {/* Section Locataire */}\n        {tenantLinks.length > 0 && (\n          <SidebarGroup className=\"mt-4\">\n            {open && (\n              <SidebarGroupLabel className=\"text-xs font-semibold text-muted-foreground uppercase tracking-wider px-3 mb-2\">\n                Locataire\n              </SidebarGroupLabel>\n            )}\n            <SidebarGroupContent>\n              <SidebarMenu>\n                {renderMenuItems(tenantLinks)}\n              </SidebarMenu>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        )}\n\n        {/* Section Propriétaire */}\n        {ownerLinks.length > 0 && (\n          <SidebarGroup className=\"mt-4\">\n            {open && (\n              <SidebarGroupLabel className=\"text-xs font-semibold text-muted-foreground uppercase tracking-wider px-3 mb-2\">\n                Gestion\n              </SidebarGroupLabel>\n            )}\n            <SidebarGroupContent>\n              <SidebarMenu>\n                {renderMenuItems(ownerLinks)}\n              </SidebarMenu>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        )}\n\n        {/* Section Admin */}\n        {adminLinks.length > 0 && (\n          <SidebarGroup className=\"mt-4\">\n            {open && (\n              <SidebarGroupLabel className=\"text-xs font-semibold text-red-500 uppercase tracking-wider px-3 mb-2\">\n                Administration\n              </SidebarGroupLabel>\n            )}\n            <SidebarGroupContent>\n              <SidebarMenu>\n                {renderMenuItems(adminLinks)}\n              </SidebarMenu>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        )}\n\n        {/* Autres */}\n        <SidebarGroup className=\"mt-4\">\n          {open && (\n            <SidebarGroupLabel className=\"text-xs font-semibold text-muted-foreground uppercase tracking-wider px-3 mb-2\">\n              Autres\n            </SidebarGroupLabel>\n          )}\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {renderMenuItems(otherLinks)}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n\n        {/* Paramètres */}\n        {settingsLinks.length > 0 && (\n          <SidebarGroup className=\"mt-4\">\n            <SidebarGroupContent>\n              <SidebarMenu>\n                {renderMenuItems(settingsLinks)}\n              </SidebarMenu>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        )}\n      </SidebarContent>\n\n      {/* Footer moderne */}\n      <SidebarFooter className=\"border-t border-border/50 p-3 bg-gradient-to-r from-muted/30 to-transparent\">\n        {open ? (\n          <div className=\"flex items-center justify-between text-xs text-muted-foreground px-2\">\n            <span>© 2025 Mon Toit</span>\n            <Star className=\"h-3 w-3 text-kente-gold fill-kente-gold\" />\n          </div>\n        ) : (\n          <div className=\"flex justify-center\">\n            <Star className=\"h-4 w-4 text-kente-gold fill-kente-gold\" />\n          </div>\n        )}\n      </SidebarFooter>\n    </Sidebar>\n  );\n}\n\n","import { Link, useLocation } from 'react-router-dom';\nimport { Home, Map, PlusCircle, Heart, User } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { motion } from 'framer-motion';\n\n/**\n * Bottom Navigation Bar pour mobile\n * - Navigation fixe en bas de l'écran\n * - 5 items principaux\n * - Active state visible\n * - Safe area support\n * - Animations au tap\n */\nexport const BottomNav = () => {\n  const location = useLocation();\n\n  const navItems = [\n    { \n      icon: Home, \n      label: 'Accueil', \n      path: '/',\n      color: 'text-blue-600'\n    },\n    { \n      icon: Map, \n      label: 'Carte', \n      path: '/carte-intelligente',\n      color: 'text-green-600'\n    },\n    { \n      icon: PlusCircle, \n      label: 'Publier', \n      path: '/publier',\n      color: 'text-orange-600',\n      special: true // Bouton central plus gros\n    },\n    { \n      icon: Heart, \n      label: 'Favoris', \n      path: '/favoris',\n      color: 'text-red-600'\n    },\n    { \n      icon: User, \n      label: 'Profil', \n      path: '/profil',\n      color: 'text-purple-600'\n    },\n  ];\n\n  const isActive = (path: string) => {\n    if (path === '/') {\n      return location.pathname === '/';\n    }\n    return location.pathname.startsWith(path);\n  };\n\n  return (\n    <nav \n      className=\"fixed bottom-0 left-0 right-0 bg-white/95 backdrop-blur-md border-t border-border z-50 pb-safe shadow-lg md:hidden\"\n      role=\"navigation\"\n      aria-label=\"Navigation principale mobile\"\n    >\n      <div className=\"flex justify-around items-center h-16 px-2\">\n        {navItems.map((item) => {\n          const active = isActive(item.path);\n          const Icon = item.icon;\n\n          return (\n            <Link\n              key={item.path}\n              to={item.path}\n              className={cn(\n                \"flex flex-col items-center justify-center flex-1 h-full relative transition-colors\",\n                \"active:scale-95 transition-transform duration-150\",\n                active ? item.color : \"text-muted-foreground\"\n              )}\n              aria-label={item.label}\n              aria-current={active ? 'page' : undefined}\n            >\n              {/* Indicateur actif */}\n              {active && (\n                <motion.div\n                  layoutId=\"activeTab\"\n                  className=\"absolute top-0 left-1/2 -translate-x-1/2 w-12 h-1 bg-current rounded-full\"\n                  transition={{ type: \"spring\", stiffness: 500, damping: 30 }}\n                />\n              )}\n\n              {/* Icône */}\n              <div className={cn(\n                \"relative transition-all duration-200\",\n                item.special && \"scale-110\"\n              )}>\n                {item.special && (\n                  <div className=\"absolute inset-0 bg-primary/10 rounded-full scale-150 -z-10\" />\n                )}\n                <Icon \n                  className={cn(\n                    \"transition-all duration-200\",\n                    active ? \"h-6 w-6\" : \"h-5 w-5\",\n                    item.special && \"h-7 w-7\"\n                  )} \n                  strokeWidth={active ? 2.5 : 2}\n                />\n              </div>\n\n              {/* Label */}\n              <span className={cn(\n                \"text-xs mt-1 font-medium transition-all duration-200\",\n                active ? \"opacity-100 scale-100\" : \"opacity-70 scale-95\"\n              )}>\n                {item.label}\n              </span>\n\n              {/* Badge notification (exemple pour Favoris) */}\n              {item.path === '/favoris' && (\n                <div className=\"absolute top-2 right-4 h-2 w-2 bg-red-500 rounded-full\" />\n              )}\n            </Link>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\n","import { ReactNode } from \"react\";\nimport { SidebarProvider, SidebarInset } from \"@/components/ui/sidebar\";\nimport { ModernAppSidebar } from \"@/components/navigation/ModernAppSidebar\";\nimport Navbar from \"@/components/Navbar\";\nimport Footer from \"@/components/Footer\";\nimport { BottomNav } from \"@/components/mobile/BottomNav\";\n\ninterface MainLayoutProps {\n  children: ReactNode;\n  showSidebar?: boolean;\n}\n\nexport const MainLayout = ({ children, showSidebar = true }: MainLayoutProps) => {\n  if (!showSidebar) {\n    return (\n      <>\n        <Navbar />\n        <div className=\"min-h-screen pt-16 pb-20 md:pb-0\">\n          {children}\n        </div>\n        <Footer />\n        <BottomNav />\n      </>\n    );\n  }\n\n  return (\n    <SidebarProvider defaultOpen={true}>\n      <div className=\"flex min-h-screen w-full\">\n        <ModernAppSidebar />\n        <SidebarInset className=\"flex flex-col flex-1\">\n          <Navbar />\n          <div className=\"flex-1 pt-16 pb-20 md:pb-0\">\n            {children}\n          </div>\n          <Footer />\n          <BottomNav />\n        </SidebarInset>\n      </div>\n    </SidebarProvider>\n  );\n};\n","import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\";\n\nconst Collapsible = CollapsiblePrimitive.Root;\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger;\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent;\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent };\n","import { useState, useEffect, useRef } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Shimmer } from \"@/components/ui/shimmer\";\nimport { Home } from \"lucide-react\";\n\ninterface LazyIllustrationProps {\n  src: string | undefined;\n  alt: string;\n  className?: string;\n  fallback?: React.ReactNode;\n  animate?: boolean;\n}\n\nexport const LazyIllustration = ({ \n  src, \n  alt, \n  className, \n  fallback,\n  animate = true \n}: LazyIllustrationProps) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const [error, setError] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsInView(true);\n        }\n      },\n      {\n        rootMargin: \"50px\",\n      }\n    );\n\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n\n    return () => {\n      if (imgRef.current) {\n        observer.unobserve(imgRef.current);\n      }\n    };\n  }, []);\n\n  const handleLoad = () => {\n    setIsLoaded(true);\n  };\n\n  const handleError = () => {\n    setError(true);\n  };\n\n  if (!src || error) {\n    return (\n      <div className={cn(\"bg-primary/5 flex items-center justify-center\", className)}>\n        {fallback || (\n          <div className=\"flex flex-col items-center gap-2 text-muted-foreground\">\n            <Home className=\"h-12 w-12 text-primary/40\" />\n            <span className=\"text-sm font-medium\">Illustration à venir</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn(\"relative overflow-hidden bg-muted\", className)}>\n      {!isLoaded && (\n        <div className=\"absolute inset-0 bg-gradient-to-br from-primary/5 to-secondary/5\">\n          <Shimmer className=\"absolute inset-0\" />\n        </div>\n      )}\n      \n      {isInView && (\n        <picture>\n          <source\n            srcSet={src.replace('.png', '.webp')}\n            type=\"image/webp\"\n          />\n          <img\n            ref={imgRef}\n            src={src}\n            alt={alt}\n            onLoad={handleLoad}\n            onError={handleError}\n            className={cn(\n              \"w-full h-full object-cover transition-all duration-700\",\n              isLoaded ? \"opacity-100 image-loaded\" : \"opacity-0\",\n              animate && isLoaded && \"animate-fade-in-up\"\n            )}\n            loading=\"lazy\"\n            fetchPriority=\"auto\"\n            decoding=\"async\"\n          />\n        </picture>\n      )}\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { useRecommendations } from '@/hooks/useRecommendations';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from '@/hooks/useAuth';\nimport { toast } from '@/hooks/use-toast';\nimport { logger } from '@/services/logger';\n\ninterface PreferencesModalProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\nexport const PreferencesModal = ({ open, onOpenChange }: PreferencesModalProps) => {\n  const { user } = useAuth();\n  const { updatePreferences } = useRecommendations({ type: 'properties', autoFetch: false });\n\n  const [preferences, setPreferences] = useState({\n    preferred_cities: [] as string[],\n    preferred_property_types: [] as string[],\n    min_budget: 0,\n    max_budget: 0,\n    min_bedrooms: 0,\n    min_bathrooms: 0,\n    requires_furnished: false,\n    requires_ac: false,\n    requires_parking: false,\n    requires_garden: false,\n  });\n\n  const [cityInput, setCityInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (open && user) {\n      loadPreferences();\n    }\n  }, [open, user]);\n\n  const loadPreferences = async () => {\n    if (!user) return;\n\n    const { data, error } = await supabase\n      .from('user_preferences')\n      .select('*')\n      .eq('user_id', user.id)\n      .single();\n\n    if (data && !error) {\n      setPreferences({\n        preferred_cities: data.preferred_cities || [],\n        preferred_property_types: data.preferred_property_types || [],\n        min_budget: data.min_budget || 0,\n        max_budget: data.max_budget || 0,\n        min_bedrooms: data.min_bedrooms || 0,\n        min_bathrooms: data.min_bathrooms || 0,\n        requires_furnished: data.requires_furnished || false,\n        requires_ac: data.requires_ac || false,\n        requires_parking: data.requires_parking || false,\n        requires_garden: data.requires_garden || false,\n      });\n    }\n  };\n\n  const handleSave = async () => {\n    // Validation\n    if (preferences.min_budget > 0 && preferences.max_budget > 0 && preferences.min_budget > preferences.max_budget) {\n      toast({\n        title: \"Critères invalides\",\n        description: \"Le budget minimum ne peut pas être supérieur au budget maximum\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (preferences.preferred_cities.length > 0) {\n      const invalidCities = preferences.preferred_cities.filter(city => city.length < 2);\n      if (invalidCities.length > 0) {\n        toast({\n          title: \"Villes invalides\",\n          description: \"Certaines villes saisies sont trop courtes (minimum 2 caractères)\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n    }\n\n    setLoading(true);\n    try {\n      await updatePreferences(preferences);\n      onOpenChange(false);\n      toast({\n        title: \"Préférences sauvegardées\",\n        description: \"Vos recommandations ont été mises à jour\",\n      });\n    } catch (error) {\n      logger.logError(error, { context: 'PreferencesModal', action: 'save' });\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de sauvegarder les préférences\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addCity = () => {\n    const trimmedCity = cityInput.trim();\n    if (!trimmedCity) return;\n    \n    if (trimmedCity.length < 2) {\n      toast({\n        title: \"Ville invalide\",\n        description: \"Le nom de la ville doit contenir au moins 2 caractères\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (preferences.preferred_cities.includes(trimmedCity)) {\n      toast({\n        title: \"Ville déjà ajoutée\",\n        description: \"Cette ville est déjà dans votre liste\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setPreferences({\n      ...preferences,\n      preferred_cities: [...preferences.preferred_cities, trimmedCity],\n    });\n    setCityInput('');\n  };\n\n  const removeCity = (city: string) => {\n    setPreferences({\n      ...preferences,\n      preferred_cities: preferences.preferred_cities.filter(c => c !== city),\n    });\n  };\n\n  const togglePropertyType = (type: string) => {\n    const types = preferences.preferred_property_types;\n    setPreferences({\n      ...preferences,\n      preferred_property_types: types.includes(type)\n        ? types.filter(t => t !== type)\n        : [...types, type],\n    });\n  };\n\n  const propertyTypes = ['Appartement', 'Studio', 'Villa', 'Chambre', 'Bureau'];\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Configurer mes préférences de recherche</DialogTitle>\n          <DialogDescription>\n            Personnalisez vos critères pour recevoir des recommandations adaptées\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Villes préférées */}\n          <div className=\"space-y-2\">\n            <Label>Villes préférées</Label>\n            <div className=\"flex gap-2\">\n              <Input\n                value={cityInput}\n                onChange={(e) => setCityInput(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && addCity()}\n                placeholder=\"Ajouter une ville\"\n              />\n              <Button onClick={addCity} type=\"button\">Ajouter</Button>\n            </div>\n            <div className=\"flex flex-wrap gap-2 mt-2\">\n              {preferences.preferred_cities.map((city) => (\n                <div key={city} className=\"bg-secondary px-3 py-1 rounded-full flex items-center gap-2\">\n                  <span>{city}</span>\n                  <button onClick={() => removeCity(city)} className=\"text-destructive\">×</button>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Types de biens */}\n          <div className=\"space-y-2\">\n            <Label>Types de biens</Label>\n            <div className=\"flex flex-wrap gap-2\">\n              {propertyTypes.map((type) => (\n                <Button\n                  key={type}\n                  variant={preferences.preferred_property_types.includes(type) ? 'default' : 'outline'}\n                  onClick={() => togglePropertyType(type)}\n                  type=\"button\"\n                >\n                  {type}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          {/* Budget */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label>Budget minimum (FCFA/mois)</Label>\n              <Input\n                type=\"number\"\n                value={preferences.min_budget || ''}\n                onChange={(e) => setPreferences({ ...preferences, min_budget: Number(e.target.value) })}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label>Budget maximum (FCFA/mois)</Label>\n              <Input\n                type=\"number\"\n                value={preferences.max_budget || ''}\n                onChange={(e) => setPreferences({ ...preferences, max_budget: Number(e.target.value) })}\n              />\n            </div>\n          </div>\n\n          {/* Chambres et Salles de bain */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label>Chambres minimum</Label>\n              <Input\n                type=\"number\"\n                min=\"0\"\n                value={preferences.min_bedrooms || ''}\n                onChange={(e) => setPreferences({ ...preferences, min_bedrooms: Number(e.target.value) })}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label>Salles de bain minimum</Label>\n              <Input\n                type=\"number\"\n                min=\"0\"\n                value={preferences.min_bathrooms || ''}\n                onChange={(e) => setPreferences({ ...preferences, min_bathrooms: Number(e.target.value) })}\n              />\n            </div>\n          </div>\n\n          {/* Équipements */}\n          <div className=\"space-y-3\">\n            <Label>Équipements souhaités</Label>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <Label htmlFor=\"furnished\">Meublé</Label>\n                <Switch\n                  id=\"furnished\"\n                  checked={preferences.requires_furnished}\n                  onCheckedChange={(checked) => setPreferences({ ...preferences, requires_furnished: checked })}\n                />\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <Label htmlFor=\"ac\">Climatisation</Label>\n                <Switch\n                  id=\"ac\"\n                  checked={preferences.requires_ac}\n                  onCheckedChange={(checked) => setPreferences({ ...preferences, requires_ac: checked })}\n                />\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <Label htmlFor=\"parking\">Parking</Label>\n                <Switch\n                  id=\"parking\"\n                  checked={preferences.requires_parking}\n                  onCheckedChange={(checked) => setPreferences({ ...preferences, requires_parking: checked })}\n                />\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <Label htmlFor=\"garden\">Jardin</Label>\n                <Switch\n                  id=\"garden\"\n                  checked={preferences.requires_garden}\n                  onCheckedChange={(checked) => setPreferences({ ...preferences, requires_garden: checked })}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-2 mt-6\">\n          <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n            Annuler\n          </Button>\n          <Button onClick={handleSave} disabled={loading}>\n            {loading ? 'Enregistrement...' : 'Enregistrer'}\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { PropertyCard } from '@/components/properties/PropertyCard';\nimport { ChevronLeft, ChevronRight, Sparkles } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport type { Property } from '@/types';\nimport { logger } from '@/services/logger';\n\ninterface RecommendationsCarouselProps {\n  userId: string;\n  limit?: number;\n}\n\nexport const RecommendationsCarousel = ({ userId, limit = 8 }: RecommendationsCarouselProps) => {\n  const [emblaRef, emblaApi] = useEmblaCarousel({ \n    loop: false, \n    align: 'start',\n    slidesToScroll: 1,\n  });\n  const [properties, setProperties] = useState<Property[]>([]);\n  const [canScrollPrev, setCanScrollPrev] = useState(false);\n  const [canScrollNext, setCanScrollNext] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      try {\n        // Fetch user preferences\n        const { data: prefsData } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', userId)\n          .maybeSingle();\n\n        let query = supabase\n          .from('properties')\n          .select('*')\n          .eq('moderation_status', 'approved')\n          .eq('status', 'disponible')\n          .order('created_at', { ascending: false })\n          .limit(limit);\n\n        // Apply preference filters if they exist\n        if (prefsData) {\n          if (prefsData.preferred_cities?.length > 0) {\n            query = query.in('city', prefsData.preferred_cities);\n          }\n          if (prefsData.min_budget) {\n            query = query.gte('monthly_rent', prefsData.min_budget);\n          }\n          if (prefsData.max_budget) {\n            query = query.lte('monthly_rent', prefsData.max_budget);\n          }\n        }\n\n        const { data, error } = await query;\n\n        if (error) throw error;\n        setProperties(data || []);\n      } catch (error) {\n        logger.logError(error, { context: 'RecommendationsCarousel', action: 'fetch', userId });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRecommendations();\n  }, [userId, limit]);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n\n    const onSelect = () => {\n      setCanScrollPrev(emblaApi.canScrollPrev());\n      setCanScrollNext(emblaApi.canScrollNext());\n    };\n\n    emblaApi.on('select', onSelect);\n    onSelect();\n\n    return () => {\n      emblaApi.off('select', onSelect);\n    };\n  }, [emblaApi]);\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"p-8 text-center text-muted-foreground\">\n          Chargement des recommandations...\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (properties.length === 0) {\n    return (\n      <Card>\n        <CardContent className=\"p-8 text-center text-muted-foreground\">\n          Aucune recommandation pour le moment. Configurez vos préférences pour recevoir des suggestions personnalisées.\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <Sparkles className=\"h-5 w-5 text-primary\" />\n            Recommandations pour vous\n          </CardTitle>\n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              className=\"h-8 w-8\"\n              onClick={() => emblaApi?.scrollPrev()}\n              disabled={!canScrollPrev}\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              className=\"h-8 w-8\"\n              onClick={() => emblaApi?.scrollNext()}\n              disabled={!canScrollNext}\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"overflow-hidden p-0\">\n        <div className=\"embla\" ref={emblaRef}>\n          <div className=\"embla__container flex gap-4 p-4\">\n            {properties.map((property) => (\n              <div key={property.id} className=\"embla__slide flex-[0_0_300px] min-w-0\">\n                <PropertyCard property={property} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Clock, MapPin, Home, DollarSign, RefreshCw, TrendingUp } from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { useToast } from '@/hooks/use-toast';\nimport { logger } from '@/services/logger';\n\ninterface SearchHistoryItem {\n  id: string;\n  search_filters: any;\n  result_count: number;\n  clicked_properties: string[];\n  created_at: string;\n}\n\nconst SearchHistory = () => {\n  const [history, setHistory] = useState<SearchHistoryItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState<{\n    topCities: { city: string; count: number }[];\n    avgBudget: number;\n  }>({ topCities: [], avgBudget: 0 });\n  const navigate = useNavigate();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    fetchSearchHistory();\n  }, []);\n\n  const fetchSearchHistory = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data, error } = await supabase\n        .from('search_history')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false })\n        .limit(10);\n\n      if (error) throw error;\n\n      setHistory(data || []);\n      calculateStats(data || []);\n    } catch (error) {\n      logger.logError(error, { context: 'SearchHistory', action: 'fetch' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateStats = (searches: SearchHistoryItem[]) => {\n    const cityCount: Record<string, number> = {};\n    let totalBudget = 0;\n    let budgetCount = 0;\n\n    searches.forEach(search => {\n      if (search.search_filters.city) {\n        search.search_filters.city.forEach(city => {\n          cityCount[city] = (cityCount[city] || 0) + 1;\n        });\n      }\n      if (search.search_filters.max_budget) {\n        totalBudget += search.search_filters.max_budget;\n        budgetCount++;\n      }\n    });\n\n    const topCities = Object.entries(cityCount)\n      .map(([city, count]) => ({ city, count }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 3);\n\n    setStats({\n      topCities,\n      avgBudget: budgetCount > 0 ? totalBudget / budgetCount : 0\n    });\n  };\n\n  const relaunhSearch = (filters: any) => {\n    const params = new URLSearchParams();\n    if (filters.city?.length) params.set('city', filters.city.join(','));\n    if (filters.property_type?.length) params.set('type', filters.property_type.join(','));\n    if (filters.min_budget) params.set('minPrice', filters.min_budget);\n    if (filters.max_budget) params.set('maxPrice', filters.max_budget);\n    if (filters.min_bedrooms) params.set('bedrooms', filters.min_bedrooms);\n\n    navigate(`/search?${params.toString()}`);\n    toast({\n      title: \"Recherche relancée\",\n      description: \"Vous avez été redirigé vers les résultats\",\n    });\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Clock className=\"h-5 w-5\" />\n            Historique de recherches\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {[1, 2, 3].map(i => (\n              <div key={i} className=\"h-20 bg-muted animate-pulse rounded-lg\" />\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <TrendingUp className=\"h-5 w-5\" />\n            Vos tendances de recherche\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <h4 className=\"text-sm font-medium text-muted-foreground mb-2\">Villes les plus recherchées</h4>\n              <div className=\"space-y-2\">\n                {stats.topCities.map(({ city, count }) => (\n                  <div key={city} className=\"flex items-center justify-between\">\n                    <span className=\"text-sm\">{city}</span>\n                    <Badge variant=\"secondary\">{count} fois</Badge>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div>\n              <h4 className=\"text-sm font-medium text-muted-foreground mb-2\">Budget moyen recherché</h4>\n              <p className=\"text-2xl font-bold text-primary\">\n                {stats.avgBudget > 0 ? `${stats.avgBudget.toLocaleString()} FCFA/mois` : 'N/A'}\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Clock className=\"h-5 w-5\" />\n            Historique de recherches\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {history.length === 0 ? (\n            <p className=\"text-center text-muted-foreground py-8\">\n              Aucune recherche récente\n            </p>\n          ) : (\n            <div className=\"space-y-4\">\n              {history.map((search) => (\n                <div\n                  key={search.id}\n                  className=\"border rounded-lg p-4 hover:bg-accent transition-colors\"\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"space-y-2 flex-1\">\n                      <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                        <Clock className=\"h-4 w-4\" />\n                        {format(new Date(search.created_at), 'PPP à HH:mm', { locale: fr })}\n                      </div>\n                      \n                      <div className=\"flex flex-wrap gap-2\">\n                        {search.search_filters.city?.map(city => (\n                          <Badge key={city} variant=\"outline\">\n                            <MapPin className=\"h-3 w-3 mr-1\" />\n                            {city}\n                          </Badge>\n                        ))}\n                        {search.search_filters.property_type?.map(type => (\n                          <Badge key={type} variant=\"outline\">\n                            <Home className=\"h-3 w-3 mr-1\" />\n                            {type}\n                          </Badge>\n                        ))}\n                        {(search.search_filters.min_budget || search.search_filters.max_budget) && (\n                          <Badge variant=\"outline\">\n                            <DollarSign className=\"h-3 w-3 mr-1\" />\n                            {search.search_filters.min_budget?.toLocaleString() || 0} - {search.search_filters.max_budget?.toLocaleString() || '∞'} FCFA\n                          </Badge>\n                        )}\n                      </div>\n\n                      <div className=\"flex items-center gap-4 text-sm\">\n                        <span className=\"text-muted-foreground\">\n                          {search.result_count} résultat{search.result_count > 1 ? 's' : ''}\n                        </span>\n                        {search.clicked_properties.length > 0 && (\n                          <span className=\"text-muted-foreground\">\n                            {search.clicked_properties.length} bien{search.clicked_properties.length > 1 ? 's' : ''} consulté{search.clicked_properties.length > 1 ? 's' : ''}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => relaunhSearch(search.search_filters)}\n                    >\n                      <RefreshCw className=\"h-4 w-4 mr-2\" />\n                      Relancer\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default SearchHistory;","import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Bell, X, ExternalLink, Settings } from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport { useToast } from '@/hooks/use-toast';\nimport { logger } from '@/services/logger';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\ninterface Reminder {\n  id: string;\n  reminder_type: string;\n  title: string;\n  message: string | null;\n  link: string | null;\n  is_active: boolean;\n  frequency: string;\n  created_at: string;\n}\n\nconst SmartReminders = () => {\n  const [reminders, setReminders] = useState<Reminder[]>([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    fetchReminders();\n  }, []);\n\n  const fetchReminders = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data, error } = await supabase\n        .from('user_reminders')\n        .select('*')\n        .eq('user_id', user.id)\n        .eq('is_active', true)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      setReminders(data || []);\n    } catch (error) {\n      logger.logError(error, { context: 'SmartReminders', action: 'fetch' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const dismissReminder = async (reminderId: string) => {\n    try {\n      const { error } = await supabase\n        .from('user_reminders')\n        .update({ is_active: false })\n        .eq('id', reminderId);\n\n      if (error) throw error;\n\n      setReminders(prev => prev.filter(r => r.id !== reminderId));\n      toast({\n        title: \"Rappel masqué\",\n        description: \"Le rappel a été masqué avec succès\",\n      });\n    } catch (error) {\n      logger.logError(error, { context: 'SmartReminders', action: 'dismiss' });\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de masquer le rappel\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const updateFrequency = async (reminderId: string, frequency: string) => {\n    try {\n      const { error } = await supabase\n        .from('user_reminders')\n        .update({ frequency })\n        .eq('id', reminderId);\n\n      if (error) throw error;\n\n      setReminders(prev => prev.map(r => \n        r.id === reminderId ? { ...r, frequency } : r\n      ));\n      toast({\n        title: \"Fréquence mise à jour\",\n        description: \"La fréquence du rappel a été modifiée\",\n      });\n    } catch (error) {\n      logger.logError(error, { context: 'SmartReminders', action: 'updateFrequency' });\n      toast({\n        title: \"Erreur\",\n        description: \"Impossible de mettre à jour la fréquence\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const getReminderIcon = (type: string) => {\n    return <Bell className=\"h-5 w-5\" />;\n  };\n\n  const getReminderVariant = (type: string): \"default\" | \"secondary\" | \"destructive\" | \"outline\" => {\n    switch (type) {\n      case 'new_match':\n        return 'default';\n      case 'application_update':\n        return 'secondary';\n      case 'lease_expiry':\n        return 'destructive';\n      default:\n        return 'outline';\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Bell className=\"h-5 w-5\" />\n            Rappels intelligents\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {[1, 2].map(i => (\n              <div key={i} className=\"h-16 bg-muted animate-pulse rounded-lg\" />\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (reminders.length === 0) {\n    return null;\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Bell className=\"h-5 w-5\" />\n          Rappels intelligents\n          <Badge variant=\"secondary\" className=\"ml-auto\">\n            {reminders.length}\n          </Badge>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-3\">\n          {reminders.map((reminder) => (\n            <div\n              key={reminder.id}\n              className=\"flex items-start gap-3 p-3 border rounded-lg hover:bg-accent transition-colors\"\n            >\n              <div className={`p-2 rounded-full bg-primary/10 text-primary`}>\n                {getReminderIcon(reminder.reminder_type)}\n              </div>\n              \n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-start justify-between gap-2\">\n                  <h4 className=\"font-medium text-sm\">{reminder.title}</h4>\n                  <div className=\"flex items-center gap-1 shrink-0\">\n                    <Dialog>\n                      <DialogTrigger asChild>\n                        <Button variant=\"ghost\" size=\"sm\">\n                          <Settings className=\"h-4 w-4\" />\n                        </Button>\n                      </DialogTrigger>\n                      <DialogContent>\n                        <DialogHeader>\n                          <DialogTitle>Paramètres du rappel</DialogTitle>\n                        </DialogHeader>\n                        <div className=\"space-y-4 pt-4\">\n                          <div className=\"space-y-2\">\n                            <Label>Fréquence</Label>\n                            <Select\n                              value={reminder.frequency}\n                              onValueChange={(value) => updateFrequency(reminder.id, value)}\n                            >\n                              <SelectTrigger>\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"daily\">Quotidien</SelectItem>\n                                <SelectItem value=\"weekly\">Hebdomadaire</SelectItem>\n                                <SelectItem value=\"never\">Jamais</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n                        </div>\n                      </DialogContent>\n                    </Dialog>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => dismissReminder(reminder.id)}\n                    >\n                      <X className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n                \n                {reminder.message && (\n                  <p className=\"text-sm text-muted-foreground mt-1\">\n                    {reminder.message}\n                  </p>\n                )}\n                \n                {reminder.link && (\n                  <Button\n                    variant=\"link\"\n                    size=\"sm\"\n                    className=\"h-auto p-0 mt-2\"\n                    onClick={() => navigate(reminder.link)}\n                  >\n                    Voir plus\n                    <ExternalLink className=\"h-3 w-3 ml-1\" />\n                  </Button>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SmartReminders;","import { useEffect, useRef } from 'react';\nimport { Cell, PieChart, Pie } from 'recharts';\nimport { Info } from 'lucide-react';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\nimport confetti from 'canvas-confetti';\n\ninterface TenantScoreMeterProps {\n  score: number;\n  className?: string;\n}\n\nexport const TenantScoreMeter = ({ score, className = '' }: TenantScoreMeterProps) => {\n  const hasTriggeredConfetti = useRef(false);\n\n  useEffect(() => {\n    if (score === 100 && !hasTriggeredConfetti.current) {\n      hasTriggeredConfetti.current = true;\n      confetti({\n        particleCount: 100,\n        spread: 70,\n        origin: { y: 0.6 }\n      });\n    }\n  }, [score]);\n\n  const data = [\n    { name: 'Score', value: score },\n    { name: 'Remaining', value: 100 - score }\n  ];\n\n  const getColor = (score: number) => {\n    if (score >= 75) return 'hsl(var(--chart-1))';\n    if (score >= 60) return 'hsl(var(--chart-3))';\n    return 'hsl(var(--destructive))';\n  };\n\n  return (\n    <div className={`relative ${className}`}>\n      <div className=\"flex items-center gap-2 mb-2\">\n        <h3 className=\"text-sm font-medium\">Score Locataire</h3>\n        <TooltipProvider>\n          <Tooltip>\n            <TooltipTrigger>\n              <Info className=\"h-4 w-4 text-muted-foreground\" />\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">\n                Votre score est calculé selon vos vérifications (ONECI, Face ID, CNAM), \n                la complétude de votre profil et votre historique de location.\n              </p>\n            </TooltipContent>\n          </Tooltip>\n        </TooltipProvider>\n      </div>\n\n      <div className=\"relative w-32 h-32 mx-auto\">\n        <PieChart width={128} height={128}>\n          <Pie\n            data={data}\n            cx={64}\n            cy={64}\n            innerRadius={45}\n            outerRadius={60}\n            startAngle={90}\n            endAngle={-270}\n            dataKey=\"value\"\n          >\n            <Cell fill={getColor(score)} />\n            <Cell fill=\"hsl(var(--muted))\" />\n          </Pie>\n        </PieChart>\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n          <span className=\"text-3xl font-bold\">{score}</span>\n          <span className=\"text-xs text-muted-foreground\">/100</span>\n        </div>\n      </div>\n\n      <div className=\"text-center mt-2\">\n        <p className=\"text-xs text-muted-foreground\">\n          {score >= 75 && '🌟 Excellent profil !'}\n          {score >= 60 && score < 75 && '👍 Bon profil'}\n          {score < 60 && 'Complétez vos vérifications'}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Shield, CheckCircle2, AlertCircle } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '@/hooks/useAuth';\nimport { TenantScoreMeter } from './TenantScoreMeter';\nimport { supabase } from '@/lib/supabase';\n\nexport const ProfileScoreCardCompact = () => {\n  const { profile, user } = useAuth();\n  const [tenantScore, setTenantScore] = useState(0);\n\n  useEffect(() => {\n    const fetchTenantScore = async () => {\n      if (!user) return;\n      \n      const { data } = await supabase\n        .from('user_verifications')\n        .select('tenant_score')\n        .eq('user_id', user.id)\n        .maybeSingle();\n\n      if (data?.tenant_score) {\n        setTenantScore(data.tenant_score);\n      }\n    };\n\n    fetchTenantScore();\n  }, [user]);\n\n  const verificationCount = [\n    profile?.oneci_verified,\n    profile?.face_verified,\n  ].filter(Boolean).length;\n  \n  const isFullyVerified = verificationCount === 2;\n\n  return (\n    <Card className=\"bg-gradient-to-br from-primary/10 via-background to-background border-primary/20 h-[180px]\">\n      <CardContent className=\"p-3 flex flex-col h-full\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"flex items-center gap-2\">\n            <Shield className=\"h-4 w-4 text-primary\" />\n            <span className=\"text-sm font-semibold\">Votre Profil</span>\n          </div>\n          {isFullyVerified ? (\n            <Badge variant=\"default\" className=\"bg-green-600 text-xs px-1.5 py-0\">\n              <CheckCircle2 className=\"h-3 w-3\" />\n            </Badge>\n          ) : (\n            <Badge variant=\"outline\" className=\"border-yellow-600 text-yellow-600 text-xs px-1.5 py-0\">\n              <AlertCircle className=\"h-3 w-3\" />\n            </Badge>\n          )}\n        </div>\n\n        {tenantScore > 0 && (\n          <div className=\"flex-1 flex items-center justify-center my-1\">\n            <div className=\"scale-75\">\n              <TenantScoreMeter score={tenantScore} />\n            </div>\n          </div>\n        )}\n\n        <div className=\"space-y-1 text-xs\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-muted-foreground\">Vérifications</span>\n            <span className=\"font-semibold\">{verificationCount}/2</span>\n          </div>\n          <div className=\"flex gap-1\">\n            <div className={`flex-1 h-1.5 rounded-full ${profile?.oneci_verified ? 'bg-green-600' : 'bg-muted'}`} />\n            <div className={`flex-1 h-1.5 rounded-full ${profile?.face_verified ? 'bg-green-600' : 'bg-muted'}`} />\n          </div>\n        </div>\n\n        {!isFullyVerified && (\n          <Button asChild variant=\"outline\" size=\"sm\" className=\"w-full mt-2 h-7 text-xs\">\n            <Link to=\"/verification\">\n              Compléter\n            </Link>\n          </Button>\n        )}\n      </CardContent>\n    </Card>\n  );\n};","import { Card, CardContent } from '@/components/ui/card';\nimport { Search, Heart, FileText, Bell, Home, Users } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { cn } from '@/lib/utils';\n\nconst quickActions = [\n  {\n    title: 'Rechercher',\n    icon: Search,\n    link: '/recherche',\n    color: 'from-blue-500/10 to-blue-600/10 border-blue-500/20 hover:border-blue-500/40',\n    iconColor: 'text-blue-600',\n  },\n  {\n    title: 'Favoris',\n    icon: Heart,\n    link: '/favoris',\n    color: 'from-pink-500/10 to-pink-600/10 border-pink-500/20 hover:border-pink-500/40',\n    iconColor: 'text-pink-600',\n  },\n  {\n    title: 'Candidatures',\n    icon: FileText,\n    link: '/candidatures',\n    color: 'from-warning/10 to-warning/20 border-warning/20 hover:border-warning/40',\n    iconColor: 'text-warning',\n  },\n  {\n    title: 'Profil',\n    icon: Bell,\n    link: '/profile',\n    color: 'from-orange-500/10 to-orange-600/10 border-orange-500/20 hover:border-orange-500/40',\n    iconColor: 'text-orange-600',\n  },\n];\n\nexport const QuickActionsGridCompact = () => {\n  return (\n    <div className=\"grid grid-cols-2 gap-2 h-[180px]\">\n      {quickActions.map((action) => (\n        <Link key={action.title} to={action.link}>\n          <Card className={cn(\n            'transition-all duration-300 hover:shadow-lg hover:-translate-y-1 cursor-pointer bg-gradient-to-br h-full',\n            action.color\n          )}>\n            <CardContent className=\"p-2 flex flex-col items-center justify-center h-full gap-1\">\n              <action.icon className={cn('h-6 w-6', action.iconColor)} />\n              <span className=\"text-xs font-semibold text-center\">{action.title}</span>\n            </CardContent>\n          </Card>\n        </Link>\n      ))}\n    </div>\n  );\n};","import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Clock, Eye, Heart, FileText, Search } from 'lucide-react';\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from '@/hooks/useAuth';\nimport { logger } from '@/services/logger';\n\ninterface Activity {\n  id: string;\n  type: 'view' | 'favorite' | 'application' | 'search';\n  title: string;\n  description: string;\n  timestamp: string;\n  icon: any;\n  color: string;\n}\n\ninterface ActivityTimelineProps {\n  className?: string;\n}\n\nexport const ActivityTimeline = ({ className }: ActivityTimelineProps) => {\n  const { user } = useAuth();\n  const [activities, setActivities] = useState<Activity[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchActivities = async () => {\n      if (!user) return;\n\n      try {\n        // Fetch recent applications\n        const { data: applications } = await supabase\n          .from('rental_applications')\n          .select('id, created_at, property_id, properties(title)')\n          .eq('applicant_id', user.id)\n          .order('created_at', { ascending: false })\n          .limit(3);\n\n        // Fetch recent favorites\n        const { data: favorites } = await supabase\n          .from('user_favorites')\n          .select('id, created_at, property_id, properties(title)')\n          .eq('user_id', user.id)\n          .order('created_at', { ascending: false })\n          .limit(3);\n\n        // Fetch recent searches\n        const { data: searches } = await supabase\n          .from('search_history')\n          .select('id, created_at, search_filters')\n          .eq('user_id', user.id)\n          .order('created_at', { ascending: false })\n          .limit(3);\n\n        const combinedActivities: Activity[] = [];\n\n        // Add applications\n        applications?.forEach(app => {\n          combinedActivities.push({\n            id: app.id,\n            type: 'application',\n            title: 'Nouvelle candidature',\n            description: `Candidature envoyée pour ${(app as any).properties?.title || 'un bien'}`,\n            timestamp: app.created_at,\n            icon: FileText,\n            color: 'text-warning',\n          });\n        });\n\n        // Add favorites\n        favorites?.forEach(fav => {\n          combinedActivities.push({\n            id: fav.id,\n            type: 'favorite',\n            title: 'Favori ajouté',\n            description: `${(fav as any).properties?.title || 'Un bien'} ajouté aux favoris`,\n            timestamp: fav.created_at,\n            icon: Heart,\n            color: 'text-pink-600',\n          });\n        });\n\n        // Add searches\n        searches?.forEach(search => {\n          const filters = search.search_filters as any;\n          combinedActivities.push({\n            id: search.id,\n            type: 'search',\n            title: 'Recherche effectuée',\n            description: filters?.city ? `Recherche à ${filters.city}` : 'Nouvelle recherche',\n            timestamp: search.created_at,\n            icon: Search,\n            color: 'text-blue-600',\n          });\n        });\n\n        // Sort by timestamp\n        combinedActivities.sort((a, b) => \n          new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n        );\n\n        setActivities(combinedActivities.slice(0, 5));\n      } catch (error) {\n        logger.logError(error, { context: 'ActivityTimeline', action: 'fetch' });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchActivities();\n  }, [user]);\n\n  const formatTimestamp = (timestamp: string) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));\n\n    if (diffInHours < 1) return 'Il y a quelques minutes';\n    if (diffInHours < 24) return `Il y a ${diffInHours}h`;\n    if (diffInHours < 48) return 'Hier';\n    return date.toLocaleDateString('fr-FR', { day: 'numeric', month: 'short' });\n  };\n\n  if (loading) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Clock className=\"h-5 w-5\" />\n            Activité récente\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {[1, 2, 3].map((i) => (\n              <div key={i} className=\"animate-pulse flex gap-3\">\n                <div className=\"w-10 h-10 bg-muted rounded-full\" />\n                <div className=\"flex-1 space-y-2\">\n                  <div className=\"h-4 bg-muted rounded w-3/4\" />\n                  <div className=\"h-3 bg-muted rounded w-1/2\" />\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!activities.length) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Clock className=\"h-5 w-5\" />\n            Activité récente\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-sm text-muted-foreground text-center py-8\">\n            Aucune activité récente\n          </p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Clock className=\"h-5 w-5\" />\n          Activité récente\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {activities.map((activity, index) => (\n            <div\n              key={activity.id}\n              className=\"flex gap-3 pb-4 border-b last:border-b-0 last:pb-0\"\n            >\n              <div className={`flex-shrink-0 w-10 h-10 rounded-full bg-muted flex items-center justify-center ${activity.color}`}>\n                <activity.icon className=\"h-5 w-5\" />\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-start justify-between gap-2\">\n                  <div className=\"flex-1\">\n                    <p className=\"font-medium text-sm\">{activity.title}</p>\n                    <p className=\"text-sm text-muted-foreground truncate\">\n                      {activity.description}\n                    </p>\n                  </div>\n                  <Badge variant=\"outline\" className=\"text-xs whitespace-nowrap\">\n                    {formatTimestamp(activity.timestamp)}\n                  </Badge>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Clock, CheckCircle, XCircle } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { logger } from '@/services/logger';\n\nexport const ApplicationsOverviewCompact = () => {\n  const { user } = useAuth();\n  const [stats, setStats] = useState({\n    pending: 0,\n    accepted: 0,\n    total: 0\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchApplicationStats = async () => {\n      if (!user) return;\n\n      try {\n        const { data, error } = await supabase\n          .from('rental_applications')\n          .select('status')\n          .eq('applicant_id', user.id);\n\n        if (error) throw error;\n\n        const pending = data?.filter(a => a.status === 'pending').length || 0;\n        const accepted = data?.filter(a => a.status === 'accepted' || a.status === 'approved').length || 0;\n        const total = data?.length || 0;\n\n        setStats({ pending, accepted, total });\n      } catch (error) {\n        logger.logError(error, { context: 'ApplicationsOverviewCompact', action: 'fetch' });\n      } finally{\n        setLoading(false);\n      }\n    };\n\n    fetchApplicationStats();\n  }, [user]);\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"p-4 text-center text-sm text-muted-foreground\">\n          Chargement...\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader className=\"p-4 pb-2\">\n        <CardTitle className=\"text-base\">Mes candidatures</CardTitle>\n      </CardHeader>\n      <CardContent className=\"p-4 pt-0\">\n        <div className=\"flex items-center gap-4\">\n          <Link \n            to=\"/candidatures?status=pending\"\n            className=\"flex-1 p-3 rounded-lg border hover:bg-accent/50 transition-colors\"\n          >\n            <div className=\"flex items-center gap-2\">\n              <Clock className=\"h-4 w-4 text-yellow-600\" />\n              <div className=\"flex-1\">\n                <div className=\"text-2xl font-bold\">{stats.pending}</div>\n                <div className=\"text-xs text-muted-foreground\">En attente</div>\n              </div>\n            </div>\n          </Link>\n\n          <Link \n            to=\"/candidatures?status=accepted\"\n            className=\"flex-1 p-3 rounded-lg border hover:bg-accent/50 transition-colors\"\n          >\n            <div className=\"flex items-center gap-2\">\n              <CheckCircle className=\"h-4 w-4 text-green-600\" />\n              <div className=\"flex-1\">\n                <div className=\"text-2xl font-bold\">{stats.accepted}</div>\n                <div className=\"text-xs text-muted-foreground\">Acceptées</div>\n              </div>\n            </div>\n          </Link>\n\n          <Link \n            to=\"/candidatures\"\n            className=\"flex-1 p-3 rounded-lg border hover:bg-accent/50 transition-colors\"\n          >\n            <div className=\"flex items-center gap-2\">\n              <div className=\"flex-1\">\n                <div className=\"text-2xl font-bold\">{stats.total}</div>\n                <div className=\"text-xs text-muted-foreground\">Total</div>\n              </div>\n            </div>\n          </Link>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};","import { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { TrendingUp, TrendingDown, MapPin, Clock, DollarSign, Home } from 'lucide-react';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { logger } from '@/services/logger';\n\ninterface MarketTrend {\n  city: string;\n  avg_price_per_sqm: number;\n  total_properties: number;\n  avg_rent: number;\n  trend_percentage: number;\n  similar_cheaper_cities: string[];\n  avg_rental_days: number;\n}\n\ninterface MarketInsightsData {\n  trends: MarketTrend[];\n  generated_at: string;\n  message?: string;\n}\n\ninterface MarketInsightsWidgetProps {\n  className?: string;\n}\n\nexport const MarketInsightsWidget = ({ className }: MarketInsightsWidgetProps) => {\n  const { user } = useAuth();\n  const [insights, setInsights] = useState<MarketInsightsData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchMarketInsights = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const { data, error: functionError } = await supabase.functions.invoke(\n          'analyze-market-trends',\n          {\n            body: {},\n          }\n        );\n\n        if (functionError) throw functionError;\n\n        setInsights(data);\n      } catch (err: any) {\n        logger.logError(err, { \n          context: 'MarketInsightsWidget', \n          action: 'fetch',\n          userId: user?.id || 'anonymous'\n        });\n        setError(err.message || 'Impossible de charger les insights du marché');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMarketInsights();\n  }, [user]);\n\n  if (loading) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <TrendingUp className=\"h-5 w-5\" />\n            Marché immobilier\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <Skeleton className=\"h-20 w-full\" />\n          <Skeleton className=\"h-20 w-full\" />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <TrendingUp className=\"h-5 w-5\" />\n            Marché immobilier\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-sm text-muted-foreground\">{error}</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!insights || insights.trends.length === 0) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <TrendingUp className=\"h-5 w-5\" />\n            Marché immobilier\n          </CardTitle>\n          <CardDescription>\n            {insights?.message || 'Commencez à rechercher des biens pour voir les tendances du marché'}\n          </CardDescription>\n        </CardHeader>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <TrendingUp className=\"h-5 w-5\" />\n          Marché immobilier\n        </CardTitle>\n        <CardDescription>\n          Analyse basée sur vos recherches récentes\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {insights.trends.map((trend) => (\n          <div key={trend.city} className=\"space-y-3 pb-6 border-b last:border-b-0 last:pb-0\">\n            {/* City Header */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <MapPin className=\"h-4 w-4 text-primary\" />\n                <h3 className=\"font-semibold text-lg\">{trend.city}</h3>\n              </div>\n              <Badge variant={trend.trend_percentage >= 0 ? 'default' : 'secondary'}>\n                {trend.trend_percentage >= 0 ? (\n                  <TrendingUp className=\"h-3 w-3 mr-1\" />\n                ) : (\n                  <TrendingDown className=\"h-3 w-3 mr-1\" />\n                )}\n                {Math.abs(trend.trend_percentage)}%\n              </Badge>\n            </div>\n\n            {/* Stats Grid */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              {/* Prix moyen */}\n              <div className=\"bg-muted/50 p-3 rounded-lg\">\n                <div className=\"flex items-center gap-2 text-muted-foreground text-xs mb-1\">\n                  <DollarSign className=\"h-3 w-3\" />\n                  <span>Prix moyen</span>\n                </div>\n                <p className=\"text-lg font-bold\">\n                  {trend.avg_rent.toLocaleString()} FCFA\n                </p>\n                <p className=\"text-xs text-muted-foreground\">\n                  {trend.avg_price_per_sqm.toLocaleString()} FCFA/m²\n                </p>\n              </div>\n\n              {/* Délai moyen */}\n              <div className=\"bg-muted/50 p-3 rounded-lg\">\n                <div className=\"flex items-center gap-2 text-muted-foreground text-xs mb-1\">\n                  <Clock className=\"h-3 w-3\" />\n                  <span>Délai moyen</span>\n                </div>\n                <p className=\"text-lg font-bold\">{trend.avg_rental_days} jours</p>\n                <p className=\"text-xs text-muted-foreground\">\n                  Temps de location\n                </p>\n              </div>\n\n              {/* Nombre de biens */}\n              <div className=\"bg-muted/50 p-3 rounded-lg col-span-2\">\n                <div className=\"flex items-center gap-2 text-muted-foreground text-xs mb-1\">\n                  <Home className=\"h-3 w-3\" />\n                  <span>Offre disponible</span>\n                </div>\n                <p className=\"text-lg font-bold\">{trend.total_properties} biens</p>\n              </div>\n            </div>\n\n            {/* Quartiers similaires moins chers */}\n            {trend.similar_cheaper_cities.length > 0 && (\n              <div className=\"bg-blue-50 dark:bg-blue-950/20 p-3 rounded-lg border border-blue-200 dark:border-blue-900\">\n                <p className=\"text-xs font-medium text-blue-900 dark:text-blue-100 mb-2\">\n                  💡 Quartiers similaires moins chers :\n                </p>\n                <div className=\"flex flex-wrap gap-2\">\n                  {trend.similar_cheaper_cities.map((city) => (\n                    <Badge key={city} variant=\"outline\" className=\"text-xs\">\n                      {city}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Tendance */}\n            <div className=\"text-xs text-muted-foreground\">\n              {trend.trend_percentage > 0 ? (\n                <p>📈 Hausse de {trend.trend_percentage}% ce trimestre</p>\n              ) : trend.trend_percentage < 0 ? (\n                <p>📉 Baisse de {Math.abs(trend.trend_percentage)}% ce trimestre</p>\n              ) : (\n                <p>➡️ Marché stable ce trimestre</p>\n              )}\n            </div>\n          </div>\n        ))}\n\n        <p className=\"text-xs text-muted-foreground text-center pt-2\">\n          Mis à jour : {new Date(insights.generated_at).toLocaleDateString('fr-FR')}\n        </p>\n      </CardContent>\n    </Card>\n  );\n};\n","import * as React from \"react\";\nimport { ChevronDown, ChevronRight } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface CollapsibleSectionProps {\n  title: string;\n  defaultOpen?: boolean;\n  badge?: string | number;\n  children: React.ReactNode;\n  className?: string;\n  storageKey?: string; // Pour sauvegarder l'état dans localStorage\n}\n\nexport const CollapsibleSection = ({\n  title,\n  defaultOpen = false,\n  badge,\n  children,\n  className,\n  storageKey,\n}: CollapsibleSectionProps) => {\n  const [isOpen, setIsOpen] = React.useState(() => {\n    if (storageKey && typeof window !== 'undefined') {\n      const saved = localStorage.getItem(storageKey);\n      return saved !== null ? saved === 'true' : defaultOpen;\n    }\n    return defaultOpen;\n  });\n\n  React.useEffect(() => {\n    if (storageKey && typeof window !== 'undefined') {\n      localStorage.setItem(storageKey, String(isOpen));\n    }\n  }, [isOpen, storageKey]);\n\n  return (\n    <Collapsible\n      open={isOpen}\n      onOpenChange={setIsOpen}\n      className={cn(\"space-y-2\", className)}\n    >\n      <CollapsibleTrigger className=\"flex w-full items-center justify-between rounded-lg border bg-card p-4 hover:bg-accent transition-colors group\">\n        <div className=\"flex items-center gap-3\">\n          {isOpen ? (\n            <ChevronDown className=\"h-4 w-4 text-muted-foreground group-hover:text-foreground transition-colors\" />\n          ) : (\n            <ChevronRight className=\"h-4 w-4 text-muted-foreground group-hover:text-foreground transition-colors\" />\n          )}\n          <h3 className=\"text-base font-semibold\">{title}</h3>\n          {badge !== undefined && (\n            <Badge variant=\"secondary\" className=\"ml-2\">\n              {badge}\n            </Badge>\n          )}\n        </div>\n        <span className=\"text-xs text-muted-foreground\">\n          {isOpen ? \"Masquer\" : \"Afficher\"}\n        </span>\n      </CollapsibleTrigger>\n      <CollapsibleContent className=\"space-y-2\">\n        <div className=\"rounded-lg border bg-card p-4\">\n          {children}\n        </div>\n      </CollapsibleContent>\n    </Collapsible>\n  );\n};\n","import { useAuth } from \"@/hooks/useAuth\";\nimport { LazyIllustration } from \"@/components/illustrations/LazyIllustration\";\nimport { getIllustrationPath } from \"@/lib/utils\";\nimport { type IllustrationKey } from \"@/assets/illustrations/ivorian/illustrationPaths\";\n\nexport const WelcomeBanner = () => {\n  const { profile } = useAuth();\n\n  if (!profile) return null;\n\n  const roleConfig: Record<string, { illustration: IllustrationKey; message: string }> = {\n    locataire: {\n      illustration: \"apartment-visit\",\n      message: \"Trouvez votre logement idéal en Côte d'Ivoire\"\n    },\n    proprietaire: {\n      illustration: \"ivorian-family-house\",\n      message: \"Gérez vos biens en toute simplicité\"\n    },\n    agence: {\n      illustration: \"real-estate-agent\",\n      message: \"Développez votre activité immobilière\"\n    }\n  };\n\n  const config = roleConfig[profile.user_type || \"locataire\"];\n  const illustrationPath = getIllustrationPath(config.illustration);\n\n  return (\n    <div className=\"relative overflow-hidden rounded-2xl bg-gradient-to-br from-primary/10 via-secondary/5 to-background border border-border/50 shadow-sm\">\n      <div className=\"grid md:grid-cols-[1fr,300px] gap-6 p-6 md:p-8\">\n        <div className=\"space-y-3\">\n          <h1 className=\"text-2xl md:text-3xl font-bold text-foreground\">\n            Bienvenue, {profile.full_name?.split(' ')[0]} 👋\n          </h1>\n          <p className=\"text-lg text-muted-foreground\">\n            {config.message}\n          </p>\n        </div>\n        \n        <LazyIllustration\n          src={illustrationPath}\n          alt=\"Illustration dashboard\"\n          className=\"hidden md:block w-full h-[200px] rounded-xl\"\n          animate={true}\n        />\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { MainLayout } from '@/components/layout/MainLayout';\nimport { DynamicBreadcrumb } from '@/components/navigation/DynamicBreadcrumb';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Home, Building2, Users, BarChart3, Plus, Settings } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { RecommendationsCarousel } from '@/components/recommendations/RecommendationsCarousel';\nimport { PreferencesModal } from '@/components/recommendations/PreferencesModal';\nimport SearchHistory from '@/components/dashboard/SearchHistory';\nimport SmartReminders from '@/components/dashboard/SmartReminders';\nimport { ProfileScoreCardCompact } from '@/components/dashboard/ProfileScoreCardCompact';\nimport { QuickActionsGridCompact } from '@/components/dashboard/QuickActionsGridCompact';\nimport { ActivityTimeline } from '@/components/dashboard/ActivityTimeline';\nimport { ApplicationsOverviewCompact } from '@/components/dashboard/ApplicationsOverviewCompact';\nimport { MarketInsightsWidget } from '@/components/dashboard/MarketInsightsWidget';\nimport { CollapsibleSection } from '@/components/ui/collapsible-section';\nimport { StickyHeader } from '@/components/ui/sticky-header';\nimport { WelcomeBanner } from '@/components/dashboard/WelcomeBanner';\n\nconst Dashboard = () => {\n  const { profile, loading, user } = useAuth();\n  const navigate = useNavigate();\n  const [preferencesOpen, setPreferencesOpen] = useState(false);\n\n  // Redirection intelligente pour les agences\n  useEffect(() => {\n    if (profile?.user_type === 'agence' && !loading) {\n      navigate('/dashboard/agence');\n    }\n  }, [profile?.user_type, loading, navigate]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  if (!profile) {\n    return <Navigate to=\"/auth\" replace />;\n  }\n\n  const dashboardContent = {\n    locataire: {\n      title: 'Tableau de bord Locataire',\n      cards: [\n        { title: 'Mes Candidatures', icon: Home, description: 'Suivez vos candidatures', link: '/candidatures' },\n        { title: 'Mes Baux', icon: Building2, description: 'Consulter mes baux', link: '/baux' },\n        { title: 'Mes Favoris', icon: Building2, description: 'Biens sauvegardés', link: '/favoris' },\n      ],\n    },\n    proprietaire: {\n      title: 'Tableau de bord Propriétaire',\n      cards: [\n        { title: 'Mes Biens', icon: Building2, description: 'Gérer mes propriétés', link: '/mes-biens' },\n        { title: 'Candidatures Reçues', icon: Users, description: 'Gérer les candidatures', link: '/candidatures' },\n        { title: 'Statistiques', icon: BarChart3, description: 'Performance de vos biens', link: '/stats' },\n      ],\n    },\n    agence: {\n      title: 'Tableau de bord Agence',\n      cards: [\n        { title: 'Portfolio', icon: Building2, description: 'Tous les biens', link: '/portfolio' },\n        { title: 'Équipe', icon: Users, description: 'Gestion de l\\'équipe', link: '/equipe' },\n        { title: 'Statistiques', icon: BarChart3, description: 'Performance globale', link: '/stats' },\n      ],\n    },\n    admin_ansut: {\n      title: 'Tableau de bord Admin ANSUT',\n      cards: [\n        { title: 'Utilisateurs', icon: Users, description: 'Gestion des utilisateurs', link: '/admin/users' },\n        { title: 'Propriétés', icon: Building2, description: 'Toutes les propriétés', link: '/admin/properties' },\n        { title: 'Rapports', icon: BarChart3, description: 'Statistiques globales', link: '/admin/reports' },\n      ],\n    },\n  };\n\n  const content = dashboardContent[profile.user_type];\n\n  return (\n    <MainLayout>\n      <main className=\"container mx-auto px-4 py-6\">\n        <div className=\"max-w-7xl mx-auto space-y-6\">\n          <DynamicBreadcrumb />\n          \n          <WelcomeBanner />\n          \n          {/* Header */}\n          <StickyHeader>\n            <div className=\"flex justify-between items-center w-full\">\n              <div>\n                <h1 className=\"text-3xl font-bold\">{content.title}</h1>\n                <p className=\"text-sm text-muted-foreground mt-1\">Bienvenue, {profile.full_name}</p>\n              </div>\n              <div className=\"flex gap-2\">\n                {profile.user_type === 'locataire' && (\n                  <Button variant=\"outline\" size=\"sm\" onClick={() => setPreferencesOpen(true)}>\n                    <Settings className=\"mr-2 h-4 w-4\" />\n                    Préférences\n                  </Button>\n                )}\n                {profile.user_type === 'proprietaire' && (\n                  <Button asChild size=\"sm\">\n                    <Link to=\"/ajouter-bien\">\n                      <Plus className=\"mr-2 h-4 w-4\" />\n                      Ajouter un bien\n                    </Link>\n                  </Button>\n                )}\n              </div>\n            </div>\n          </StickyHeader>\n\n          {/* Tenant Dashboard - Optimized Layout */}\n          {user && profile.user_type === 'locataire' && (\n            <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4\">\n              {/* Sidebar gauche */}\n              <div className=\"lg:col-span-1 space-y-4\">\n                <ProfileScoreCardCompact />\n                <QuickActionsGridCompact />\n              </div>\n\n              {/* Contenu principal */}\n              <div className=\"lg:col-span-3 space-y-4\">\n                <ApplicationsOverviewCompact />\n                \n                <CollapsibleSection \n                  title=\"Rappels intelligents\" \n                  defaultOpen={false}\n                  storageKey=\"dashboard-reminders\"\n                >\n                  <SmartReminders />\n                </CollapsibleSection>\n\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 h-[280px]\">\n                  <MarketInsightsWidget className=\"h-full\" />\n                  <ActivityTimeline className=\"h-full overflow-auto\" />\n                </div>\n\n                <RecommendationsCarousel userId={user.id} limit={8} />\n\n                <CollapsibleSection \n                  title=\"Historique de recherches\" \n                  defaultOpen={false}\n                  storageKey=\"dashboard-search-history\"\n                >\n                  <SearchHistory />\n                </CollapsibleSection>\n              </div>\n            </div>\n          )}\n\n          {user && profile.user_type === 'proprietaire' && (\n            <>\n              <Card className=\"mb-4\">\n                <CardHeader>\n                  <div className=\"flex items-center gap-2\">\n                    <Users className=\"h-5 w-5 text-primary\" />\n                    <CardTitle>Locataires recommandés</CardTitle>\n                  </div>\n                  <CardDescription>\n                    Consultez vos candidatures pour voir les locataires les mieux notés pour chaque bien\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <Button asChild>\n                    <Link to=\"/mes-biens\">Voir mes biens et candidatures</Link>\n                  </Button>\n                </CardContent>\n              </Card>\n              \n              <Card className=\"mb-8\">\n                <CardHeader>\n                  <div className=\"flex items-center gap-2\">\n                    <Building2 className=\"h-5 w-5 text-primary\" />\n                    <CardTitle>Mes Mandats</CardTitle>\n                  </div>\n                  <CardDescription>\n                    Gérez vos mandats avec les agences immobilières\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <Button asChild>\n                    <Link to=\"/my-mandates\">Voir mes mandats</Link>\n                  </Button>\n                </CardContent>\n              </Card>\n            </>\n          )}\n\n          {/* Dashboard Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {content.cards.map((card, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n                <CardHeader>\n                  <div className=\"flex items-center gap-2\">\n                    <card.icon className=\"h-5 w-5 text-primary\" />\n                    <CardTitle>{card.title}</CardTitle>\n                  </div>\n                  <CardDescription>{card.description}</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <Button asChild variant=\"outline\" className=\"w-full\">\n                    <Link to={card.link}>Accéder</Link>\n                  </Button>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </main>\n\n      <PreferencesModal open={preferencesOpen} onOpenChange={setPreferencesOpen} />\n    </MainLayout>\n  );\n};\n\nexport default Dashboard;\n","import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { FileText, ArrowRight } from 'lucide-react';\nimport { Link } from 'react-router-dom';\n\ninterface ApplicationsStatusWidgetProps {\n  data?: {\n    total: number;\n    pending: number;\n    approved: number;\n    rejected: number;\n    recent: Array<{\n      id: string;\n      property_id: string;\n      property_title: string;\n      status: string;\n      created_at: string;\n      application_score: number;\n    }>;\n  };\n}\n\nexport const ApplicationsStatusWidget = ({ data }: ApplicationsStatusWidgetProps) => {\n  const getStatusBadge = (status: string) => {\n    const config: Record<string, { variant: 'default' | 'secondary' | 'destructive' | 'outline', label: string }> = {\n      pending: { variant: 'secondary', label: '🟡 En attente' },\n      approved: { variant: 'default', label: '🟢 Approuvée' },\n      rejected: { variant: 'destructive', label: '🔴 Rejetée' },\n    };\n    \n    const { variant, label } = config[status] || { variant: 'outline', label: status };\n    return <Badge variant={variant} className=\"text-xs\">{label}</Badge>;\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2 text-xl\">\n          <FileText className=\"h-5 w-5 text-primary\" />\n          Mes candidatures\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {/* Stats */}\n          <div className=\"grid grid-cols-3 gap-2 text-center\">\n            <div className=\"bg-secondary/20 rounded-lg p-3\">\n              <div className=\"text-2xl font-bold text-yellow-600\">{data?.pending || 0}</div>\n              <div className=\"text-xs text-muted-foreground\">En attente</div>\n            </div>\n            <div className=\"bg-secondary/20 rounded-lg p-3\">\n              <div className=\"text-2xl font-bold text-green-600\">{data?.approved || 0}</div>\n              <div className=\"text-xs text-muted-foreground\">Approuvées</div>\n            </div>\n            <div className=\"bg-secondary/20 rounded-lg p-3\">\n              <div className=\"text-2xl font-bold text-red-600\">{data?.rejected || 0}</div>\n              <div className=\"text-xs text-muted-foreground\">Rejetées</div>\n            </div>\n          </div>\n\n          {/* Recent applications */}\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-semibold text-muted-foreground\">Récentes</h4>\n            {data?.recent && data.recent.length > 0 ? (\n              <div className=\"space-y-2\">\n                {data.recent.slice(0, 3).map((app) => (\n                  <div key={app.id} className=\"flex items-center justify-between border rounded-lg p-2\">\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm font-medium truncate\">{app.property_title}</p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {new Date(app.created_at).toLocaleDateString('fr-FR')}\n                      </p>\n                    </div>\n                    {getStatusBadge(app.status)}\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-sm text-muted-foreground text-center py-4\">\n                Aucune candidature\n              </p>\n            )}\n          </div>\n\n          <Button asChild variant=\"outline\" className=\"w-full\">\n            <Link to=\"/applications\">\n              Voir toutes <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Link>\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { FileCheck, ArrowRight, Calendar, Home } from 'lucide-react';\nimport { Link } from 'react-router-dom';\n\ninterface ActiveLeaseWidgetProps {\n  data?: {\n    active: number;\n    total: number;\n    current: {\n      id: string;\n      property_id: string;\n      property_title: string;\n      monthly_rent: number;\n      start_date: string;\n      end_date: string;\n      status: string;\n    } | null;\n  };\n}\n\nexport const ActiveLeaseWidget = ({ data }: ActiveLeaseWidgetProps) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2 text-xl\">\n          <FileCheck className=\"h-5 w-5 text-primary\" />\n          Mon bail actif\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        {data?.current ? (\n          <div className=\"space-y-4\">\n            <div className=\"bg-primary/5 rounded-lg p-4 space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <Home className=\"h-4 w-4 text-primary\" />\n                  <h4 className=\"font-semibold\">{data.current.property_title}</h4>\n                </div>\n                <Badge variant=\"default\" className=\"bg-green-600\">Actif</Badge>\n              </div>\n\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-muted-foreground\">Loyer mensuel:</span>\n                  <span className=\"font-semibold\">{data.current.monthly_rent.toLocaleString()} FCFA</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-muted-foreground flex items-center gap-1\">\n                    <Calendar className=\"h-3 w-3\" />\n                    Période:\n                  </span>\n                  <span className=\"text-xs\">\n                    {new Date(data.current.start_date).toLocaleDateString('fr-FR')} - {new Date(data.current.end_date).toLocaleDateString('fr-FR')}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <Button asChild variant=\"outline\" className=\"w-full\">\n              <Link to=\"/leases\">\n                Voir les détails <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Link>\n            </Button>\n          </div>\n        ) : (\n          <div className=\"text-center py-8 space-y-3\">\n            <FileCheck className=\"h-12 w-12 text-muted-foreground mx-auto opacity-50\" />\n            <p className=\"text-sm text-muted-foreground\">Aucun bail actif</p>\n            <p className=\"text-xs text-muted-foreground\">\n              {data?.total && data.total > 0 \n                ? `${data.total} bail(x) total` \n                : 'Déposez une candidature pour louer un bien'}\n            </p>\n            <Button asChild variant=\"outline\" size=\"sm\">\n              <Link to=\"/recherche\">\n                Rechercher un bien\n              </Link>\n            </Button>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Wallet, ArrowRight, Download } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '@/lib/supabase';\nimport { toast } from '@/hooks/use-toast';\nimport { useState } from 'react';\nimport { logger } from '@/services/logger';\n\ninterface PaymentHistoryWidgetProps {\n  data?: {\n    total_paid: number;\n    pending: number;\n    count: number;\n    recent: Array<{\n      id: string;\n      amount: number;\n      payment_type: string;\n      status: string;\n      created_at: string;\n      completed_at: string | null;\n    }>;\n  };\n}\n\nexport const PaymentHistoryWidget = ({ data }: PaymentHistoryWidgetProps) => {\n  const [downloadingId, setDownloadingId] = useState<string | null>(null);\n\n  const handleDownloadReceipt = async (paymentId: string) => {\n    setDownloadingId(paymentId);\n    try {\n      const { data: pdfData, error } = await supabase.functions.invoke('generate-receipt', {\n        body: { payment_id: paymentId }\n      });\n\n      if (error) throw error;\n\n      // Créer un blob et télécharger\n      const blob = new Blob([Buffer.from(pdfData.pdf, 'base64')], { type: 'application/pdf' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `recu-${paymentId}.pdf`;\n      a.click();\n      window.URL.revokeObjectURL(url);\n\n      toast({\n        title: 'Reçu téléchargé',\n        description: 'Le reçu a été téléchargé avec succès',\n      });\n    } catch (error) {\n      logger.error('Failed to download receipt', { paymentId });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de télécharger le reçu',\n        variant: 'destructive',\n      });\n    } finally {\n      setDownloadingId(null);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    return status === 'completed' \n      ? <Badge variant=\"default\" className=\"bg-green-600 text-xs\">Payé</Badge>\n      : <Badge variant=\"secondary\" className=\"text-xs\">En attente</Badge>;\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2 text-xl\">\n          <Wallet className=\"h-5 w-5 text-primary\" />\n          Mes paiements\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {/* Stats */}\n          <div className=\"grid grid-cols-2 gap-2 text-center\">\n            <div className=\"bg-green-50 dark:bg-green-950/20 rounded-lg p-3\">\n              <div className=\"text-xl font-bold text-green-600\">\n                {(data?.total_paid || 0).toLocaleString()}\n              </div>\n              <div className=\"text-xs text-muted-foreground\">Total payé (FCFA)</div>\n            </div>\n            <div className=\"bg-yellow-50 dark:bg-yellow-950/20 rounded-lg p-3\">\n              <div className=\"text-xl font-bold text-yellow-600\">\n                {(data?.pending || 0).toLocaleString()}\n              </div>\n              <div className=\"text-xs text-muted-foreground\">En attente (FCFA)</div>\n            </div>\n          </div>\n\n          {/* Recent payments */}\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-semibold text-muted-foreground\">Paiements récents</h4>\n            {data?.recent && data.recent.length > 0 ? (\n              <div className=\"space-y-2\">\n                {data.recent.slice(0, 3).map((payment) => (\n                  <div key={payment.id} className=\"flex items-center justify-between border rounded-lg p-2\">\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm font-medium\">{payment.amount.toLocaleString()} FCFA</p>\n                      <p className=\"text-xs text-muted-foreground capitalize\">\n                        {payment.payment_type.replace('_', ' ')}\n                      </p>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      {getStatusBadge(payment.status)}\n                      {payment.status === 'completed' && (\n                        <Button \n                          size=\"sm\" \n                          variant=\"ghost\"\n                          onClick={() => handleDownloadReceipt(payment.id)}\n                          disabled={downloadingId === payment.id}\n                        >\n                          <Download className=\"h-4 w-4\" />\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-sm text-muted-foreground text-center py-4\">\n                Aucun paiement\n              </p>\n            )}\n          </div>\n\n          <Button asChild variant=\"outline\" className=\"w-full\">\n            <Link to=\"/payments\">\n              Voir tous <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Link>\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Wrench, ArrowRight, AlertCircle } from 'lucide-react';\nimport { Link } from 'react-router-dom';\n\ninterface MaintenanceRequestsWidgetProps {\n  data?: {\n    total: number;\n    pending: number;\n    in_progress: number;\n    completed: number;\n    recent: Array<{\n      id: string;\n      property_id: string;\n      title: string;\n      status: string;\n      urgency: string;\n      created_at: string;\n    }>;\n  };\n}\n\nexport const MaintenanceRequestsWidget = ({ data }: MaintenanceRequestsWidgetProps) => {\n  const getStatusBadge = (status: string) => {\n    const config: Record<string, { variant: 'default' | 'secondary' | 'destructive' | 'outline', label: string }> = {\n      pending: { variant: 'secondary', label: 'En attente' },\n      in_progress: { variant: 'default', label: 'En cours' },\n      completed: { variant: 'outline', label: 'Complété' },\n    };\n    \n    const { variant, label } = config[status] || { variant: 'outline', label: status };\n    return <Badge variant={variant} className=\"text-xs\">{label}</Badge>;\n  };\n\n  const getUrgencyIcon = (urgency: string) => {\n    return urgency === 'urgent' \n      ? <AlertCircle className=\"h-3 w-3 text-red-600\" />\n      : null;\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2 text-xl\">\n          <Wrench className=\"h-5 w-5 text-primary\" />\n          Maintenance\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {/* Stats */}\n          <div className=\"grid grid-cols-3 gap-2 text-center\">\n            <div className=\"bg-secondary/20 rounded-lg p-3\">\n              <div className=\"text-2xl font-bold text-yellow-600\">{data?.pending || 0}</div>\n              <div className=\"text-xs text-muted-foreground\">En attente</div>\n            </div>\n            <div className=\"bg-secondary/20 rounded-lg p-3\">\n              <div className=\"text-2xl font-bold text-blue-600\">{data?.in_progress || 0}</div>\n              <div className=\"text-xs text-muted-foreground\">En cours</div>\n            </div>\n            <div className=\"bg-secondary/20 rounded-lg p-3\">\n              <div className=\"text-2xl font-bold text-green-600\">{data?.completed || 0}</div>\n              <div className=\"text-xs text-muted-foreground\">Complétés</div>\n            </div>\n          </div>\n\n          {/* Recent requests */}\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-semibold text-muted-foreground\">Demandes récentes</h4>\n            {data?.recent && data.recent.length > 0 ? (\n              <div className=\"space-y-2\">\n                {data.recent.slice(0, 3).map((request) => (\n                  <div key={request.id} className=\"flex items-center justify-between border rounded-lg p-2\">\n                    <div className=\"flex-1 min-w-0 flex items-center gap-2\">\n                      {getUrgencyIcon(request.urgency)}\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm font-medium truncate\">{request.title}</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                          {new Date(request.created_at).toLocaleDateString('fr-FR')}\n                        </p>\n                      </div>\n                    </div>\n                    {getStatusBadge(request.status)}\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-sm text-muted-foreground text-center py-4\">\n                Aucune demande de maintenance\n              </p>\n            )}\n          </div>\n\n          <Button asChild variant=\"outline\" className=\"w-full\">\n            <Link to=\"/maintenance\">\n              Voir toutes <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Link>\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useAuth } from '@/hooks/useAuth';\nimport { supabase } from '@/lib/supabase';\nimport { useQuery } from '@tanstack/react-query';\nimport { DynamicBreadcrumb } from '@/components/navigation/DynamicBreadcrumb';\nimport Navbar from '@/components/Navbar';\nimport Footer from '@/components/Footer';\nimport { ApplicationsStatusWidget } from '@/components/dashboard/tenant/ApplicationsStatusWidget';\nimport { ActiveLeaseWidget } from '@/components/dashboard/tenant/ActiveLeaseWidget';\nimport { PaymentHistoryWidget } from '@/components/dashboard/tenant/PaymentHistoryWidget';\nimport { MaintenanceRequestsWidget } from '@/components/dashboard/tenant/MaintenanceRequestsWidget';\nimport { LayoutDashboard } from 'lucide-react';\n\nconst TenantDashboard = () => {\n  const { user } = useAuth();\n\n  const { data: dashboardData, isLoading } = useQuery({\n    queryKey: ['tenant-dashboard', user?.id],\n    queryFn: async () => {\n      if (!user) throw new Error('User not authenticated');\n      \n      const { data, error } = await supabase.rpc('get_tenant_dashboard_summary', {\n        p_tenant_id: user.id\n      });\n\n      if (error) throw error;\n      return data as {\n        applications: {\n          total: number;\n          pending: number;\n          approved: number;\n          rejected: number;\n          recent: any[];\n        };\n        leases: {\n          active: number;\n          total: number;\n          current: any;\n        };\n        payments: {\n          total_paid: number;\n          pending: number;\n          count: number;\n          recent: any[];\n        };\n        maintenance: {\n          total: number;\n          pending: number;\n          in_progress: number;\n          completed: number;\n          recent: any[];\n        };\n      };\n    },\n    enabled: !!user,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <Navbar />\n      \n      <main className=\"flex-1 container mx-auto px-4 py-8 pt-24\">\n        <div className=\"mb-10\">\n          <DynamicBreadcrumb />\n          \n          <h1 className=\"text-4xl font-bold mb-3 mt-6 flex items-center gap-3\">\n            <LayoutDashboard className=\"h-8 w-8 text-primary\" />\n            Tableau de bord Locataire\n          </h1>\n          <p className=\"text-lg text-muted-foreground\">\n            Vue d'ensemble de vos candidatures, baux et paiements\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <ApplicationsStatusWidget data={dashboardData?.applications} />\n          <ActiveLeaseWidget data={dashboardData?.leases} />\n          <PaymentHistoryWidget data={dashboardData?.payments} />\n          <MaintenanceRequestsWidget data={dashboardData?.maintenance} />\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default TenantDashboard;\n"],"names":["Shimmer","className","cn","jsx","CulturalBadge","children","variant","variants","textColors","ModernAppSidebar","profile","user","useAuth","canAccessAdminDashboard","usePermissions","location","useLocation","open","useSidebar","isActive","path","getUserInitials","n","commonLinks","Home","Search","MapPin","userLinks","LayoutDashboard","Heart","MessageSquare","tenantLinks","FileText","CreditCard","ownerLinks","Building2","PlusCircle","adminLinks","Shield","ShieldCheck","otherLinks","HelpCircle","settingsLinks","Settings","renderMenuItems","links","showBadge","link","active","SidebarMenuItem","SidebarMenuButton","Link","jsxs","motion","Fragment","Badge","Sidebar","SidebarHeader","monToitLogo","SidebarContent","Avatar","AvatarFallback","Bell","SidebarGroup","SidebarGroupLabel","SidebarGroupContent","SidebarMenu","SidebarFooter","Star","BottomNav","navItems","Map","User","item","Icon","MainLayout","showSidebar","SidebarProvider","SidebarInset","Navbar","Footer","Collapsible","CollapsiblePrimitive.Root","CollapsibleTrigger","CollapsiblePrimitive.CollapsibleTrigger","CollapsibleContent","CollapsiblePrimitive.CollapsibleContent","LazyIllustration","src","alt","fallback","animate","isLoaded","setIsLoaded","useState","isInView","setIsInView","error","setError","imgRef","useRef","useEffect","observer","entry","handleLoad","handleError","PreferencesModal","onOpenChange","updatePreferences","useRecommendations","preferences","setPreferences","cityInput","setCityInput","loading","setLoading","loadPreferences","data","supabase","handleSave","toast","city","logger","addCity","trimmedCity","removeCity","c","togglePropertyType","type","types","t","propertyTypes","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","Input","e","Button","Switch","checked","RecommendationsCarousel","userId","limit","emblaRef","emblaApi","useEmblaCarousel","properties","setProperties","canScrollPrev","setCanScrollPrev","canScrollNext","setCanScrollNext","prefsData","query","_a","onSelect","Card","CardContent","CardHeader","CardTitle","Sparkles","ChevronLeft","ChevronRight","property","PropertyCard","SearchHistory","history","setHistory","stats","setStats","navigate","useNavigate","useToast","fetchSearchHistory","calculateStats","searches","cityCount","totalBudget","budgetCount","search","topCities","count","a","b","relaunhSearch","filters","params","_b","Clock","TrendingUp","format","fr","DollarSign","_c","_d","RefreshCw","SmartReminders","reminders","setReminders","fetchReminders","dismissReminder","reminderId","prev","r","updateFrequency","frequency","getReminderIcon","i","reminder","DialogTrigger","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","X","ExternalLink","TenantScoreMeter","score","hasTriggeredConfetti","confetti","getColor","TooltipProvider","Tooltip","TooltipTrigger","Info","TooltipContent","PieChart","Pie","Cell","ProfileScoreCardCompact","tenantScore","setTenantScore","verificationCount","isFullyVerified","CheckCircle2","AlertCircle","quickActions","QuickActionsGridCompact","action","ActivityTimeline","activities","setActivities","applications","favorites","combinedActivities","app","fav","formatTimestamp","timestamp","date","diffInHours","activity","index","ApplicationsOverviewCompact","pending","accepted","total","CheckCircle","MarketInsightsWidget","insights","setInsights","functionError","err","Skeleton","CardDescription","trend","TrendingDown","CollapsibleSection","title","defaultOpen","badge","storageKey","isOpen","setIsOpen","React.useState","saved","React.useEffect","ChevronDown","WelcomeBanner","config","illustrationPath","getIllustrationPath","Dashboard","preferencesOpen","setPreferencesOpen","Navigate","content","Users","BarChart3","DynamicBreadcrumb","StickyHeader","Plus","card","ApplicationsStatusWidget","getStatusBadge","status","label","ArrowRight","ActiveLeaseWidget","FileCheck","Calendar","PaymentHistoryWidget","downloadingId","setDownloadingId","handleDownloadReceipt","paymentId","pdfData","blob","url","Wallet","payment","Download","MaintenanceRequestsWidget","getUrgencyIcon","urgency","Wrench","request","TenantDashboard","dashboardData","isLoading","useQuery"],"mappings":"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"}