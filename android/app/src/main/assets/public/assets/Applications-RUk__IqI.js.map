{"version":3,"file":"Applications-RUk__IqI.js","sources":["../../src/components/application/ApplicationDetail.tsx","../../src/components/application/ApplicationStatusTracker.tsx","../../src/components/application/ApplicationsTableView.tsx","../../src/pages/Applications.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport Navbar from '@/components/Navbar';\nimport Footer from '@/components/Footer';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { CheckCircle, XCircle, FileText, Download, ArrowLeft } from 'lucide-react';\nimport { toast } from '@/hooks/use-toast';\nimport { TenantScoreBadge } from '@/components/ui/tenant-score-badge';\nimport { TenantScoreBreakdown } from '@/components/application/TenantScoreBreakdown';\nimport { logger } from '@/services/logger';\nimport type { Application } from '@/types';\nimport { useUserPhone } from '@/hooks/useUserPhone';\n\n\ninterface ScoringData {\n  score: number;\n  recommendation: 'approved' | 'conditional' | 'rejected';\n  factors: Record<string, unknown>;\n  breakdown?: {\n    identity_verification: number;\n    face_verification: number;\n    payment_history: number;\n    documents: number;\n    profile_completeness: number;\n  };\n}\n\ninterface ApplicationDetailProps {\n  application: Application & {\n    properties: {\n      title: string;\n      monthly_rent: number;\n      owner_id: string;\n      deposit_amount: number | null;\n      charges_amount: number | null;\n    };\n    profiles: {\n      full_name: string;\n      phone: string | null;\n      oneci_verified: boolean;\n      cnam_verified: boolean;\n    };\n  };\n  onClose: () => void;\n  onStatusUpdate: (applicationId: string, status: string) => void;\n  isOwner: boolean;\n}\n\nconst ApplicationDetail = ({ application, onClose, onStatusUpdate, isOwner }: ApplicationDetailProps) => {\n  const [scoring, setScoring] = useState<ScoringData | null>(null);\n  const [loadingScore, setLoadingScore] = useState(false);\n  const { phone } = useUserPhone(application.applicant_id);\n\n  useEffect(() => {\n    if (isOwner && application.status === 'pending') {\n      calculateScore();\n    }\n  }, [application.id]);\n\n  const calculateScore = async () => {\n    setLoadingScore(true);\n    try {\n      const { data, error } = await supabase.functions.invoke('tenant-scoring', {\n        body: {\n          applicantId: application.applicant_id,\n          propertyId: application.property_id,\n          monthlyRent: application.properties.monthly_rent,\n        },\n      });\n\n      if (error) throw error;\n      setScoring(data);\n\n      // Mettre à jour le score dans la DB\n      await supabase\n        .from('rental_applications')\n        .update({ application_score: data.score })\n        .eq('id', application.id);\n\n    } catch (error) {\n      logger.error('Error calculating tenant score', { error, applicationId: application.id });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de calculer le score',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoadingScore(false);\n    }\n  };\n\n  const getRecommendationBadge = (recommendation: string) => {\n    const variants: Record<string, 'default' | 'secondary' | 'destructive'> = {\n      'approved': 'default',\n      'conditional': 'secondary',\n      'rejected': 'destructive',\n    };\n\n    const labels: Record<string, string> = {\n      'approved': 'Recommandé',\n      'conditional': 'Conditionnel',\n      'rejected': 'Non recommandé',\n    };\n\n    return <Badge variant={variants[recommendation]}>{labels[recommendation]}</Badge>;\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <Navbar />\n      \n      <main className=\"flex-1 container mx-auto px-4 py-8 max-w-5xl\">\n        <Button\n          variant=\"ghost\"\n          onClick={onClose}\n          className=\"mb-6\"\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Retour\n        </Button>\n\n        <div className=\"grid gap-6\">\n          {/* En-tête */}\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-start justify-between\">\n                <div>\n                  <CardTitle className=\"text-2xl\">\n                    {application.properties.title}\n                  </CardTitle>\n                  <CardDescription className=\"mt-2\">\n                    Candidature de {application.profiles.full_name}\n                  </CardDescription>\n                </div>\n                <Badge variant={application.status === 'approved' ? 'default' : 'secondary'}>\n                  {application.status === 'pending' ? 'En attente' : \n                   application.status === 'approved' ? 'Approuvée' : 'Rejetée'}\n                </Badge>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Loyer mensuel</p>\n                  <p className=\"font-medium\">{application.properties.monthly_rent.toLocaleString()} FCFA</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Date de candidature</p>\n                  <p className=\"font-medium\">\n                    {new Date(application.created_at).toLocaleDateString('fr-FR')}\n                  </p>\n                </div>\n                {phone && (\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Téléphone</p>\n                    <p className=\"font-medium\">{phone}</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Vérifications */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Vérifications</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  {application.profiles.oneci_verified ? (\n                    <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                  ) : (\n                    <XCircle className=\"h-5 w-5 text-muted-foreground\" />\n                  )}\n                  <span>Identité ONECI</span>\n                </div>\n                <Badge variant={application.profiles.oneci_verified ? 'default' : 'secondary'}>\n                  {application.profiles.oneci_verified ? 'Vérifiée' : 'Non vérifiée'}\n                </Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  {application.profiles.cnam_verified ? (\n                    <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                  ) : (\n                    <XCircle className=\"h-5 w-5 text-muted-foreground\" />\n                  )}\n                  <span>Employeur CNAM</span>\n                </div>\n                <Badge variant={application.profiles.cnam_verified ? 'default' : 'secondary'}>\n                  {application.profiles.cnam_verified ? 'Vérifiée' : 'Non vérifiée'}\n                </Badge>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Score et recommandation */}\n          {isOwner && (scoring || application.application_score > 0) && (\n            <TenantScoreBreakdown \n              score={scoring?.score || application.application_score}\n              breakdown={scoring?.breakdown}\n              recommendation={scoring?.recommendation}\n            />\n          )}\n\n          {/* Lettre de motivation */}\n          {application.cover_letter && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Lettre de motivation</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-sm whitespace-pre-wrap\">{application.cover_letter}</p>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Documents */}\n          {application.documents && application.documents.length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Documents justificatifs ({application.documents.length})</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  {application.documents.map((doc: any, index: number) => (\n                    <div\n                      key={index}\n                      className=\"flex items-center justify-between p-3 bg-muted/50 rounded-lg\"\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <FileText className=\"h-5 w-5 text-muted-foreground\" />\n                        <div>\n                          <p className=\"text-sm font-medium\">{doc.name}</p>\n                          <p className=\"text-xs text-muted-foreground\">{doc.type}</p>\n                        </div>\n                      </div>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        asChild\n                      >\n                        <a href={doc.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                          <Download className=\"h-4 w-4\" />\n                        </a>\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Actions */}\n          {isOwner && application.status === 'pending' && (\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"flex gap-4\">\n                  <Button\n                    variant=\"destructive\"\n                    onClick={() => onStatusUpdate(application.id, 'rejected')}\n                    className=\"flex-1\"\n                  >\n                    <XCircle className=\"h-4 w-4 mr-2\" />\n                    Rejeter\n                  </Button>\n                  <Button\n                    onClick={() => onStatusUpdate(application.id, 'approved')}\n                    className=\"flex-1\"\n                  >\n                    <CheckCircle className=\"h-4 w-4 mr-2\" />\n                    Approuver\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {isOwner && application.status === 'approved' && (\n            <Card>\n              <CardContent className=\"pt-6\">\n                <Button\n                  onClick={async () => {\n                    try {\n                      const startDate = new Date();\n                      const endDate = new Date();\n                      endDate.setFullYear(endDate.getFullYear() + 1);\n\n                      const { error } = await supabase.from(\"leases\").insert({\n                        property_id: application.property_id,\n                        landlord_id: application.properties.owner_id,\n                        tenant_id: application.applicant_id,\n                        monthly_rent: application.properties.monthly_rent,\n                        deposit_amount: application.properties.deposit_amount,\n                        charges_amount: application.properties.charges_amount,\n                        lease_type: \"location_meublee\",\n                        start_date: startDate.toISOString().split(\"T\")[0],\n                        end_date: endDate.toISOString().split(\"T\")[0],\n                        status: \"draft\",\n                      });\n\n                      if (error) throw error;\n\n                      toast({\n                        title: \"Bail créé\",\n                        description: \"Le bail a été créé avec succès. Rendez-vous dans 'Baux' pour le signer.\",\n                      });\n                    } catch (error: any) {\n                      toast({\n                        title: \"Erreur\",\n                        description: error.message,\n                        variant: \"destructive\",\n                      });\n                    }\n                  }}\n                  className=\"w-full\"\n                >\n                  Créer le bail\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default ApplicationDetail;\n","import { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Clock, CheckCircle, XCircle, AlertCircle, Calendar } from 'lucide-react';\nimport { formatDistanceToNow } from 'date-fns';\nimport { fr } from 'date-fns/locale';\n\ntype ApplicationStatus = 'pending' | 'approved' | 'rejected' | 'withdrawn';\n\ninterface ApplicationStatusTrackerProps {\n  status: ApplicationStatus;\n  createdAt: string;\n  reviewedAt?: string | null;\n  processingDeadline?: string | null;\n  isOverdue?: boolean;\n  autoProcessed?: boolean;\n}\n\nexport const ApplicationStatusTracker = ({\n  status,\n  createdAt,\n  reviewedAt,\n  processingDeadline,\n  isOverdue,\n  autoProcessed\n}: ApplicationStatusTrackerProps) => {\n  const getStatusConfig = () => {\n    switch (status) {\n      case 'pending':\n        if (isOverdue) {\n          return {\n            icon: AlertCircle,\n            color: 'text-orange-600',\n            bgColor: 'bg-orange-50 dark:bg-orange-950',\n            borderColor: 'border-orange-200 dark:border-orange-800',\n            label: 'En cours d\\'examen',\n            description: 'Votre dossier est actuellement en cours de traitement approfondi.'\n          };\n        }\n        return {\n          icon: Clock,\n          color: 'text-blue-600',\n          bgColor: 'bg-blue-50 dark:bg-blue-950',\n          borderColor: 'border-blue-200 dark:border-blue-800',\n          label: 'En attente de traitement',\n          description: 'Votre candidature sera traitée sous 48-72h.'\n        };\n      case 'approved':\n        return {\n          icon: CheckCircle,\n          color: 'text-green-600',\n          bgColor: 'bg-green-50 dark:bg-green-950',\n          borderColor: 'border-green-200 dark:border-green-800',\n          label: 'Candidature approuvée',\n          description: autoProcessed \n            ? 'Votre candidature a été approuvée automatiquement après le délai de traitement.'\n            : 'Félicitations ! Le propriétaire a accepté votre candidature.'\n        };\n      case 'rejected':\n        return {\n          icon: XCircle,\n          color: 'text-red-600',\n          bgColor: 'bg-red-50 dark:bg-red-950',\n          borderColor: 'border-red-200 dark:border-red-800',\n          label: 'Candidature non retenue',\n          description: autoProcessed\n            ? 'Votre candidature n\\'a pas été retenue dans le délai imparti.'\n            : 'Le propriétaire a choisi un autre candidat pour ce bien.'\n        };\n      case 'withdrawn':\n        return {\n          icon: XCircle,\n          color: 'text-gray-600',\n          bgColor: 'bg-gray-50 dark:bg-gray-950',\n          borderColor: 'border-gray-200 dark:border-gray-800',\n          label: 'Candidature retirée',\n          description: 'Vous avez retiré votre candidature pour ce bien.'\n        };\n      default:\n        return {\n          icon: Clock,\n          color: 'text-gray-600',\n          bgColor: 'bg-gray-50 dark:bg-gray-950',\n          borderColor: 'border-gray-200 dark:border-gray-800',\n          label: 'Statut inconnu',\n          description: ''\n        };\n    }\n  };\n\n  const config = getStatusConfig();\n  const Icon = config.icon;\n\n  const getTimeRemaining = () => {\n    if (!processingDeadline || status !== 'pending') return null;\n\n    const deadline = new Date(processingDeadline);\n    const now = new Date();\n    const diffMs = deadline.getTime() - now.getTime();\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n\n    if (isOverdue) {\n      return null;\n    }\n\n    if (diffHours < 24) {\n      return `Moins de 24h`;\n    } else if (diffHours < 48) {\n      return `Moins de 48h`;\n    } else {\n      const diffDays = Math.ceil(diffHours / 24);\n      return `${diffDays} jours`;\n    }\n  };\n\n  const timeRemaining = getTimeRemaining();\n\n  return (\n    <Card className={`${config.bgColor} ${config.borderColor} border-2`}>\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className={`p-2 rounded-full ${config.bgColor}`}>\n              <Icon className={`h-6 w-6 ${config.color}`} />\n            </div>\n            <div>\n              <CardTitle className={`text-xl ${config.color}`}>\n                {config.label}\n              </CardTitle>\n              {autoProcessed && (\n                <Badge variant=\"outline\" className=\"mt-1 text-xs\">\n                  Traité automatiquement\n                </Badge>\n              )}\n            </div>\n          </div>\n          <Badge variant={status === 'approved' ? 'default' : status === 'rejected' ? 'destructive' : 'secondary'}>\n            {status === 'pending' ? 'En cours' : status === 'approved' ? 'Approuvé' : status === 'rejected' ? 'Rejeté' : 'Retiré'}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <p className=\"text-sm text-muted-foreground\">\n          {config.description}\n        </p>\n\n        {/* Délai indicatif pour candidatures en attente */}\n        {status === 'pending' && !isOverdue && (\n          <div className=\"p-4 rounded-lg bg-background/60 border\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Clock className=\"h-4 w-4 text-muted-foreground\" />\n              <span className=\"font-medium text-sm\">Délai indicatif de traitement</span>\n            </div>\n            <p className=\"text-sm text-muted-foreground\">\n              Votre dossier sera traité sous 48-72 heures\n            </p>\n            {timeRemaining && processingDeadline && (\n              <div className=\"mt-3 flex items-center gap-2 text-xs text-muted-foreground\">\n                <AlertCircle className=\"h-3 w-3\" />\n                <span>Temps restant estimé : {timeRemaining}</span>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Message rassurant pour candidatures en retard */}\n        {status === 'pending' && isOverdue && (\n          <div className=\"p-4 rounded-lg bg-background/60 border border-orange-200 dark:border-orange-800\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <AlertCircle className=\"h-4 w-4 text-orange-600\" />\n              <span className=\"font-medium text-sm\">Examen approfondi en cours</span>\n            </div>\n            <p className=\"text-sm text-muted-foreground\">\n              Votre dossier nécessite une analyse plus détaillée. Nous vous tiendrons informé(e) prochainement.\n            </p>\n          </div>\n        )}\n\n        {/* Timeline des dates */}\n        <div className=\"space-y-2 pt-2 border-t\">\n          <div className=\"flex items-center gap-2 text-sm\">\n            <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n            <span className=\"text-muted-foreground\">Soumise :</span>\n            <span className=\"font-medium\">\n              {new Date(createdAt).toLocaleDateString('fr-FR', {\n                day: 'numeric',\n                month: 'long',\n                year: 'numeric'\n              })}\n            </span>\n            <span className=\"text-xs text-muted-foreground\">\n              ({formatDistanceToNow(new Date(createdAt), { addSuffix: true, locale: fr })})\n            </span>\n          </div>\n\n          {reviewedAt && (\n            <div className=\"flex items-center gap-2 text-sm\">\n              <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n              <span className=\"text-muted-foreground\">Traitée :</span>\n              <span className=\"font-medium\">\n                {new Date(reviewedAt).toLocaleDateString('fr-FR', {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n                })}\n              </span>\n              <span className=\"text-xs text-muted-foreground\">\n                ({formatDistanceToNow(new Date(reviewedAt), { addSuffix: true, locale: fr })})\n              </span>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","import { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Eye, Home } from 'lucide-react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\n\ninterface ApplicationDisplay {\n  id: string;\n  property_id: string;\n  applicant_id: string;\n  status: string;\n  created_at: string;\n  application_score: number | null;\n  is_overdue?: boolean;\n  properties: {\n    title: string;\n    monthly_rent: number;\n    city: string;\n  };\n  profiles: {\n    full_name: string;\n    oneci_verified: boolean;\n    cnam_verified: boolean;\n  };\n}\n\ninterface ApplicationsTableViewProps {\n  applications: ApplicationDisplay[];\n  onSelect: (application: ApplicationDisplay) => void;\n  isOwner: boolean;\n}\n\nconst STATUS_VARIANTS: Record<string, 'default' | 'secondary' | 'destructive' | 'outline'> = {\n  'pending': 'secondary',\n  'approved': 'default',\n  'rejected': 'destructive',\n  'withdrawn': 'outline',\n};\n\nconst STATUS_LABELS: Record<string, string> = {\n  'pending': 'En attente',\n  'approved': 'Approuvée',\n  'rejected': 'Rejetée',\n  'withdrawn': 'Retirée',\n};\n\nexport const ApplicationsTableView = ({\n  applications,\n  onSelect,\n  isOwner,\n}: ApplicationsTableViewProps) => {\n  return (\n    <div className=\"rounded-md border\">\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>Bien</TableHead>\n            <TableHead>{isOwner ? 'Candidat' : 'Ville'}</TableHead>\n            <TableHead className=\"w-32\">Loyer</TableHead>\n            <TableHead className=\"text-center w-20\">Score</TableHead>\n            <TableHead className=\"w-32\">Statut</TableHead>\n            <TableHead className=\"w-28\">Déposée le</TableHead>\n            <TableHead className=\"w-20 text-right\">Actions</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {applications.map((application) => (\n            <TableRow key={application.id} className=\"hover:bg-muted/50\">\n              <TableCell>\n                <div className=\"flex items-center gap-2\">\n                  <Home className=\"h-4 w-4 text-muted-foreground flex-shrink-0\" />\n                  <span className=\"truncate max-w-[200px] font-medium\">\n                    {application.properties.title}\n                  </span>\n                </div>\n              </TableCell>\n              <TableCell>\n                {isOwner ? (\n                  <div className=\"flex items-center gap-2\">\n                    <span>{application.profiles.full_name}</span>\n                    {application.profiles.oneci_verified && (\n                      <Badge variant=\"outline\" className=\"text-xs\">ONECI</Badge>\n                    )}\n                  </div>\n                ) : (\n                  application.properties.city\n                )}\n              </TableCell>\n              <TableCell className=\"font-medium\">\n                {application.properties.monthly_rent.toLocaleString()} FCFA\n              </TableCell>\n              <TableCell className=\"text-center\">\n                {application.application_score > 0 ? (\n                  <Badge variant=\"default\" className=\"text-xs\">\n                    {application.application_score}/100\n                  </Badge>\n                ) : (\n                  '-'\n                )}\n              </TableCell>\n              <TableCell>\n                <div className=\"flex items-center gap-2\">\n                  <Badge variant={STATUS_VARIANTS[application.status] || 'outline'}>\n                    {STATUS_LABELS[application.status] || application.status}\n                  </Badge>\n                  {application.is_overdue && (\n                    <Badge variant=\"destructive\" className=\"text-xs\">\n                      En retard\n                    </Badge>\n                  )}\n                </div>\n              </TableCell>\n              <TableCell className=\"text-sm text-muted-foreground\">\n                {new Date(application.created_at).toLocaleDateString('fr-FR')}\n              </TableCell>\n              <TableCell className=\"text-right\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => onSelect(application)}\n                >\n                  <Eye className=\"h-4 w-4\" />\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};","import { useEffect, useState, useMemo } from 'react';\nimport { useAuth } from '@/hooks/useAuth';\nimport { supabase } from '@/lib/supabase';\nimport Navbar from '@/components/Navbar';\nimport Footer from '@/components/Footer';\nimport { DynamicBreadcrumb } from '@/components/navigation/DynamicBreadcrumb';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Dialog, DialogContent } from '@/components/ui/dialog';\nimport { toast } from '@/hooks/use-toast';\nimport { CheckCircle, XCircle, Eye, FileText } from 'lucide-react';\nimport ApplicationDetail from '@/components/application/ApplicationDetail';\nimport { ApplicationStatusTracker } from '@/components/application/ApplicationStatusTracker';\nimport { ApplicationsTableView } from '@/components/application/ApplicationsTableView';\nimport ViewToggle from '@/components/properties/ViewToggle';\nimport { logger } from '@/services/logger';\n\nimport type { ApplicationStatus } from '@/types';\n\ntype ApplicationDisplay = {\n  id: string;\n  property_id: string;\n  applicant_id: string;\n  status: ApplicationStatus;\n  cover_letter: string | null;\n  documents: any[];\n  application_score: number | null;\n  created_at: string;\n  reviewed_at: string | null;\n  updated_at: string;\n  processing_deadline?: string | null;\n  is_overdue?: boolean;\n  auto_processed?: boolean;\n  auto_action_type?: string | null;\n  properties: {\n    title: string;\n    monthly_rent: number;\n    city: string;\n    owner_id: string;\n    deposit_amount: number | null;\n    charges_amount: number | null;\n  };\n  profiles: {\n    full_name: string;\n    phone: string | null;\n    oneci_verified: boolean;\n    cnam_verified: boolean;\n  };\n};\n\nconst Applications = () => {\n  const { user, profile } = useAuth();\n  const [applications, setApplications] = useState<ApplicationDisplay[]>([]);\n  const [selectedApplication, setSelectedApplication] = useState<ApplicationDisplay | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [viewMode, setViewMode] = useState<'cards' | 'table'>('table');\n  const [activeFilter, setActiveFilter] = useState('all');\n\n  useEffect(() => {\n    if (user) {\n      fetchApplications();\n    }\n  }, [user]);\n\n  const fetchApplications = async () => {\n    if (!user) return;\n\n    try {\n      let query = supabase\n        .from('rental_applications')\n        .select('*, processing_deadline, is_overdue, auto_processed, auto_action_type')\n        .order('created_at', { ascending: false });\n\n      // Si propriétaire, voir les candidatures sur ses biens\n      if (profile?.user_type === 'proprietaire' || profile?.user_type === 'agence') {\n        const { data: myProperties } = await supabase\n          .from('properties')\n          .select('id')\n          .eq('owner_id', user.id);\n\n        const propertyIds = myProperties?.map(p => p.id) || [];\n        query = query.in('property_id', propertyIds);\n      } else {\n        // Si locataire, voir ses propres candidatures\n        query = query.eq('applicant_id', user.id);\n      }\n\n      const { data: applicationsData, error } = await query;\n\n      if (error) throw error;\n\n      // Enrichir les données avec les infos des propriétés et profils\n      const enrichedApplications = await Promise.all(\n        (applicationsData || []).map(async (app: any) => {\n          // Récupérer les infos de la propriété\n          const { data: property } = await supabase\n            .from('properties')\n            .select('title, monthly_rent, city, owner_id, deposit_amount, charges_amount')\n            .eq('id', app.property_id)\n            .maybeSingle();\n\n          // Récupérer les infos du candidat\n          const { data: applicant } = await supabase\n            .from('profiles')\n            .select('full_name, phone, oneci_verified, cnam_verified')\n            .eq('id', app.applicant_id)\n            .maybeSingle();\n\n          return {\n            ...app,\n            properties: property || { title: 'Propriété supprimée', monthly_rent: 0, city: 'N/A', owner_id: '', deposit_amount: null, charges_amount: null },\n            profiles: applicant || { full_name: 'Utilisateur supprimé', phone: null, oneci_verified: false, cnam_verified: false },\n          };\n        })\n      );\n\n      setApplications(enrichedApplications);\n    } catch (error) {\n      logger.logError(error, { context: 'Applications', action: 'fetchApplications' });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger les candidatures',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateApplicationStatus = async (applicationId: string, newStatus: string) => {\n    try {\n      const { error } = await supabase\n        .from('rental_applications')\n        .update({ \n          status: newStatus,\n          reviewed_at: new Date().toISOString()\n        })\n        .eq('id', applicationId);\n\n      if (error) throw error;\n\n      toast({\n        title: 'Statut mis à jour',\n        description: `Candidature ${newStatus === 'approved' ? 'approuvée' : 'rejetée'}`,\n      });\n\n      fetchApplications();\n      setSelectedApplication(null);\n    } catch (error) {\n      logger.logError(error, { context: 'Applications', action: 'updateStatus', applicationId });\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de mettre à jour la candidature',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const variants: Record<string, 'default' | 'secondary' | 'destructive' | 'outline'> = {\n      'pending': 'secondary',\n      'approved': 'default',\n      'rejected': 'destructive',\n      'withdrawn': 'outline',\n    };\n\n    const labels: Record<string, string> = {\n      'pending': 'En attente',\n      'approved': 'Approuvée',\n      'rejected': 'Rejetée',\n      'withdrawn': 'Retirée',\n    };\n\n    return <Badge variant={variants[status] || 'outline'}>{labels[status] || status}</Badge>;\n  };\n\n  const isOwner = profile?.user_type === 'proprietaire' || profile?.user_type === 'agence';\n\n  const filteredApplications = useMemo(() => {\n    if (activeFilter === 'all') return applications;\n    return applications.filter(a => a.status === activeFilter);\n  }, [applications, activeFilter]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Navbar />\n      \n      <main className=\"flex-1 container mx-auto px-4 py-6 pt-24\">\n        <div className=\"mb-10\">\n          <DynamicBreadcrumb />\n          \n          <h1 className=\"text-4xl font-bold mb-3 mt-6 flex items-center gap-3\">\n            <FileText className=\"h-8 w-8 text-primary\" />\n            {isOwner ? 'Candidatures reçues' : 'Mes candidatures'}\n          </h1>\n          <p className=\"text-lg text-muted-foreground\">\n            {isOwner \n              ? 'Gérez les candidatures pour vos biens immobiliers' \n              : 'Suivez l\\'état de vos candidatures locatives'}\n          </p>\n        </div>\n\n        <div className=\"space-y-4\">\n          <div className=\"flex justify-between items-center\">\n            <Tabs value={activeFilter} onValueChange={setActiveFilter} className=\"w-auto\">\n              <TabsList>\n                <TabsTrigger value=\"all\">Toutes ({applications.length})</TabsTrigger>\n                <TabsTrigger value=\"pending\">\n                  En attente ({applications.filter(a => a.status === 'pending').length})\n                </TabsTrigger>\n                <TabsTrigger value=\"approved\">\n                  Approuvées ({applications.filter(a => a.status === 'approved').length})\n                </TabsTrigger>\n              </TabsList>\n            </Tabs>\n            \n            <ViewToggle \n              view={viewMode === 'cards' ? 'list' : 'table'} \n              onViewChange={(v) => setViewMode(v === 'list' ? 'cards' : 'table')}\n              options={['list', 'table']}\n            />\n          </div>\n\n          {viewMode === 'table' ? (\n            <ApplicationsTableView\n              applications={filteredApplications}\n              onSelect={(app: ApplicationDisplay) => setSelectedApplication(app)}\n              isOwner={isOwner}\n            />\n          ) : (\n            <ApplicationsList\n              applications={filteredApplications}\n              onSelect={(app: ApplicationDisplay) => setSelectedApplication(app)}\n              getStatusBadge={getStatusBadge}\n              isOwner={isOwner}\n            />\n          )}\n        </div>\n\n        {/* Dialog pour ApplicationDetail */}\n        <Dialog open={!!selectedApplication} onOpenChange={() => setSelectedApplication(null)}>\n          <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-auto\">\n            {selectedApplication && (\n              <ApplicationDetail\n                application={selectedApplication}\n                onClose={() => setSelectedApplication(null)}\n                onStatusUpdate={updateApplicationStatus}\n                isOwner={isOwner}\n              />\n            )}\n          </DialogContent>\n        </Dialog>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nconst ApplicationsList = ({ \n  applications, \n  onSelect, \n  getStatusBadge,\n  isOwner \n}: { \n  applications: ApplicationDisplay[];\n  onSelect: (app: ApplicationDisplay) => void;\n  getStatusBadge: (status: string) => JSX.Element;\n  isOwner: boolean;\n}) => {\n  if (applications.length === 0) {\n    return (\n      <Card>\n        <CardContent className=\"py-12 text-center\">\n          <div className=\"space-y-4\">\n            <p className=\"text-muted-foreground text-lg\">Aucune candidature pour le moment</p>\n            {!isOwner && (\n              <p className=\"text-sm text-muted-foreground\">\n                Parcourez nos annonces et déposez votre première candidature !\n              </p>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"grid gap-4\">\n      {applications.map((application) => (\n        <div key={application.id} className=\"space-y-4\">\n          {!isOwner && (\n            <ApplicationStatusTracker\n              status={application.status}\n              createdAt={application.created_at}\n              reviewedAt={application.reviewed_at}\n              processingDeadline={application.processing_deadline}\n              isOverdue={application.is_overdue}\n              autoProcessed={application.auto_processed}\n            />\n          )}\n          <Card className=\"hover:shadow-md transition-shadow\">\n            <CardHeader>\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <CardTitle className=\"text-lg\">\n                    {application.properties?.title || 'Propriété non disponible'}\n                  </CardTitle>\n                  <CardDescription>\n                    {isOwner \n                      ? `Candidat: ${application.profiles?.full_name || 'Inconnu'}`\n                      : application.properties?.city || 'N/A'\n                    }\n                  </CardDescription>\n                </div>\n                {getStatusBadge(application.status)}\n              </div>\n            </CardHeader>\n            <CardContent>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-1 text-sm\">\n                <div className=\"flex items-center gap-4\">\n                  <span className=\"text-muted-foreground\">\n                    Loyer: {application.properties?.monthly_rent?.toLocaleString() || '0'} FCFA\n                  </span>\n                  {isOwner && (\n                    <div className=\"flex gap-2\">\n                      {application.profiles?.oneci_verified && (\n                        <Badge variant=\"outline\" className=\"text-xs\">ONECI ✓</Badge>\n                      )}\n                      {application.profiles?.cnam_verified && (\n                        <Badge variant=\"outline\" className=\"text-xs\">CNAM ✓</Badge>\n                      )}\n                    </div>\n                  )}\n                </div>\n                <div className=\"text-muted-foreground\">\n                  Déposée le {new Date(application.created_at).toLocaleDateString('fr-FR')}\n                </div>\n                {application.application_score > 0 && (\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-muted-foreground\">Score:</span>\n                    <Badge variant=\"default\">{application.application_score}/100</Badge>\n                  </div>\n                )}\n              </div>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onSelect(application)}\n              >\n                <Eye className=\"h-4 w-4 mr-2\" />\n                Voir détails\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Applications;\n"],"names":["ApplicationDetail","application","onClose","onStatusUpdate","isOwner","scoring","setScoring","useState","loadingScore","setLoadingScore","phone","useUserPhone","useEffect","calculateScore","data","error","supabase","logger","toast","jsxs","jsx","Navbar","Button","ArrowLeft","Card","CardHeader","CardTitle","CardDescription","Badge","CardContent","CheckCircle","XCircle","TenantScoreBreakdown","doc","index","FileText","Download","startDate","endDate","Footer","ApplicationStatusTracker","status","createdAt","reviewedAt","processingDeadline","isOverdue","autoProcessed","config","AlertCircle","Clock","Icon","timeRemaining","deadline","now","diffMs","diffHours","Calendar","formatDistanceToNow","fr","STATUS_VARIANTS","STATUS_LABELS","ApplicationsTableView","applications","onSelect","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Home","Eye","Applications","user","profile","useAuth","setApplications","selectedApplication","setSelectedApplication","loading","setLoading","viewMode","setViewMode","activeFilter","setActiveFilter","fetchApplications","query","myProperties","propertyIds","p","applicationsData","enrichedApplications","app","property","applicant","updateApplicationStatus","applicationId","newStatus","getStatusBadge","variants","labels","filteredApplications","useMemo","DynamicBreadcrumb","Tabs","TabsList","TabsTrigger","ViewToggle","v","ApplicationsList","Dialog","DialogContent","_a","_b","_c","_e","_d","_f","_g"],"mappings":"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"}