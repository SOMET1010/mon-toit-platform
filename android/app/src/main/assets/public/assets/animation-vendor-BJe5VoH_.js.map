{"version":3,"file":"animation-vendor-BJe5VoH_.js","sources":["../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-composed-ref.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/utils/get-timeline.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/attach-animation.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/attach-function.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs","../../node_modules/framer-motion/dist/es/value/use-scroll.mjs","../../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../../node_modules/framer-motion/dist/es/value/use-computed.mjs","../../node_modules/framer-motion/dist/es/value/use-transform.mjs","../../node_modules/framer-motion/dist/es/value/use-spring.mjs","../../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../../node_modules/framer-motion/dist/es/utils/use-in-view.mjs","../../node_modules/canvas-confetti/dist/confetti.module.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","\"use client\";\nimport { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import * as React from 'react';\n\n/**\n * Taken from https://github.com/radix-ui/primitives/blob/main/packages/react/compose-refs/src/compose-refs.tsx\n */\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        return ref(value);\n    }\n    else if (ref !== null && ref !== undefined) {\n        ref.current = value;\n    }\n}\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs(...refs) {\n    return (node) => {\n        let hasCleanup = false;\n        const cleanups = refs.map((ref) => {\n            const cleanup = setRef(ref, node);\n            if (!hasCleanup && typeof cleanup === \"function\") {\n                hasCleanup = true;\n            }\n            return cleanup;\n        });\n        // React <19 will log an error to the console if a callback ref returns a\n        // value. We don't use ref cleanups internally so this will only happen if a\n        // user's ref callback returns a value, which we only expect if they are\n        // using the cleanup functionality added in React 19.\n        if (hasCleanup) {\n            return () => {\n                for (let i = 0; i < cleanups.length; i++) {\n                    const cleanup = cleanups[i];\n                    if (typeof cleanup === \"function\") {\n                        cleanup();\n                    }\n                    else {\n                        setRef(refs[i], null);\n                    }\n                }\n            };\n        }\n    };\n}\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs(...refs) {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { useComposedRefs };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { useComposedRefs } from '../../utils/use-composed-ref.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    const composedRef = useComposedRefs(ref, children?.ref);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref: composedRef }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","\"use client\";\nimport { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","\"use client\";\nimport { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","\"use client\";\nimport { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","\"use client\";\nimport { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","\"use client\";\nimport { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","\"use client\";\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","\"use client\";\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","\"use client\";\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","\"use client\";\nimport { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Include externalRef in dependencies to ensure the callback updates\n     * when the ref changes, allowing proper ref forwarding.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","\"use client\";\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            /**\n             * Temporarily disabling resetting this flag as it prevents components\n             * with initial={false} from animating after being remounted, for instance\n             * as the child of an Activity component.\n             */\n            // isInitialRender = true\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { progress, velocityPerSecond } from 'motion-utils';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[`scroll${position}`];\n    axis.scrollLength = element[`scroll${length}`] - element[`client${length}`];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","import { isHTMLElement } from 'motion-dom';\n\nfunction calcInset(element, container) {\n    const inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (isHTMLElement(current)) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current.tagName === \"svg\") {\n            /**\n             * This isn't an ideal approach to measuring the offset of <svg /> tags.\n             * It would be preferable, given they behave like HTMLElements in most ways\n             * to use offsetLeft/Top. But these don't exist on <svg />. Likewise we\n             * can't use .getBBox() like most SVG elements as these provide the offset\n             * relative to the SVG itself, which for <svg /> is usually 0x0.\n             */\n            const svgBoundingBox = current.getBoundingClientRect();\n            current = current.parentElement;\n            const parentBoundingBox = current.getBoundingClientRect();\n            inset.x += svgBoundingBox.left - parentBoundingBox.left;\n            inset.y += svgBoundingBox.top - parentBoundingBox.top;\n        }\n        else if (current instanceof SVGGraphicsElement) {\n            const { x, y } = current.getBBox();\n            inset.x += x;\n            inset.y += y;\n            let svg = null;\n            let parent = current.parentNode;\n            while (!svg) {\n                if (parent.tagName === \"svg\") {\n                    svg = parent;\n                }\n                parent = current.parentNode;\n            }\n            current = svg;\n        }\n        else {\n            break;\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (edge in namedEdges) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { resolveEdge, namedEdges } from './edge.mjs';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (typeof offset === \"number\") {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (typeof offset === \"string\") {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","import { interpolate, defaultOffset } from 'motion-dom';\nimport { clamp } from 'motion-utils';\nimport { calcInset } from './inset.mjs';\nimport { resolveOffset } from './offset.mjs';\nimport { ScrollOffset } from './presets.mjs';\n\nconst point = { x: 0, y: 0 };\nfunction getTargetSize(target) {\n    return \"getBBox\" in target && target.tagName !== \"svg\"\n        ? target.getBBox()\n        : { width: target.clientWidth, height: target.clientHeight };\n}\nfunction resolveOffsets(container, info, options) {\n    const { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : getTargetSize(target);\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(info[axis].offset, defaultOffset(offsetDefinition), { clamp: false });\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = clamp(0, 1, info[axis].interpolate(info[axis].current));\n}\n\nexport { resolveOffsets };\n","import { warnOnce } from 'motion-utils';\nimport { updateScrollInfo } from './info.mjs';\nimport { resolveOffsets } from './offsets/index.mjs';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node !== container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n    /**\n     * In development mode ensure scroll containers aren't position: static as this makes\n     * it difficult to measure their relative positions.\n     */\n    if (process.env.NODE_ENV !== \"production\") {\n        if (container && target && target !== container) {\n            warnOnce(getComputedStyle(container).position !== \"static\", \"Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.\");\n        }\n    }\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    return {\n        measure: (time) => {\n            measure(element, options.target, info);\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: () => onScroll(info),\n    };\n}\n\nexport { createOnScrollHandler };\n","import { resize, frame, cancelFrame, frameData } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.scrollingElement ? window : element;\nfunction scrollInfo(onScroll, { container = document.scrollingElement, ...options } = {}) {\n    if (!container)\n        return noop;\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers) {\n                handler.measure(frameData.timestamp);\n            }\n            frame.preUpdate(notifyAll);\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers) {\n                handler.notify();\n            }\n        };\n        const listener = () => frame.read(measureAll);\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n        listener();\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            resizeListeners.get(container)?.();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nexport { scrollInfo };\n","import { supportsScrollTimeline } from 'motion-dom';\nimport { scrollInfo } from '../track.mjs';\n\nconst timelineCache = new Map();\nfunction scrollTimelineFallback(options) {\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[options.axis].progress * 100;\n    }, options);\n    return { currentTime, cancel };\n}\nfunction getTimeline({ source, container, ...options }) {\n    const { axis } = options;\n    if (source)\n        container = source;\n    const containerCache = timelineCache.get(container) ?? new Map();\n    timelineCache.set(container, containerCache);\n    const targetKey = options.target ?? \"self\";\n    const targetCache = containerCache.get(targetKey) ?? {};\n    const axisKey = axis + (options.offset ?? []).join(\",\");\n    if (!targetCache[axisKey]) {\n        targetCache[axisKey] =\n            !options.target && supportsScrollTimeline()\n                ? new ScrollTimeline({ source: container, axis })\n                : scrollTimelineFallback({ container, ...options });\n    }\n    return targetCache[axisKey];\n}\n\nexport { getTimeline };\n","import { observeTimeline } from 'motion-dom';\nimport { getTimeline } from './utils/get-timeline.mjs';\n\nfunction attachToAnimation(animation, options) {\n    const timeline = getTimeline(options);\n    return animation.attachTimeline({\n        timeline: options.target ? undefined : timeline,\n        observe: (valueAnimation) => {\n            valueAnimation.pause();\n            return observeTimeline((progress) => {\n                valueAnimation.time =\n                    valueAnimation.iterationDuration * progress;\n            }, timeline);\n        },\n    });\n}\n\nexport { attachToAnimation };\n","import { observeTimeline } from 'motion-dom';\nimport { scrollInfo } from './track.mjs';\nimport { getTimeline } from './utils/get-timeline.mjs';\n\n/**\n * If the onScroll function has two arguments, it's expecting\n * more specific information about the scroll from scrollInfo.\n */\nfunction isOnScrollWithInfo(onScroll) {\n    return onScroll.length === 2;\n}\nfunction attachToFunction(onScroll, options) {\n    if (isOnScrollWithInfo(onScroll)) {\n        return scrollInfo((info) => {\n            onScroll(info[options.axis].progress, info);\n        }, options);\n    }\n    else {\n        return observeTimeline(onScroll, getTimeline(options));\n    }\n}\n\nexport { attachToFunction };\n","import { noop } from 'motion-utils';\nimport { attachToAnimation } from './attach-animation.mjs';\nimport { attachToFunction } from './attach-function.mjs';\n\nfunction scroll(onScroll, { axis = \"y\", container = document.scrollingElement, ...options } = {}) {\n    if (!container)\n        return noop;\n    const optionsWithDefaults = { axis, container, ...options };\n    return typeof onScroll === \"function\"\n        ? attachToFunction(onScroll, optionsWithDefaults)\n        : attachToAnimation(onScroll, optionsWithDefaults);\n}\n\nexport { scroll };\n","\"use client\";\nimport { motionValue } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { useRef, useCallback, useEffect } from 'react';\nimport { scroll } from '../render/dom/scroll/index.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nconst isRefPending = (ref) => {\n    if (!ref)\n        return false;\n    return !ref.current;\n};\nfunction useScroll({ container, target, ...options } = {}) {\n    const values = useConstant(createScrollMotionValues);\n    const scrollAnimation = useRef(null);\n    const needsStart = useRef(false);\n    const start = useCallback(() => {\n        scrollAnimation.current = scroll((_progress, { x, y, }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, {\n            ...options,\n            container: container?.current || undefined,\n            target: target?.current || undefined,\n        });\n        return () => {\n            scrollAnimation.current?.();\n        };\n    }, [container, target, JSON.stringify(options.offset)]);\n    useIsomorphicLayoutEffect(() => {\n        needsStart.current = false;\n        if (isRefPending(container) || isRefPending(target)) {\n            needsStart.current = true;\n            return;\n        }\n        else {\n            return start();\n        }\n    }, [start]);\n    useEffect(() => {\n        if (needsStart.current) {\n            invariant(!isRefPending(container), \"Container ref is defined but not hydrated\", \"use-scroll-ref\");\n            invariant(!isRefPending(target), \"Target ref is defined but not hydrated\", \"use-scroll-ref\");\n            return start();\n        }\n        else {\n            return;\n        }\n    }, [start]);\n    return values;\n}\n\nexport { useScroll };\n","\"use client\";\nimport { motionValue } from 'motion-dom';\nimport { useContext, useState, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","\"use client\";\nimport { cancelFrame, frame } from 'motion-dom';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","\"use client\";\nimport { collectMotionValues } from 'motion-dom';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","\"use client\";\nimport { transform } from 'motion-dom';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","\"use client\";\nimport { attachSpring, isMotionValue } from 'motion-dom';\nimport { useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { useTransform } from './use-transform.mjs';\n\nfunction useSpring(source, options = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const getFromSource = () => (isMotionValue(source) ? source.get() : source);\n    // isStatic will never change, allowing early hooks return\n    if (isStatic) {\n        return useTransform(getFromSource);\n    }\n    const value = useMotionValue(getFromSource());\n    useInsertionEffect(() => {\n        return attachSpring(value, source, options);\n    }, [value, JSON.stringify(options)]);\n    return value;\n}\n\nexport { useSpring };\n","import { resolveElements } from 'motion-dom';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry.target, entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","\"use client\";\nimport { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false, initial = false, } = {}) {\n    const [isInView, setInView] = useState(initial);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n","// canvas-confetti v1.9.3 built on 2024-04-30T22:19:17.794Z\nvar module = {};\n\n// source content\n/* globals Map */\n\n(function main(global, module, isWorker, workerSize) {\n  var canUseWorker = !!(\n    global.Worker &&\n    global.Blob &&\n    global.Promise &&\n    global.OffscreenCanvas &&\n    global.OffscreenCanvasRenderingContext2D &&\n    global.HTMLCanvasElement &&\n    global.HTMLCanvasElement.prototype.transferControlToOffscreen &&\n    global.URL &&\n    global.URL.createObjectURL);\n\n  var canUsePaths = typeof Path2D === 'function' && typeof DOMMatrix === 'function';\n  var canDrawBitmap = (function () {\n    // this mostly supports ssr\n    if (!global.OffscreenCanvas) {\n      return false;\n    }\n\n    var canvas = new OffscreenCanvas(1, 1);\n    var ctx = canvas.getContext('2d');\n    ctx.fillRect(0, 0, 1, 1);\n    var bitmap = canvas.transferToImageBitmap();\n\n    try {\n      ctx.createPattern(bitmap, 'no-repeat');\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  })();\n\n  function noop() {}\n\n  // create a promise if it exists, otherwise, just\n  // call the function directly\n  function promise(func) {\n    var ModulePromise = module.exports.Promise;\n    var Prom = ModulePromise !== void 0 ? ModulePromise : global.Promise;\n\n    if (typeof Prom === 'function') {\n      return new Prom(func);\n    }\n\n    func(noop, noop);\n\n    return null;\n  }\n\n  var bitmapMapper = (function (skipTransform, map) {\n    // see https://github.com/catdad/canvas-confetti/issues/209\n    // creating canvases is actually pretty expensive, so we should create a\n    // 1:1 map for bitmap:canvas, so that we can animate the confetti in\n    // a performant manner, but also not store them forever so that we don't\n    // have a memory leak\n    return {\n      transform: function(bitmap) {\n        if (skipTransform) {\n          return bitmap;\n        }\n\n        if (map.has(bitmap)) {\n          return map.get(bitmap);\n        }\n\n        var canvas = new OffscreenCanvas(bitmap.width, bitmap.height);\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(bitmap, 0, 0);\n\n        map.set(bitmap, canvas);\n\n        return canvas;\n      },\n      clear: function () {\n        map.clear();\n      }\n    };\n  })(canDrawBitmap, new Map());\n\n  var raf = (function () {\n    var TIME = Math.floor(1000 / 60);\n    var frame, cancel;\n    var frames = {};\n    var lastFrameTime = 0;\n\n    if (typeof requestAnimationFrame === 'function' && typeof cancelAnimationFrame === 'function') {\n      frame = function (cb) {\n        var id = Math.random();\n\n        frames[id] = requestAnimationFrame(function onFrame(time) {\n          if (lastFrameTime === time || lastFrameTime + TIME - 1 < time) {\n            lastFrameTime = time;\n            delete frames[id];\n\n            cb();\n          } else {\n            frames[id] = requestAnimationFrame(onFrame);\n          }\n        });\n\n        return id;\n      };\n      cancel = function (id) {\n        if (frames[id]) {\n          cancelAnimationFrame(frames[id]);\n        }\n      };\n    } else {\n      frame = function (cb) {\n        return setTimeout(cb, TIME);\n      };\n      cancel = function (timer) {\n        return clearTimeout(timer);\n      };\n    }\n\n    return { frame: frame, cancel: cancel };\n  }());\n\n  var getWorker = (function () {\n    var worker;\n    var prom;\n    var resolves = {};\n\n    function decorate(worker) {\n      function execute(options, callback) {\n        worker.postMessage({ options: options || {}, callback: callback });\n      }\n      worker.init = function initWorker(canvas) {\n        var offscreen = canvas.transferControlToOffscreen();\n        worker.postMessage({ canvas: offscreen }, [offscreen]);\n      };\n\n      worker.fire = function fireWorker(options, size, done) {\n        if (prom) {\n          execute(options, null);\n          return prom;\n        }\n\n        var id = Math.random().toString(36).slice(2);\n\n        prom = promise(function (resolve) {\n          function workerDone(msg) {\n            if (msg.data.callback !== id) {\n              return;\n            }\n\n            delete resolves[id];\n            worker.removeEventListener('message', workerDone);\n\n            prom = null;\n\n            bitmapMapper.clear();\n\n            done();\n            resolve();\n          }\n\n          worker.addEventListener('message', workerDone);\n          execute(options, id);\n\n          resolves[id] = workerDone.bind(null, { data: { callback: id }});\n        });\n\n        return prom;\n      };\n\n      worker.reset = function resetWorker() {\n        worker.postMessage({ reset: true });\n\n        for (var id in resolves) {\n          resolves[id]();\n          delete resolves[id];\n        }\n      };\n    }\n\n    return function () {\n      if (worker) {\n        return worker;\n      }\n\n      if (!isWorker && canUseWorker) {\n        var code = [\n          'var CONFETTI, SIZE = {}, module = {};',\n          '(' + main.toString() + ')(this, module, true, SIZE);',\n          'onmessage = function(msg) {',\n          '  if (msg.data.options) {',\n          '    CONFETTI(msg.data.options).then(function () {',\n          '      if (msg.data.callback) {',\n          '        postMessage({ callback: msg.data.callback });',\n          '      }',\n          '    });',\n          '  } else if (msg.data.reset) {',\n          '    CONFETTI && CONFETTI.reset();',\n          '  } else if (msg.data.resize) {',\n          '    SIZE.width = msg.data.resize.width;',\n          '    SIZE.height = msg.data.resize.height;',\n          '  } else if (msg.data.canvas) {',\n          '    SIZE.width = msg.data.canvas.width;',\n          '    SIZE.height = msg.data.canvas.height;',\n          '    CONFETTI = module.exports.create(msg.data.canvas);',\n          '  }',\n          '}',\n        ].join('\\n');\n        try {\n          worker = new Worker(URL.createObjectURL(new Blob([code])));\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          typeof console !== undefined && typeof console.warn === 'function' ? console.warn('🎊 Could not load worker', e) : null;\n\n          return null;\n        }\n\n        decorate(worker);\n      }\n\n      return worker;\n    };\n  })();\n\n  var defaults = {\n    particleCount: 50,\n    angle: 90,\n    spread: 45,\n    startVelocity: 45,\n    decay: 0.9,\n    gravity: 1,\n    drift: 0,\n    ticks: 200,\n    x: 0.5,\n    y: 0.5,\n    shapes: ['square', 'circle'],\n    zIndex: 100,\n    colors: [\n      '#26ccff',\n      '#a25afd',\n      '#ff5e7e',\n      '#88ff5a',\n      '#fcff42',\n      '#ffa62d',\n      '#ff36ff'\n    ],\n    // probably should be true, but back-compat\n    disableForReducedMotion: false,\n    scalar: 1\n  };\n\n  function convert(val, transform) {\n    return transform ? transform(val) : val;\n  }\n\n  function isOk(val) {\n    return !(val === null || val === undefined);\n  }\n\n  function prop(options, name, transform) {\n    return convert(\n      options && isOk(options[name]) ? options[name] : defaults[name],\n      transform\n    );\n  }\n\n  function onlyPositiveInt(number){\n    return number < 0 ? 0 : Math.floor(number);\n  }\n\n  function randomInt(min, max) {\n    // [min, max)\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function toDecimal(str) {\n    return parseInt(str, 16);\n  }\n\n  function colorsToRgb(colors) {\n    return colors.map(hexToRgb);\n  }\n\n  function hexToRgb(str) {\n    var val = String(str).replace(/[^0-9a-f]/gi, '');\n\n    if (val.length < 6) {\n        val = val[0]+val[0]+val[1]+val[1]+val[2]+val[2];\n    }\n\n    return {\n      r: toDecimal(val.substring(0,2)),\n      g: toDecimal(val.substring(2,4)),\n      b: toDecimal(val.substring(4,6))\n    };\n  }\n\n  function getOrigin(options) {\n    var origin = prop(options, 'origin', Object);\n    origin.x = prop(origin, 'x', Number);\n    origin.y = prop(origin, 'y', Number);\n\n    return origin;\n  }\n\n  function setCanvasWindowSize(canvas) {\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n  }\n\n  function setCanvasRectSize(canvas) {\n    var rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n  }\n\n  function getCanvas(zIndex) {\n    var canvas = document.createElement('canvas');\n\n    canvas.style.position = 'fixed';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style.pointerEvents = 'none';\n    canvas.style.zIndex = zIndex;\n\n    return canvas;\n  }\n\n  function ellipse(context, x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n    context.save();\n    context.translate(x, y);\n    context.rotate(rotation);\n    context.scale(radiusX, radiusY);\n    context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n    context.restore();\n  }\n\n  function randomPhysics(opts) {\n    var radAngle = opts.angle * (Math.PI / 180);\n    var radSpread = opts.spread * (Math.PI / 180);\n\n    return {\n      x: opts.x,\n      y: opts.y,\n      wobble: Math.random() * 10,\n      wobbleSpeed: Math.min(0.11, Math.random() * 0.1 + 0.05),\n      velocity: (opts.startVelocity * 0.5) + (Math.random() * opts.startVelocity),\n      angle2D: -radAngle + ((0.5 * radSpread) - (Math.random() * radSpread)),\n      tiltAngle: (Math.random() * (0.75 - 0.25) + 0.25) * Math.PI,\n      color: opts.color,\n      shape: opts.shape,\n      tick: 0,\n      totalTicks: opts.ticks,\n      decay: opts.decay,\n      drift: opts.drift,\n      random: Math.random() + 2,\n      tiltSin: 0,\n      tiltCos: 0,\n      wobbleX: 0,\n      wobbleY: 0,\n      gravity: opts.gravity * 3,\n      ovalScalar: 0.6,\n      scalar: opts.scalar,\n      flat: opts.flat\n    };\n  }\n\n  function updateFetti(context, fetti) {\n    fetti.x += Math.cos(fetti.angle2D) * fetti.velocity + fetti.drift;\n    fetti.y += Math.sin(fetti.angle2D) * fetti.velocity + fetti.gravity;\n    fetti.velocity *= fetti.decay;\n\n    if (fetti.flat) {\n      fetti.wobble = 0;\n      fetti.wobbleX = fetti.x + (10 * fetti.scalar);\n      fetti.wobbleY = fetti.y + (10 * fetti.scalar);\n\n      fetti.tiltSin = 0;\n      fetti.tiltCos = 0;\n      fetti.random = 1;\n    } else {\n      fetti.wobble += fetti.wobbleSpeed;\n      fetti.wobbleX = fetti.x + ((10 * fetti.scalar) * Math.cos(fetti.wobble));\n      fetti.wobbleY = fetti.y + ((10 * fetti.scalar) * Math.sin(fetti.wobble));\n\n      fetti.tiltAngle += 0.1;\n      fetti.tiltSin = Math.sin(fetti.tiltAngle);\n      fetti.tiltCos = Math.cos(fetti.tiltAngle);\n      fetti.random = Math.random() + 2;\n    }\n\n    var progress = (fetti.tick++) / fetti.totalTicks;\n\n    var x1 = fetti.x + (fetti.random * fetti.tiltCos);\n    var y1 = fetti.y + (fetti.random * fetti.tiltSin);\n    var x2 = fetti.wobbleX + (fetti.random * fetti.tiltCos);\n    var y2 = fetti.wobbleY + (fetti.random * fetti.tiltSin);\n\n    context.fillStyle = 'rgba(' + fetti.color.r + ', ' + fetti.color.g + ', ' + fetti.color.b + ', ' + (1 - progress) + ')';\n\n    context.beginPath();\n\n    if (canUsePaths && fetti.shape.type === 'path' && typeof fetti.shape.path === 'string' && Array.isArray(fetti.shape.matrix)) {\n      context.fill(transformPath2D(\n        fetti.shape.path,\n        fetti.shape.matrix,\n        fetti.x,\n        fetti.y,\n        Math.abs(x2 - x1) * 0.1,\n        Math.abs(y2 - y1) * 0.1,\n        Math.PI / 10 * fetti.wobble\n      ));\n    } else if (fetti.shape.type === 'bitmap') {\n      var rotation = Math.PI / 10 * fetti.wobble;\n      var scaleX = Math.abs(x2 - x1) * 0.1;\n      var scaleY = Math.abs(y2 - y1) * 0.1;\n      var width = fetti.shape.bitmap.width * fetti.scalar;\n      var height = fetti.shape.bitmap.height * fetti.scalar;\n\n      var matrix = new DOMMatrix([\n        Math.cos(rotation) * scaleX,\n        Math.sin(rotation) * scaleX,\n        -Math.sin(rotation) * scaleY,\n        Math.cos(rotation) * scaleY,\n        fetti.x,\n        fetti.y\n      ]);\n\n      // apply the transform matrix from the confetti shape\n      matrix.multiplySelf(new DOMMatrix(fetti.shape.matrix));\n\n      var pattern = context.createPattern(bitmapMapper.transform(fetti.shape.bitmap), 'no-repeat');\n      pattern.setTransform(matrix);\n\n      context.globalAlpha = (1 - progress);\n      context.fillStyle = pattern;\n      context.fillRect(\n        fetti.x - (width / 2),\n        fetti.y - (height / 2),\n        width,\n        height\n      );\n      context.globalAlpha = 1;\n    } else if (fetti.shape === 'circle') {\n      context.ellipse ?\n        context.ellipse(fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI) :\n        ellipse(context, fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI);\n    } else if (fetti.shape === 'star') {\n      var rot = Math.PI / 2 * 3;\n      var innerRadius = 4 * fetti.scalar;\n      var outerRadius = 8 * fetti.scalar;\n      var x = fetti.x;\n      var y = fetti.y;\n      var spikes = 5;\n      var step = Math.PI / spikes;\n\n      while (spikes--) {\n        x = fetti.x + Math.cos(rot) * outerRadius;\n        y = fetti.y + Math.sin(rot) * outerRadius;\n        context.lineTo(x, y);\n        rot += step;\n\n        x = fetti.x + Math.cos(rot) * innerRadius;\n        y = fetti.y + Math.sin(rot) * innerRadius;\n        context.lineTo(x, y);\n        rot += step;\n      }\n    } else {\n      context.moveTo(Math.floor(fetti.x), Math.floor(fetti.y));\n      context.lineTo(Math.floor(fetti.wobbleX), Math.floor(y1));\n      context.lineTo(Math.floor(x2), Math.floor(y2));\n      context.lineTo(Math.floor(x1), Math.floor(fetti.wobbleY));\n    }\n\n    context.closePath();\n    context.fill();\n\n    return fetti.tick < fetti.totalTicks;\n  }\n\n  function animate(canvas, fettis, resizer, size, done) {\n    var animatingFettis = fettis.slice();\n    var context = canvas.getContext('2d');\n    var animationFrame;\n    var destroy;\n\n    var prom = promise(function (resolve) {\n      function onDone() {\n        animationFrame = destroy = null;\n\n        context.clearRect(0, 0, size.width, size.height);\n        bitmapMapper.clear();\n\n        done();\n        resolve();\n      }\n\n      function update() {\n        if (isWorker && !(size.width === workerSize.width && size.height === workerSize.height)) {\n          size.width = canvas.width = workerSize.width;\n          size.height = canvas.height = workerSize.height;\n        }\n\n        if (!size.width && !size.height) {\n          resizer(canvas);\n          size.width = canvas.width;\n          size.height = canvas.height;\n        }\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        animatingFettis = animatingFettis.filter(function (fetti) {\n          return updateFetti(context, fetti);\n        });\n\n        if (animatingFettis.length) {\n          animationFrame = raf.frame(update);\n        } else {\n          onDone();\n        }\n      }\n\n      animationFrame = raf.frame(update);\n      destroy = onDone;\n    });\n\n    return {\n      addFettis: function (fettis) {\n        animatingFettis = animatingFettis.concat(fettis);\n\n        return prom;\n      },\n      canvas: canvas,\n      promise: prom,\n      reset: function () {\n        if (animationFrame) {\n          raf.cancel(animationFrame);\n        }\n\n        if (destroy) {\n          destroy();\n        }\n      }\n    };\n  }\n\n  function confettiCannon(canvas, globalOpts) {\n    var isLibCanvas = !canvas;\n    var allowResize = !!prop(globalOpts || {}, 'resize');\n    var hasResizeEventRegistered = false;\n    var globalDisableForReducedMotion = prop(globalOpts, 'disableForReducedMotion', Boolean);\n    var shouldUseWorker = canUseWorker && !!prop(globalOpts || {}, 'useWorker');\n    var worker = shouldUseWorker ? getWorker() : null;\n    var resizer = isLibCanvas ? setCanvasWindowSize : setCanvasRectSize;\n    var initialized = (canvas && worker) ? !!canvas.__confetti_initialized : false;\n    var preferLessMotion = typeof matchMedia === 'function' && matchMedia('(prefers-reduced-motion)').matches;\n    var animationObj;\n\n    function fireLocal(options, size, done) {\n      var particleCount = prop(options, 'particleCount', onlyPositiveInt);\n      var angle = prop(options, 'angle', Number);\n      var spread = prop(options, 'spread', Number);\n      var startVelocity = prop(options, 'startVelocity', Number);\n      var decay = prop(options, 'decay', Number);\n      var gravity = prop(options, 'gravity', Number);\n      var drift = prop(options, 'drift', Number);\n      var colors = prop(options, 'colors', colorsToRgb);\n      var ticks = prop(options, 'ticks', Number);\n      var shapes = prop(options, 'shapes');\n      var scalar = prop(options, 'scalar');\n      var flat = !!prop(options, 'flat');\n      var origin = getOrigin(options);\n\n      var temp = particleCount;\n      var fettis = [];\n\n      var startX = canvas.width * origin.x;\n      var startY = canvas.height * origin.y;\n\n      while (temp--) {\n        fettis.push(\n          randomPhysics({\n            x: startX,\n            y: startY,\n            angle: angle,\n            spread: spread,\n            startVelocity: startVelocity,\n            color: colors[temp % colors.length],\n            shape: shapes[randomInt(0, shapes.length)],\n            ticks: ticks,\n            decay: decay,\n            gravity: gravity,\n            drift: drift,\n            scalar: scalar,\n            flat: flat\n          })\n        );\n      }\n\n      // if we have a previous canvas already animating,\n      // add to it\n      if (animationObj) {\n        return animationObj.addFettis(fettis);\n      }\n\n      animationObj = animate(canvas, fettis, resizer, size , done);\n\n      return animationObj.promise;\n    }\n\n    function fire(options) {\n      var disableForReducedMotion = globalDisableForReducedMotion || prop(options, 'disableForReducedMotion', Boolean);\n      var zIndex = prop(options, 'zIndex', Number);\n\n      if (disableForReducedMotion && preferLessMotion) {\n        return promise(function (resolve) {\n          resolve();\n        });\n      }\n\n      if (isLibCanvas && animationObj) {\n        // use existing canvas from in-progress animation\n        canvas = animationObj.canvas;\n      } else if (isLibCanvas && !canvas) {\n        // create and initialize a new canvas\n        canvas = getCanvas(zIndex);\n        document.body.appendChild(canvas);\n      }\n\n      if (allowResize && !initialized) {\n        // initialize the size of a user-supplied canvas\n        resizer(canvas);\n      }\n\n      var size = {\n        width: canvas.width,\n        height: canvas.height\n      };\n\n      if (worker && !initialized) {\n        worker.init(canvas);\n      }\n\n      initialized = true;\n\n      if (worker) {\n        canvas.__confetti_initialized = true;\n      }\n\n      function onResize() {\n        if (worker) {\n          // TODO this really shouldn't be immediate, because it is expensive\n          var obj = {\n            getBoundingClientRect: function () {\n              if (!isLibCanvas) {\n                return canvas.getBoundingClientRect();\n              }\n            }\n          };\n\n          resizer(obj);\n\n          worker.postMessage({\n            resize: {\n              width: obj.width,\n              height: obj.height\n            }\n          });\n          return;\n        }\n\n        // don't actually query the size here, since this\n        // can execute frequently and rapidly\n        size.width = size.height = null;\n      }\n\n      function done() {\n        animationObj = null;\n\n        if (allowResize) {\n          hasResizeEventRegistered = false;\n          global.removeEventListener('resize', onResize);\n        }\n\n        if (isLibCanvas && canvas) {\n          if (document.body.contains(canvas)) {\n            document.body.removeChild(canvas); \n          }\n          canvas = null;\n          initialized = false;\n        }\n      }\n\n      if (allowResize && !hasResizeEventRegistered) {\n        hasResizeEventRegistered = true;\n        global.addEventListener('resize', onResize, false);\n      }\n\n      if (worker) {\n        return worker.fire(options, size, done);\n      }\n\n      return fireLocal(options, size, done);\n    }\n\n    fire.reset = function () {\n      if (worker) {\n        worker.reset();\n      }\n\n      if (animationObj) {\n        animationObj.reset();\n      }\n    };\n\n    return fire;\n  }\n\n  // Make default export lazy to defer worker creation until called.\n  var defaultFire;\n  function getDefaultFire() {\n    if (!defaultFire) {\n      defaultFire = confettiCannon(null, { useWorker: true, resize: true });\n    }\n    return defaultFire;\n  }\n\n  function transformPath2D(pathString, pathMatrix, x, y, scaleX, scaleY, rotation) {\n    var path2d = new Path2D(pathString);\n\n    var t1 = new Path2D();\n    t1.addPath(path2d, new DOMMatrix(pathMatrix));\n\n    var t2 = new Path2D();\n    // see https://developer.mozilla.org/en-US/docs/Web/API/DOMMatrix/DOMMatrix\n    t2.addPath(t1, new DOMMatrix([\n      Math.cos(rotation) * scaleX,\n      Math.sin(rotation) * scaleX,\n      -Math.sin(rotation) * scaleY,\n      Math.cos(rotation) * scaleY,\n      x,\n      y\n    ]));\n\n    return t2;\n  }\n\n  function shapeFromPath(pathData) {\n    if (!canUsePaths) {\n      throw new Error('path confetti are not supported in this browser');\n    }\n\n    var path, matrix;\n\n    if (typeof pathData === 'string') {\n      path = pathData;\n    } else {\n      path = pathData.path;\n      matrix = pathData.matrix;\n    }\n\n    var path2d = new Path2D(path);\n    var tempCanvas = document.createElement('canvas');\n    var tempCtx = tempCanvas.getContext('2d');\n\n    if (!matrix) {\n      // attempt to figure out the width of the path, up to 1000x1000\n      var maxSize = 1000;\n      var minX = maxSize;\n      var minY = maxSize;\n      var maxX = 0;\n      var maxY = 0;\n      var width, height;\n\n      // do some line skipping... this is faster than checking\n      // every pixel and will be mostly still correct\n      for (var x = 0; x < maxSize; x += 2) {\n        for (var y = 0; y < maxSize; y += 2) {\n          if (tempCtx.isPointInPath(path2d, x, y, 'nonzero')) {\n            minX = Math.min(minX, x);\n            minY = Math.min(minY, y);\n            maxX = Math.max(maxX, x);\n            maxY = Math.max(maxY, y);\n          }\n        }\n      }\n\n      width = maxX - minX;\n      height = maxY - minY;\n\n      var maxDesiredSize = 10;\n      var scale = Math.min(maxDesiredSize/width, maxDesiredSize/height);\n\n      matrix = [\n        scale, 0, 0, scale,\n        -Math.round((width/2) + minX) * scale,\n        -Math.round((height/2) + minY) * scale\n      ];\n    }\n\n    return {\n      type: 'path',\n      path: path,\n      matrix: matrix\n    };\n  }\n\n  function shapeFromText(textData) {\n    var text,\n        scalar = 1,\n        color = '#000000',\n        // see https://nolanlawson.com/2022/04/08/the-struggle-of-using-native-emoji-on-the-web/\n        fontFamily = '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\", \"EmojiOne Color\", \"Android Emoji\", \"Twemoji Mozilla\", \"system emoji\", sans-serif';\n\n    if (typeof textData === 'string') {\n      text = textData;\n    } else {\n      text = textData.text;\n      scalar = 'scalar' in textData ? textData.scalar : scalar;\n      fontFamily = 'fontFamily' in textData ? textData.fontFamily : fontFamily;\n      color = 'color' in textData ? textData.color : color;\n    }\n\n    // all other confetti are 10 pixels,\n    // so this pixel size is the de-facto 100% scale confetti\n    var fontSize = 10 * scalar;\n    var font = '' + fontSize + 'px ' + fontFamily;\n\n    var canvas = new OffscreenCanvas(fontSize, fontSize);\n    var ctx = canvas.getContext('2d');\n\n    ctx.font = font;\n    var size = ctx.measureText(text);\n    var width = Math.ceil(size.actualBoundingBoxRight + size.actualBoundingBoxLeft);\n    var height = Math.ceil(size.actualBoundingBoxAscent + size.actualBoundingBoxDescent);\n\n    var padding = 2;\n    var x = size.actualBoundingBoxLeft + padding;\n    var y = size.actualBoundingBoxAscent + padding;\n    width += padding + padding;\n    height += padding + padding;\n\n    canvas = new OffscreenCanvas(width, height);\n    ctx = canvas.getContext('2d');\n    ctx.font = font;\n    ctx.fillStyle = color;\n\n    ctx.fillText(text, x, y);\n\n    var scale = 1 / scalar;\n\n    return {\n      type: 'bitmap',\n      // TODO these probably need to be transfered for workers\n      bitmap: canvas.transferToImageBitmap(),\n      matrix: [scale, 0, 0, scale, -width * scale / 2, -height * scale / 2]\n    };\n  }\n\n  module.exports = function() {\n    return getDefaultFire().apply(this, arguments);\n  };\n  module.exports.reset = function() {\n    getDefaultFire().reset();\n  };\n  module.exports.create = confettiCannon;\n  module.exports.shapeFromPath = shapeFromPath;\n  module.exports.shapeFromText = shapeFromText;\n}((function () {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  return this || {};\n})(), module, false));\n\n// end source content\n\nexport default module.exports;\nexport var create = module.exports.create;\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","MotionConfigContext","p","setRef","value","composeRefs","refs","node","hasCleanup","cleanups","cleanup","i","useComposedRefs","React.useCallback","PopChildMeasure","React.Component","prevProps","element","parent","parentWidth","isHTMLElement","size","PopChild","children","isPresent","anchorX","root","id","useId","nonce","useContext","composedRef","useInsertionEffect","width","height","top","left","right","x","style","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","context","useMemo","childId","isComplete","_","key","React.useEffect","usePresence","subscribe","register","safeToRemove","useCallback","getChildKey","child","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","exitingChildren","nextChildren","forceRender","Fragment","onExit","isEveryExitComplete","isExitComplete","LazyContext","featureProps","featureDefinitions","props","name","loadFeatures","features","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","MotionContext","isAnimationControls","v","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","getCurrentTreeVariants","animate","useCreateMotionContext","variantLabelsAsDependency","prop","scaleCorrectors","addScaleCorrector","correctors","isCSSVariableName","isForcedMotionValue","layout","layoutId","transformProps","translateAlias","numTransforms","transformPropOrder","buildTransform","latestValues","transform","transformTemplate","transformString","transformIsDefault","valueIsDefault","valueAsType","getValueAsType","numberValueTypes","transformName","buildHTMLStyles","state","vars","transformOrigin","hasTransform","hasTransformOrigin","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","isMotionValue","useInitialMotionValues","visualState","useStyle","styleProp","useHTMLProps","htmlProps","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","offset","useDashCase","keys","px","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","attrScale","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","Component","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","useRender","isStatic","elementProps","createElement","getValueState","visualElement","resolveVariantFromProps","definition","current","velocity","resolveMotionValue","makeState","scrapeMotionValuesFromProps","createRenderState","presenceContext","makeLatestValues","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","valueTarget","index","makeUseVisualState","config","make","newValues","_a","useHTMLVisualState","scrapeMotionValuesFromProps$1","targetKey","useSVGVisualState","motionComponentSymbol","isRefObject","useMotionRef","externalRef","instance","camelToDash","str","optimizedAppearDataId","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","initialLayoutGroupConfig","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","_b","initialPromotionConfig","drag","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","createMotionComponent","preloadedFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","getProjectionFunctionality","jsxs","ForwardRefMotionComponent","forwardRef","layoutGroupId","combined","createMotionProxy","componentCache","factory","options","deprecatedFactoryFunction","_target","convertBoundingBoxToBox","bottom","convertBoxToBoundingBox","y","transformBoxPoints","point","transformPoint","topLeft","bottomRight","isIdentityScale","scale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","delta","transformBox","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","mixNumber","measureViewportBox","measurePageBox","rootProjectionNode","transformPagePoint","viewportBox","scroll","createAxisDelta","createDelta","createAxis","createBox","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","visualElementStore","updateMotionValuesFromProps","next","prev","nextValue","prevValue","motionValue","existingValue","latestValue","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","blockInitialAnimation","KeyframeResolver","now","time","frame","renderState","willChange","initialMotionValues","cancelFrame","remove","feature","valueIsTransform","removeOnChange","removeSyncCheck","other","featureDefinition","isEnabled","FeatureConstructor","listenerName","listener","closestVariantNode","unsubscribe","defaultValue","isNumericalString","isZeroValueString","findValueType","complex","getAnimatableNone","valueFromInitial","variant","eventName","callback","SubscriptionManager","args","microtask","DOMVisualElement","DOMKeyframesResolver","a","b","renderHTML","projection","elementStyle","getComputedStyle","HTMLVisualElement","defaultTransformValue","readTransformValue","computedStyle","camelCaseAttributes","renderSVG","_styleProp","SVGVisualElement","defaultType","getDefaultValueType","createDomVisualElement","resolveVariant","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","setTarget","isWillChangeMotionValue","addValueToWillChange","MotionGlobalConfig","newWillChange","getOptimisedAppearId","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","finalKeyframe","resolvedKeyframes","underDampedSpring","criticallyDampedSpring","keyframesTransition","ease","getDefaultTransition","valueKey","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","repeatDelay","from","elapsed","animateMotionValue","isHandoff","onComplete","valueTransition","getValueTransition","delay","secondsToMilliseconds","shouldSkip","makeAnimationInstant","JSAnimation","AsyncMotionValueAnimation","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","type","animations","animationTypeState","currentValue","appearId","startTime","positionalKeys","animation","calcChildStagger","numChildren","maxStaggerDuration","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","animateVisualElement","resolvedDefinition","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","buildResolvedTypeValues","acc","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","isActive","createTypeState","Feature","AnimationFeature","prevAnimate","ExitAnimationFeature","prevIsPresent","exitAnimation","addDomEvent","handler","extractEventInfo","event","addPointerInfo","isPrimaryPointer","addPointerEvent","SCALE_PRECISION","SCALE_MIN","SCALE_MAX","TRANSLATE_PRECISION","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","isNear","maxDistance","calcAxisDelta","origin","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","info","getPanInfo","isPanStarted","isDistancePastThreshold","timestamp","frameData","onStart","onMove","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","pipe","subtractPoint","history","lastDevicePoint","startDevicePoint","getVelocity","timeDelta","timestampedPoint","lastPoint","millisecondsToSeconds","currentVelocity","applyConstraints","min","max","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","calcOrigin","sourceLength","targetLength","progress","clamp","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","setDragLock","percent","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","finalEvent","finalPanInfo","isDragging","onDragEnd","_point","shouldDrag","axisValue","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","bounceStiffness","bounceDamping","inertia","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","noop","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","globalProjectionState","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","projectionDelta","original","shadow","template","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","stack","promoteContext","animateSingleValue","motionValue$1","compareByDepth","FlatTree","addUniqueItem","removeItem","timeout","start","checkElapsed","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","circOut","easing","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","transforms","scaleKey","originKey","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","rotate","rotateX","rotateY","skewX","skewY","elementScaleX","elementScaleY","transformAxes","animationTarget","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","subscriptionManager","isSVGElement","isSVGSVGElement","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","hasRelativeLayoutChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetSkewAndRotation","shouldNotifyListeners","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","updateLayout","notifyLayoutUpdate","frameSteps","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","checkNodeWasScrollRoot","boxWithoutScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","_c","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasDistortingTransform","resetValues","targetStyle","valuesToRender","correct","applyTo","isCSSVariable","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","output","mixAxis","to","userAgentContains","string","roundPoint","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","handleHoverEvent","lifecycle","HoverGesture","hover","_element","startEvent","endEvent","FocusGesture","isFocusVisible","handlePressEvent","PressGesture","press","success","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","featureBundle","motion","maxElapsed","createAxisInfo","createScrollInfo","updateAxisInfo","axisName","position","prevTime","velocityPerSecond","updateScrollInfo","calcInset","container","inset","svgBoundingBox","parentBoundingBox","svg","namedEdges","resolveEdge","edge","defaultOffset","resolveOffset","containerLength","targetInset","offsetDefinition","targetPoint","containerPoint","ScrollOffset","getTargetSize","resolveOffsets","lengthLabel","targetSize","containerSize","hasChanged","numOffsets","interpolate","measure","createOnScrollHandler","onScroll","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","scrollInfo","containerHandlers","containerHandler","measureAll","resize","currentHandlers","scrollListener","timelineCache","scrollTimelineFallback","currentTime","cancel","getTimeline","containerCache","targetCache","axisKey","supportsScrollTimeline","attachToAnimation","timeline","valueAnimation","observeTimeline","isOnScrollWithInfo","attachToFunction","optionsWithDefaults","createScrollMotionValues","isRefPending","useScroll","scrollAnimation","needsStart","_progress","invariant","useMotionValue","setLatest","useCombineMotionValues","combineValues","updateValue","scheduleUpdate","subscriptions","useComputed","compute","collectMotionValues","useTransform","input","inputRangeOrTransformer","outputRange","transformer","useListTransform","numValues","useSpring","getFromSource","attachSpring","thresholds","inView","elementOrSelector","elements","resolveElements","activeIntersections","onIntersectionChange","newOnEnd","observer","useInView","margin","isInView","setInView","onEnter","module","main","global","isWorker","workerSize","canUseWorker","canUsePaths","canDrawBitmap","canvas","ctx","bitmap","promise","func","ModulePromise","Prom","bitmapMapper","skipTransform","map","raf","TIME","frames","lastFrameTime","cb","onFrame","timer","getWorker","worker","prom","resolves","decorate","execute","offscreen","done","resolve","workerDone","msg","code","e","defaults","convert","val","isOk","onlyPositiveInt","number","randomInt","toDecimal","colorsToRgb","colors","hexToRgb","getOrigin","setCanvasWindowSize","setCanvasRectSize","rect","getCanvas","zIndex","ellipse","radiusX","radiusY","rotation","startAngle","endAngle","antiClockwise","randomPhysics","opts","radAngle","radSpread","updateFetti","fetti","x1","y1","x2","y2","transformPath2D","matrix","pattern","rot","innerRadius","outerRadius","spikes","step","fettis","resizer","animatingFettis","animationFrame","destroy","onDone","update","confettiCannon","globalOpts","isLibCanvas","allowResize","hasResizeEventRegistered","globalDisableForReducedMotion","shouldUseWorker","initialized","preferLessMotion","animationObj","fireLocal","particleCount","angle","spread","startVelocity","decay","gravity","drift","ticks","shapes","scalar","flat","temp","startX","startY","fire","disableForReducedMotion","onResize","obj","defaultFire","getDefaultFire","pathString","pathMatrix","path2d","t1","t2","shapeFromPath","pathData","path","tempCanvas","tempCtx","maxSize","minX","minY","maxX","maxY","maxDesiredSize","shapeFromText","textData","text","color","fontFamily","fontSize","font","padding","confetti"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151]}