{"version":3,"file":"Payments-BqGMhMEA.js","sources":["../../src/pages/Payments.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { supabase } from \"@/lib/supabase\";\nimport { logger } from \"@/services/logger\";\nimport Navbar from \"@/components/Navbar\";\nimport Footer from \"@/components/Footer\";\nimport { DynamicBreadcrumb } from \"@/components/navigation/DynamicBreadcrumb\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Smartphone, CreditCard, Calendar, CheckCircle, Clock, XCircle } from \"lucide-react\";\n\ninterface Payment {\n  id: string;\n  amount: number;\n  payment_type: string;\n  payment_method: string;\n  status: string;\n  created_at: string;\n  completed_at: string | null;\n  transaction_id: string | null;\n}\n\nexport default function Payments() {\n  const { user } = useAuth();\n  const { toast } = useToast();\n  const [searchParams] = useSearchParams();\n  const leaseId = searchParams.get(\"lease\");\n\n  const [payments, setPayments] = useState<Payment[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [paymentType, setPaymentType] = useState(\"loyer\");\n  const [paymentMethod, setPaymentMethod] = useState(\"orange_money\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n\n  useEffect(() => {\n    if (user) {\n      fetchPayments();\n    }\n  }, [user]);\n\n  const fetchPayments = async () => {\n    try {\n      const { data, error } = await supabase\n        .from(\"payments\")\n        .select(\"*\")\n        .eq(\"payer_id\", user?.id)\n        .order(\"created_at\", { ascending: false });\n\n      if (error) throw error;\n      setPayments(data || []);\n    } catch (error) {\n      logger.error('Error fetching payments', { error, userId: user?.id });\n      toast({\n        title: \"Erreur\",\n        description: error instanceof Error ? error.message : 'Erreur lors de la rÃ©cupÃ©ration des paiements',\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handlePayment = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      // CrÃ©er le paiement\n      const { data: payment, error: paymentError } = await supabase\n        .from(\"payments\")\n        .insert({\n          payer_id: user?.id,\n          receiver_id: user?.id, // SimulÃ©\n          amount: parseFloat(amount),\n          payment_type: paymentType,\n          payment_method: paymentMethod,\n          status: \"pending\",\n        })\n        .select()\n        .single();\n\n      if (paymentError) throw paymentError;\n\n      // Appeler l'edge function pour le paiement mobile money\n      const { data, error } = await supabase.functions.invoke(\"mobile-money-payment\", {\n        body: {\n          amount: parseFloat(amount),\n          phoneNumber,\n          provider: paymentMethod,\n          paymentId: payment.id,\n          paymentType,\n        },\n      });\n\n      if (error) throw error;\n\n      if (data.success) {\n        // Mettre Ã  jour le paiement\n        await supabase\n          .from(\"payments\")\n          .update({\n            status: \"completed\",\n            completed_at: new Date().toISOString(),\n            transaction_id: data.transactionRef,\n          })\n          .eq(\"id\", payment.id);\n\n        toast({\n          title: \"Paiement rÃ©ussi\",\n          description: data.message,\n        });\n\n        setAmount(\"\");\n        setPhoneNumber(\"\");\n        fetchPayments();\n      } else {\n        await supabase\n          .from(\"payments\")\n          .update({ status: \"failed\" })\n          .eq(\"id\", payment.id);\n\n        toast({\n          title: \"Paiement Ã©chouÃ©\",\n          description: data.error,\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      logger.error('Error processing payment', { error, userId: user?.id, amount, paymentType });\n      toast({\n        title: \"Erreur\",\n        description: error instanceof Error ? error.message : 'Erreur lors du traitement du paiement',\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return (\n          <Badge className=\"bg-green-500\">\n            <CheckCircle className=\"h-3 w-3 mr-1\" />\n            ComplÃ©tÃ©\n          </Badge>\n        );\n      case \"pending\":\n        return (\n          <Badge className=\"bg-yellow-500\">\n            <Clock className=\"h-3 w-3 mr-1\" />\n            En attente\n          </Badge>\n        );\n      case \"failed\":\n        return (\n          <Badge variant=\"destructive\">\n            <XCircle className=\"h-3 w-3 mr-1\" />\n            Ã‰chouÃ©\n          </Badge>\n        );\n      default:\n        return <Badge variant=\"outline\">{status}</Badge>;\n    }\n  };\n\n  const getProviderIcon = (method: string) => {\n    switch (method) {\n      case \"orange_money\":\n      case \"mtn_money\":\n      case \"wave\":\n        return <Smartphone className=\"h-4 w-4\" />;\n      default:\n        return <CreditCard className=\"h-4 w-4\" />;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navbar />\n      <main className=\"container mx-auto px-4 py-8 pt-24\">\n        <DynamicBreadcrumb />\n        \n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">Paiements</h1>\n          <p className=\"text-muted-foreground\">\n            Effectuez vos paiements de loyer et consultez l'historique\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-8\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Nouveau paiement</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handlePayment} className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"amount\">Montant (FCFA)</Label>\n                  <Input\n                    id=\"amount\"\n                    type=\"number\"\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                    placeholder=\"50000\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"paymentType\">Type de paiement</Label>\n                  <Select value={paymentType} onValueChange={setPaymentType}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"loyer\">Loyer mensuel</SelectItem>\n                      <SelectItem value=\"depot\">DÃ©pÃ´t de garantie</SelectItem>\n                      <SelectItem value=\"charges\">Charges</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"paymentMethod\">Mode de paiement</Label>\n                  <Select value={paymentMethod} onValueChange={setPaymentMethod}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"orange_money\">\n                        ðŸŸ  Orange Money\n                      </SelectItem>\n                      <SelectItem value=\"mtn_money\">\n                        ðŸŸ¡ MTN Money\n                      </SelectItem>\n                      <SelectItem value=\"moov_money\">\n                        ðŸ”µ Moov Money\n                      </SelectItem>\n                      <SelectItem value=\"wave\">\n                        ðŸ’™ Wave\n                      </SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"phone\">NumÃ©ro de tÃ©lÃ©phone</Label>\n                  <Input\n                    id=\"phone\"\n                    type=\"tel\"\n                    value={phoneNumber}\n                    onChange={(e) => setPhoneNumber(e.target.value)}\n                    placeholder={\n                      paymentMethod === \"orange_money\"\n                        ? \"07XXXXXXXX ou 227XXXXXXXX\"\n                        : paymentMethod === \"mtn_money\"\n                        ? \"05XXXXXXXX ou 054XXXXXXXX\"\n                        : paymentMethod === \"moov_money\"\n                        ? \"01XXXXXXXX\"\n                        : \"XXXXXXXX\"\n                    }\n                    required\n                  />\n                  <p className=\"text-xs text-muted-foreground mt-1\">\n                    {paymentMethod === \"orange_money\" && \"Format: 07 ou 227 + 8 chiffres\"}\n                    {paymentMethod === \"mtn_money\" && \"Format: 05, 054, 055 ou 056 + 8 chiffres\"}\n                    {paymentMethod === \"moov_money\" && \"Format: 01 + 8 chiffres\"}\n                    {paymentMethod === \"wave\" && \"Format: 8 Ã  10 chiffres\"}\n                  </p>\n                </div>\n\n                <Button type=\"submit\" className=\"w-full\" disabled={loading}>\n                  {loading ? \"Traitement en cours...\" : \"Effectuer le paiement\"}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          <div>\n            <h2 className=\"text-2xl font-bold mb-4\">Historique des paiements</h2>\n            <div className=\"space-y-4\">\n              {payments.length === 0 ? (\n                <Card>\n                  <CardContent className=\"p-8 text-center\">\n                    <CreditCard className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground\" />\n                    <p className=\"text-muted-foreground\">Aucun paiement trouvÃ©</p>\n                  </CardContent>\n                </Card>\n              ) : (\n                payments.map((payment) => (\n                  <Card key={payment.id}>\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-start justify-between mb-2\">\n                        <div className=\"flex items-center gap-2\">\n                          {getProviderIcon(payment.payment_method)}\n                          <span className=\"font-semibold\">\n                            {payment.amount.toLocaleString()} FCFA\n                          </span>\n                        </div>\n                        {getStatusBadge(payment.status)}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground space-y-1\">\n                        <div className=\"capitalize\">{payment.payment_type}</div>\n                        <div className=\"flex items-center gap-2\">\n                          <Calendar className=\"h-3 w-3\" />\n                          {new Date(payment.created_at).toLocaleDateString()}\n                        </div>\n                        {payment.transaction_id && (\n                          <div className=\"text-xs\">RÃ©f: {payment.transaction_id}</div>\n                        )}\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"],"names":["Payments","user","useAuth","toast","useToast","searchParams","useSearchParams","payments","setPayments","useState","loading","setLoading","amount","setAmount","paymentType","setPaymentType","paymentMethod","setPaymentMethod","phoneNumber","setPhoneNumber","useEffect","fetchPayments","data","error","supabase","logger","handlePayment","e","payment","paymentError","getStatusBadge","status","jsxs","Badge","jsx","CheckCircle","Clock","XCircle","getProviderIcon","method","Smartphone","CreditCard","Navbar","DynamicBreadcrumb","Card","CardHeader","CardTitle","CardContent","Label","Input","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Button","Calendar","Footer"],"mappings":"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"}