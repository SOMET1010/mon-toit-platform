{"version":3,"file":"route-owner-C83ejxxl.js","sources":["../../src/components/ui/breadcrumb.tsx","../../src/components/navigation/DynamicBreadcrumb.tsx","../../src/components/ui/status-badge.tsx","../../src/components/properties/StatusBadge.tsx","../../src/components/dashboard/PropertyStatsCompact.tsx","../../src/components/dashboard/StatCard.tsx","../../src/components/dashboard/PropertyStats.tsx","../../src/components/dashboard/ViewsChart.tsx","../../src/components/dashboard/ApplicationsChart.tsx","../../src/components/dashboard/MarketComparison.tsx","../../src/components/dashboard/TopPropertiesTable.tsx","../../src/components/dashboard/PropertyPerformanceTable.tsx","../../src/components/dashboard/UrgentActionsCardCompact.tsx","../../src/components/dashboard/RevenueForecast.tsx","../../src/hooks/useOwnerAnalytics.ts","../../src/pages/OwnerDashboard.tsx","../../src/components/properties/PropertyStatusTabs.tsx","../../src/components/properties/ViewToggle.tsx","../../src/hooks/useVoiceSearch.ts","../../src/hooks/useSearchSuggestions.ts","../../src/components/properties/PropertySearchBar.tsx","../../src/components/properties/BulkActionsBar.tsx","../../src/components/properties/PropertyCardEnhanced.tsx","../../src/components/properties/PropertyTableView.tsx","../../src/pages/MyProperties.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode;\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />);\nBreadcrumb.displayName = \"Breadcrumb\";\n\nconst BreadcrumbList = React.forwardRef<HTMLOListElement, React.ComponentPropsWithoutRef<\"ol\">>(\n  ({ className, ...props }, ref) => (\n    <ol\n      ref={ref}\n      className={cn(\n        \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nBreadcrumbList.displayName = \"BreadcrumbList\";\n\nconst BreadcrumbItem = React.forwardRef<HTMLLIElement, React.ComponentPropsWithoutRef<\"li\">>(\n  ({ className, ...props }, ref) => (\n    <li ref={ref} className={cn(\"inline-flex items-center gap-1.5\", className)} {...props} />\n  ),\n);\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean;\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\";\n\n  return <Comp ref={ref} className={cn(\"transition-colors hover:text-foreground\", className)} {...props} />;\n});\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\nconst BreadcrumbPage = React.forwardRef<HTMLSpanElement, React.ComponentPropsWithoutRef<\"span\">>(\n  ({ className, ...props }, ref) => (\n    <span\n      ref={ref}\n      role=\"link\"\n      aria-disabled=\"true\"\n      aria-current=\"page\"\n      className={cn(\"font-normal text-foreground\", className)}\n      {...props}\n    />\n  ),\n);\nBreadcrumbPage.displayName = \"BreadcrumbPage\";\n\nconst BreadcrumbSeparator = ({ children, className, ...props }: React.ComponentProps<\"li\">) => (\n  <li role=\"presentation\" aria-hidden=\"true\" className={cn(\"[&>svg]:size-3.5\", className)} {...props}>\n    {children ?? <ChevronRight />}\n  </li>\n);\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\nconst BreadcrumbEllipsis = ({ className, ...props }: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n);\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\";\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { ChevronRight, Home } from 'lucide-react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from '@/components/ui/breadcrumb';\n\nconst routeLabels: Record<string, string> = {\n  '/': 'Accueil',\n  '/dashboard': 'Tableau de bord',\n  '/analytics': 'Analytics',\n  '/profil': 'Mon Profil',\n  '/mes-biens': 'Mes Biens',\n  '/ajouter-bien': 'Publier un bien',\n  '/editer-bien': 'Modifier le bien',\n  '/modifier-bien': 'Modifier le bien',\n  '/verification': 'Vérification d\\'identité',\n  '/favoris': 'Mes Favoris',\n  '/candidatures': 'Mes Candidatures',\n  '/candidature': 'Postuler',\n  '/recherche': 'Recherche avancée',\n  '/explorer': 'Explorer la carte',\n  '/publier': 'Publier un bien',\n  '/baux': 'Mes Baux',\n  '/messages': 'Messagerie',\n  '/paiements': 'Paiements',\n  '/maintenance': 'Maintenance',\n  '/a-propos': 'À propos',\n  '/admin': 'Administration',\n  '/admin/certifications': 'Certifications',\n  '/admin/dashboard': 'Dashboard Admin',\n  '/property': 'Détails du bien',\n  '/certification': 'Certification',\n  '/guide': 'Guide',\n  '/tarifs': 'Tarifs',\n  '/conditions': 'Conditions',\n  '/confidentialite': 'Confidentialité',\n  '/mentions-legales': 'Mentions légales',\n  '/legal': 'Mentions légales',\n};\n\nexport const DynamicBreadcrumb = () => {\n  const location = useLocation();\n  const pathnames = location.pathname.split('/').filter((x) => x);\n\n  if (pathnames.length === 0) return null;\n\n  const buildPath = (index: number) => {\n    return `/${pathnames.slice(0, index + 1).join('/')}`;\n  };\n\n  return (\n    <Breadcrumb className=\"mb-6\">\n      <BreadcrumbList>\n        <BreadcrumbItem>\n          <BreadcrumbLink asChild>\n            <Link to=\"/\" className=\"flex items-center gap-1 hover:text-primary transition-smooth\">\n              <Home className=\"h-3.5 w-3.5\" />\n              <span className=\"hidden sm:inline\">Accueil</span>\n            </Link>\n          </BreadcrumbLink>\n        </BreadcrumbItem>\n        \n        {pathnames.map((_, index) => {\n          const path = buildPath(index);\n          const isLast = index === pathnames.length - 1;\n          const label = routeLabels[path] || pathnames[index];\n\n          return (\n            <div key={path} className=\"flex items-center gap-2\">\n              <BreadcrumbSeparator>\n                <ChevronRight className=\"h-4 w-4\" />\n              </BreadcrumbSeparator>\n              <BreadcrumbItem>\n                {isLast ? (\n                  <BreadcrumbPage className=\"font-medium text-foreground\">\n                    {label}\n                  </BreadcrumbPage>\n                ) : (\n                  <BreadcrumbLink asChild>\n                    <Link to={path} className=\"hover:text-primary transition-smooth\">\n                      {label}\n                    </Link>\n                  </BreadcrumbLink>\n                )}\n              </BreadcrumbItem>\n            </div>\n          );\n        })}\n      </BreadcrumbList>\n    </Breadcrumb>\n  );\n};\n","import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\nimport { STATUS_VARIANTS, STATUS_ICONS, PROPERTY_STATUS_LABELS } from \"@/constants\";\n\nconst statusBadgeVariants = cva(\n  \"inline-flex items-center gap-1.5 rounded-full border font-semibold transition-all duration-300 animate-badge-appear\",\n  {\n    variants: {\n      variant: {\n        success: \"bg-status-success text-status-success-foreground border-status-success/30 hover:shadow-[0_0_12px_rgba(34,197,94,0.4)]\",\n        warning: \"bg-status-warning text-status-warning-foreground border-status-warning/30 hover:shadow-[0_0_12px_rgba(251,146,60,0.4)] animate-pulse-soft\",\n        danger: \"bg-status-danger text-status-danger-foreground border-status-danger/30 hover:shadow-[0_0_12px_rgba(239,68,68,0.4)]\",\n        info: \"bg-status-info text-status-info-foreground border-status-info/30 hover:shadow-[0_0_12px_rgba(59,130,246,0.4)]\",\n        neutral: \"bg-status-neutral text-status-neutral-foreground border-status-neutral/30 hover:shadow-[0_0_12px_rgba(107,114,128,0.4)]\",\n      },\n      size: {\n        sm: \"px-2 py-0.5 text-xs\",\n        md: \"px-2.5 py-1 text-sm\",\n        lg: \"px-3 py-1.5 text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"neutral\",\n      size: \"md\",\n    },\n  }\n);\n\nconst STATUS_TOOLTIPS: Record<string, string> = {\n  disponible: \"Disponible à la location\",\n  loué: \"Déjà loué\",\n  loue: \"Déjà loué\",\n  en_attente: \"En cours de validation\",\n  retiré: \"Retiré de la plateforme\",\n  retire: \"Retiré de la plateforme\",\n  refuse: \"Refusé par la modération\",\n};\n\nexport interface StatusBadgeProps extends VariantProps<typeof statusBadgeVariants> {\n  status: string;\n  showIcon?: boolean;\n  showLabel?: boolean;\n  animate?: boolean;\n  className?: string;\n}\n\nexport function StatusBadge({\n  status,\n  variant,\n  size = \"md\",\n  showIcon = true,\n  showLabel = true,\n  animate = false,\n  className,\n}: StatusBadgeProps) {\n  const semanticVariant = variant || (STATUS_VARIANTS[status] as any) || \"neutral\";\n  const Icon = STATUS_ICONS[status];\n  const label = PROPERTY_STATUS_LABELS[status] || status;\n  const tooltip = STATUS_TOOLTIPS[status] || label;\n\n  const iconSize = size === \"sm\" ? \"h-3 w-3\" : size === \"lg\" ? \"h-5 w-5\" : \"h-4 w-4\";\n\n  return (\n    <TooltipProvider>\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <div\n            className={cn(\n              statusBadgeVariants({ variant: semanticVariant as any, size }),\n              animate && status === \"en_attente\" && \"animate-pulse-soft\",\n              \"hover:scale-105\",\n              className\n            )}\n            aria-label={`Statut : ${tooltip}`}\n          >\n            {showIcon && Icon && <Icon className={iconSize} />}\n            {showLabel && <span>{label}</span>}\n          </div>\n        </TooltipTrigger>\n        <TooltipContent>\n          <p>{tooltip}</p>\n        </TooltipContent>\n      </Tooltip>\n    </TooltipProvider>\n  );\n}\n","import { PropertyStatus } from '@/types';\nimport { StatusBadge as StatusBadgeUI } from '@/components/ui/status-badge';\n\ninterface StatusBadgeProps {\n  status: PropertyStatus | string;\n  variant?: 'default' | 'compact';\n}\n\nexport const StatusBadge = ({ status, variant = 'default' }: StatusBadgeProps) => {\n  return (\n    <StatusBadgeUI \n      status={status}\n      size={variant === 'compact' ? 'sm' : 'md'}\n      animate={status === 'en_attente'}\n    />\n  );\n};\n","import { Eye, Heart, FileText, DollarSign, TrendingUp, Home } from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\n\ninterface PropertyStatsCompactProps {\n  stats: {\n    totalProperties: number;\n    totalViews: number;\n    totalFavorites: number;\n    totalApplications: number;\n    averageRent: number;\n    occupancyRate: number;\n  };\n}\n\nexport const PropertyStatsCompact = ({ stats }: PropertyStatsCompactProps) => {\n  const statItems = [\n    { \n      title: 'Biens', \n      value: stats.totalProperties, \n      icon: Home,\n      color: 'text-blue-600'\n    },\n    {\n      title: 'Vues',\n      value: stats.totalViews.toLocaleString(),\n      icon: Eye,\n      color: 'text-primary'\n    },\n    { \n      title: 'Favoris', \n      value: stats.totalFavorites, \n      icon: Heart,\n      color: 'text-pink-600'\n    },\n    { \n      title: 'Candidatures', \n      value: stats.totalApplications, \n      icon: FileText,\n      color: 'text-orange-600'\n    },\n    { \n      title: 'Loyer moyen', \n      value: `${(stats.averageRent / 1000).toFixed(0)}K`, \n      icon: DollarSign,\n      color: 'text-green-600'\n    },\n    {\n      title: 'Occupation',\n      value: `${stats.occupancyRate}%`,\n      icon: TrendingUp,\n      color: 'text-success'\n    },\n  ];\n\n  return (\n    <div className=\"grid grid-cols-3 md:grid-cols-6 gap-3\">\n      {statItems.map((stat, index) => (\n        <Card key={index} className=\"hover:shadow-md transition-shadow\">\n          <CardContent className=\"p-3\">\n            <div className=\"flex items-center gap-2\">\n              <stat.icon className={`h-4 w-4 ${stat.color}`} />\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"text-lg font-bold truncate\">{stat.value}</div>\n                <div className=\"text-xs text-muted-foreground truncate\">{stat.title}</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};","import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { LucideIcon } from 'lucide-react';\n\ninterface StatCardProps {\n  title: string;\n  value: string | number;\n  icon: LucideIcon;\n  trend?: {\n    value: number;\n    isPositive: boolean;\n  };\n  description?: string;\n}\n\nexport const StatCard = ({ title, value, icon: Icon, trend, description }: StatCardProps) => {\n  return (\n    <Card className=\"transition-all duration-200 hover:scale-105 hover:shadow-card-hover cursor-pointer group\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n        <Icon className=\"h-4 w-4 text-muted-foreground transition-transform duration-200 group-hover:rotate-12\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">{value}</div>\n        {description && (\n          <p className=\"text-xs text-muted-foreground mt-1\">{description}</p>\n        )}\n        {trend && (\n          <p className={`text-xs mt-1 ${trend.isPositive ? 'text-green-600' : 'text-red-600'}`}>\n            {trend.isPositive ? '+' : ''}{trend.value}% depuis le mois dernier\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","import { Eye, Heart, FileText, TrendingUp, DollarSign, Home } from 'lucide-react';\nimport { StatCard } from './StatCard';\n\ninterface PropertyStatsProps {\n  stats: {\n    totalProperties: number;\n    totalViews: number;\n    totalFavorites: number;\n    totalApplications: number;\n    averageRent: number;\n    occupancyRate: number;\n  };\n  trends?: {\n    totalProperties?: { value: number; isPositive: boolean };\n    totalViews?: { value: number; isPositive: boolean };\n    totalFavorites?: { value: number; isPositive: boolean };\n    totalApplications?: { value: number; isPositive: boolean };\n    averageRent?: { value: number; isPositive: boolean };\n    occupancyRate?: { value: number; isPositive: boolean };\n  };\n}\n\nconst PropertyStats = ({ stats, trends }: PropertyStatsProps) => {\n  const statCards = [\n    { \n      title: 'Biens totaux', \n      value: stats.totalProperties, \n      icon: Home,\n      trend: trends?.totalProperties\n    },\n    { \n      title: 'Vues totales', \n      value: stats.totalViews.toLocaleString(), \n      icon: Eye,\n      trend: trends?.totalViews\n    },\n    { \n      title: 'Favoris', \n      value: stats.totalFavorites, \n      icon: Heart,\n      trend: trends?.totalFavorites\n    },\n    { \n      title: 'Candidatures', \n      value: stats.totalApplications, \n      icon: FileText,\n      trend: trends?.totalApplications\n    },\n    { \n      title: 'Loyer moyen', \n      value: `${stats.averageRent.toLocaleString()} FCFA`, \n      icon: DollarSign,\n      trend: trends?.averageRent,\n      description: 'Par mois'\n    },\n    { \n      title: \"Taux d'occupation\", \n      value: `${stats.occupancyRate}%`, \n      icon: TrendingUp,\n      trend: trends?.occupancyRate\n    },\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {statCards.map((stat, index) => (\n        <StatCard key={index} {...stat} />\n      ))}\n    </div>\n  );\n};\n\nexport default PropertyStats;\n","import { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\n\ninterface ViewsChartProps {\n  data: Array<{\n    date: string;\n    views: number;\n    favorites: number;\n  }>;\n  className?: string;\n  loading?: boolean;\n}\n\nconst ViewsChart = ({ data, className, loading = false }: ViewsChartProps) => {\n  const [period, setPeriod] = useState<'7d' | '30d' | '3m' | '1y'>('30d');\n  const [showViews, setShowViews] = useState(true);\n  const [showFavorites, setShowFavorites] = useState(true);\n\n  const periods = [\n    { value: '7d', label: '7j' },\n    { value: '30d', label: '30j' },\n    { value: '3m', label: '3 mois' },\n    { value: '1y', label: '1 an' },\n  ] as const;\n\n  // Générer données simulées si pas de données\n  const chartData = data.length > 0 ? data : Array.from({ length: 7 }, (_, i) => {\n    const date = new Date();\n    date.setDate(date.getDate() - (6 - i));\n    return {\n      date: date.toLocaleDateString('fr-FR', { day: 'numeric', month: 'short' }),\n      views: Math.floor(Math.random() * 50) + 10,\n      favorites: Math.floor(Math.random() * 10) + 2\n    };\n  });\n\n  if (loading) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <div className=\"h-6 w-48 bg-muted rounded animate-pulse\"></div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"h-64 bg-muted/50 rounded animate-pulse\"></div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle>Évolution des Vues et Favoris</CardTitle>\n            <CardDescription>Statistiques des {period === '7d' ? '7 derniers jours' : period === '30d' ? '30 derniers jours' : period === '3m' ? '3 derniers mois' : 'dernière année'}</CardDescription>\n          </div>\n          <div className=\"flex gap-2\">\n            {periods.map((p) => (\n              <Button\n                key={p.value}\n                variant={period === p.value ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => setPeriod(p.value)}\n              >\n                {p.label}\n              </Button>\n            ))}\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" className=\"stroke-muted\" />\n            <XAxis \n              dataKey=\"date\" \n              className=\"text-xs\"\n              tick={{ fill: 'hsl(var(--muted-foreground))' }}\n            />\n            <YAxis \n              className=\"text-xs\"\n              tick={{ fill: 'hsl(var(--muted-foreground))' }}\n            />\n            <Tooltip \n              contentStyle={{ \n                backgroundColor: 'hsl(var(--background))',\n                border: '1px solid hsl(var(--border))',\n                borderRadius: '8px'\n              }}\n            />\n            <Legend \n              onClick={(e) => {\n                if (e.dataKey === 'views') setShowViews(!showViews);\n                if (e.dataKey === 'favorites') setShowFavorites(!showFavorites);\n              }}\n              wrapperStyle={{ cursor: 'pointer' }}\n            />\n            {showViews && (\n              <Line \n                type=\"monotone\" \n                dataKey=\"views\" \n                stroke=\"hsl(var(--primary))\" \n                strokeWidth={2}\n                name=\"Vues\"\n                dot={{ fill: 'hsl(var(--primary))' }}\n                activeDot={{ r: 6 }}\n              />\n            )}\n            {showFavorites && (\n              <Line \n                type=\"monotone\" \n                dataKey=\"favorites\" \n                stroke=\"hsl(var(--destructive))\" \n                strokeWidth={2}\n                name=\"Favoris\"\n                dot={{ fill: 'hsl(var(--destructive))' }}\n                activeDot={{ r: 6 }}\n              />\n            )}\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ViewsChart;\n","import { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\n\ninterface ApplicationsChartProps {\n  data: Array<{\n    property: string;\n    pending: number;\n    approved: number;\n    rejected: number;\n  }>;\n  className?: string;\n}\n\nconst ApplicationsChart = ({ data, className }: ApplicationsChartProps) => {\n  const [selectedProperty, setSelectedProperty] = useState<string | null>(null);\n\n  const selectedData = data.find(d => d.property === selectedProperty);\n  const totalApplications = selectedData \n    ? selectedData.pending + selectedData.approved + selectedData.rejected \n    : 0;\n\n  return (\n    <>\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle>Candidatures par Bien</CardTitle>\n          <CardDescription>Cliquez sur une barre pour voir les détails</CardDescription>\n        </CardHeader>\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" className=\"stroke-muted\" />\n            <XAxis \n              dataKey=\"property\" \n              className=\"text-xs\"\n              tick={{ fill: 'hsl(var(--muted-foreground))' }}\n              angle={-45}\n              textAnchor=\"end\"\n              height={100}\n            />\n            <YAxis \n              className=\"text-xs\"\n              tick={{ fill: 'hsl(var(--muted-foreground))' }}\n            />\n            <Tooltip \n              contentStyle={{ \n                backgroundColor: 'hsl(var(--background))',\n                border: '1px solid hsl(var(--border))',\n                borderRadius: '8px'\n              }}\n            />\n            <Legend />\n            <Bar \n              dataKey=\"pending\" \n              fill=\"#facc15\" \n              name=\"En attente\"\n              cursor=\"pointer\"\n              onClick={(data) => setSelectedProperty(data.property)}\n            />\n            <Bar \n              dataKey=\"approved\" \n              fill=\"#22c55e\" \n              name=\"Approuvées\"\n              cursor=\"pointer\"\n              onClick={(data) => setSelectedProperty(data.property)}\n            />\n            <Bar \n              dataKey=\"rejected\" \n              fill=\"#ef4444\" \n              name=\"Rejetées\"\n              cursor=\"pointer\"\n              onClick={(data) => setSelectedProperty(data.property)}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n\n    <Dialog open={!!selectedProperty} onOpenChange={() => setSelectedProperty(null)}>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>{selectedProperty}</DialogTitle>\n          <DialogDescription>\n            Détail des candidatures pour ce bien\n          </DialogDescription>\n        </DialogHeader>\n        {selectedData && (\n          <div className=\"space-y-4 mt-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">Total</p>\n                <p className=\"text-2xl font-bold\">{totalApplications}</p>\n              </div>\n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">Taux d'approbation</p>\n                <p className=\"text-2xl font-bold\">\n                  {totalApplications > 0 \n                    ? Math.round((selectedData.approved / totalApplications) * 100) \n                    : 0}%\n                </p>\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center p-3 rounded-lg bg-yellow-50 dark:bg-yellow-950\">\n                <span className=\"text-sm font-medium\">En attente</span>\n                <span className=\"font-bold\">{selectedData.pending}</span>\n              </div>\n              <div className=\"flex justify-between items-center p-3 rounded-lg bg-green-50 dark:bg-green-950\">\n                <span className=\"text-sm font-medium\">Approuvées</span>\n                <span className=\"font-bold\">{selectedData.approved}</span>\n              </div>\n              <div className=\"flex justify-between items-center p-3 rounded-lg bg-red-50 dark:bg-red-950\">\n                <span className=\"text-sm font-medium\">Rejetées</span>\n                <span className=\"font-bold\">{selectedData.rejected}</span>\n              </div>\n            </div>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n    </>\n  );\n};\n\nexport default ApplicationsChart;\n","import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { TrendingUp, TrendingDown, Minus } from 'lucide-react';\n\ninterface MarketData {\n  propertyType: string;\n  myAverage: number;\n  marketAverage: number;\n  difference: number;\n  trend: 'up' | 'down' | 'neutral';\n}\n\ninterface MarketComparisonProps {\n  data: MarketData[];\n  className?: string;\n}\n\nconst MarketComparison = ({ data, className }: MarketComparisonProps) => {\n  const getTrendIcon = (trend: string) => {\n    switch (trend) {\n      case 'up':\n        return <TrendingUp className=\"h-4 w-4 text-green-600\" />;\n      case 'down':\n        return <TrendingDown className=\"h-4 w-4 text-red-600\" />;\n      default:\n        return <Minus className=\"h-4 w-4 text-muted-foreground\" />;\n    }\n  };\n\n  const getTrendBadge = (difference: number) => {\n    if (difference > 0) {\n      return <Badge variant=\"default\" className=\"bg-green-600\">+{difference}%</Badge>;\n    } else if (difference < 0) {\n      return <Badge variant=\"destructive\">{difference}%</Badge>;\n    }\n    return <Badge variant=\"secondary\">0%</Badge>;\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle>Comparaison de Marché</CardTitle>\n        <CardDescription>Vos prix vs prix du marché par type de bien</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {data.map((item, index) => (\n            <div key={index} className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-muted/50 transition-colors\">\n              <div className=\"flex items-center gap-3\">\n                {getTrendIcon(item.trend)}\n                <div>\n                  <p className=\"font-medium\">{item.propertyType}</p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Votre moyenne: {item.myAverage.toLocaleString()} FCFA\n                  </p>\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <p className=\"text-sm text-muted-foreground mb-1\">\n                  Marché: {item.marketAverage.toLocaleString()} FCFA\n                </p>\n                {getTrendBadge(item.difference)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MarketComparison;\n","import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Eye, Heart, Users } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\n\ninterface Property {\n  id: string;\n  title: string;\n  views: number;\n  favorites: number;\n  applications: number;\n  conversionRate: number;\n}\n\ninterface TopPropertiesTableProps {\n  properties: Property[];\n}\n\nexport const TopPropertiesTable = ({ properties }: TopPropertiesTableProps) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Biens les Plus Performants</CardTitle>\n        <CardDescription>Top 5 par taux de conversion</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead className=\"w-12\">#</TableHead>\n              <TableHead>Bien</TableHead>\n              <TableHead className=\"text-center\">Vues</TableHead>\n              <TableHead className=\"text-center\">Favoris</TableHead>\n              <TableHead className=\"text-center\">Candidatures</TableHead>\n              <TableHead className=\"text-right\">Conversion</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {properties.map((property, index) => (\n              <TableRow key={property.id} className=\"hover:bg-muted/50\">\n                <TableCell>\n                  <Badge variant=\"outline\" className=\"font-bold\">\n                    {index + 1}\n                  </Badge>\n                </TableCell>\n                <TableCell>\n                  <Link\n                    to={`/property/${property.id}`}\n                    className=\"font-medium hover:text-primary transition-colors line-clamp-1\"\n                  >\n                    {property.title}\n                  </Link>\n                </TableCell>\n                <TableCell className=\"text-center\">\n                  <div className=\"flex items-center justify-center gap-1\">\n                    <Eye className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"text-sm\">{property.views}</span>\n                  </div>\n                </TableCell>\n                <TableCell className=\"text-center\">\n                  <div className=\"flex items-center justify-center gap-1\">\n                    <Heart className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"text-sm\">{property.favorites}</span>\n                  </div>\n                </TableCell>\n                <TableCell className=\"text-center\">\n                  <div className=\"flex items-center justify-center gap-1\">\n                    <Users className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"text-sm\">{property.applications}</span>\n                  </div>\n                </TableCell>\n                <TableCell className=\"text-right\">\n                  <Badge\n                    variant={property.conversionRate > 10 ? 'default' : 'secondary'}\n                    className={property.conversionRate > 10 ? 'bg-green-600' : ''}\n                  >\n                    {property.conversionRate}%\n                  </Badge>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n};","import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Eye, Edit, TrendingUp } from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport { Skeleton } from '@/components/ui/skeleton';\n\ninterface Property {\n  property_id: string;\n  property_title: string;\n  property_image: string | null;\n  monthly_rent: number;\n  views_7d: number;\n  views_30d: number;\n  applications_count: number;\n  conversion_rate: number;\n  status: string;\n}\n\ninterface PropertyPerformanceTableProps {\n  properties: Property[];\n  loading?: boolean;\n}\n\nexport const PropertyPerformanceTable = ({ properties, loading }: PropertyPerformanceTableProps) => {\n  const navigate = useNavigate();\n\n  if (loading) {\n    return (\n      <Card className=\"col-span-full\">\n        <CardHeader>\n          <Skeleton className=\"h-6 w-48\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {[1, 2, 3].map((i) => (\n              <Skeleton key={i} className=\"h-16 w-full\" />\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (properties.length === 0) {\n    return (\n      <Card className=\"col-span-full\">\n        <CardHeader>\n          <CardTitle>Performance par Bien</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-muted-foreground text-center py-8\">\n            Aucune propriété à afficher pour le moment\n          </p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"col-span-full\">\n      <CardHeader>\n        <CardTitle>Performance par Bien</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"overflow-x-auto\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Bien</TableHead>\n                <TableHead>Loyer</TableHead>\n                <TableHead className=\"text-center\">Vues (7j)</TableHead>\n                <TableHead className=\"text-center\">Candidatures</TableHead>\n                <TableHead className=\"text-center\">Conversion</TableHead>\n                <TableHead>Statut</TableHead>\n                <TableHead className=\"text-right\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {properties.map((property) => (\n                <TableRow key={property.property_id}>\n                  <TableCell className=\"font-medium\">\n                    <div className=\"flex items-center gap-3\">\n                      {property.property_image && (\n                        <img \n                          src={property.property_image} \n                          alt={property.property_title}\n                          className=\"h-10 w-10 rounded object-cover\"\n                        />\n                      )}\n                      <span className=\"truncate max-w-xs\">{property.property_title}</span>\n                    </div>\n                  </TableCell>\n                  <TableCell>{property.monthly_rent.toLocaleString()} FCFA</TableCell>\n                  <TableCell className=\"text-center\">\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <Eye className=\"h-4 w-4 text-muted-foreground\" />\n                      {property.views_7d}\n                    </div>\n                  </TableCell>\n                  <TableCell className=\"text-center\">{property.applications_count}</TableCell>\n                  <TableCell className=\"text-center\">\n                    <Badge variant={property.conversion_rate > 5 ? 'default' : 'secondary'}>\n                      <TrendingUp className=\"h-3 w-3 mr-1\" />\n                      {property.conversion_rate}%\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <Badge variant={property.status === 'disponible' ? 'default' : 'secondary'}>\n                      {property.status}\n                    </Badge>\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    <div className=\"flex gap-2 justify-end\">\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => navigate(`/property/${property.property_id}`)}\n                      >\n                        Voir\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => navigate(`/edit-property/${property.property_id}`)}\n                      >\n                        <Edit className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { AlertCircle, Clock, Image, ChevronRight } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '@/lib/supabase';\nimport { logger } from '@/services/logger';\n\ninterface UrgentAction {\n  id: string;\n  type: 'overdue_application' | 'expiring_lease' | 'incomplete_property';\n  title: string;\n  priority: 'critical' | 'important' | 'info';\n  link: string;\n  daysOverdue?: number;\n}\n\nexport const UrgentActionsCardCompact = ({ className }: { className?: string }) => {\n  const [actions, setActions] = useState<UrgentAction[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showAll, setShowAll] = useState(false);\n\n  useEffect(() => {\n    fetchUrgentActions();\n  }, []);\n\n  const fetchUrgentActions = async () => {\n    try {\n      const { data: overdueApps, error } = await supabase\n        .from('rental_applications')\n        .select(`\n          id,\n          property_id,\n          processing_deadline,\n          properties (title)\n        `)\n        .eq('status', 'pending')\n        .eq('is_overdue', true)\n        .order('processing_deadline', { ascending: true })\n        .limit(10);\n\n      if (error) throw error;\n\n      const urgentActions: UrgentAction[] = (overdueApps || []).map(app => {\n        const deadline = new Date(app.processing_deadline);\n        const now = new Date();\n        const diffMs = now.getTime() - deadline.getTime();\n        const daysOverdue = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n\n        return {\n          id: app.id,\n          type: 'overdue_application',\n          title: `${(app.properties as any)?.title || 'Bien'}`,\n          priority: daysOverdue > 5 ? 'critical' : daysOverdue > 2 ? 'important' : 'info',\n          link: '/tiers-de-confiance',\n          daysOverdue\n        };\n      });\n\n      setActions(urgentActions);\n    } catch (error) {\n      logger.logError(error, { context: 'UrgentActionsCardCompact', action: 'fetch' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-4 text-center text-sm text-muted-foreground\">\n          Chargement...\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const getPriorityColor = (priority: UrgentAction['priority']) => {\n    switch (priority) {\n      case 'critical': return 'destructive';\n      case 'important': return 'default';\n      case 'info': return 'secondary';\n    }\n  };\n\n  if (actions.length === 0) {\n    return (\n      <Card className={`border-green-200 bg-green-50 dark:bg-green-950 dark:border-green-800 ${className}`}>\n        <CardHeader className=\"p-4\">\n          <CardTitle className=\"text-sm text-green-700 dark:text-green-400\">\n            ✓ Tout est à jour\n          </CardTitle>\n        </CardHeader>\n      </Card>\n    );\n  }\n\n  const displayedActions = showAll ? actions : actions.slice(0, 5);\n\n  return (\n    <Card className={`border-orange-200 dark:border-orange-800 ${className}`}>\n      <CardHeader className=\"p-4 pb-2\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2 text-base\">\n            <AlertCircle className=\"h-4 w-4 text-orange-600\" />\n            Actions Urgentes\n          </CardTitle>\n          <Badge variant=\"destructive\" className=\"text-xs\">{actions.length}</Badge>\n        </div>\n      </CardHeader>\n      <CardContent className=\"p-4 pt-0\">\n        <div className=\"space-y-2\">\n          {displayedActions.map((action) => (\n            <Link\n              key={action.id}\n              to={action.link}\n              className=\"flex items-center gap-2 p-2 rounded-lg border hover:bg-accent/50 transition-colors group\"\n            >\n              <Clock className=\"h-4 w-4 text-muted-foreground flex-shrink-0\" />\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"font-medium text-sm truncate\">{action.title}</p>\n                <p className=\"text-xs text-destructive\">\n                  {action.daysOverdue}j de retard\n                </p>\n              </div>\n              <Badge variant={getPriorityColor(action.priority)} className=\"text-xs\">\n                {action.priority === 'critical' ? 'Urgent' : 'Important'}\n              </Badge>\n              <ChevronRight className=\"h-4 w-4 text-muted-foreground group-hover:translate-x-1 transition-transform\" />\n            </Link>\n          ))}\n        </div>\n        {actions.length > 5 && (\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"w-full mt-2\"\n            onClick={() => setShowAll(!showAll)}\n          >\n            {showAll ? 'Voir moins' : `Voir ${actions.length - 5} de plus`}\n          </Button>\n        )}\n      </CardContent>\n    </Card>\n  );\n};","import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { TrendingUp, TrendingDown, Minus } from 'lucide-react';\n\ninterface ForecastData {\n  month: string;\n  optimistic: number;\n  realistic: number;\n  pessimistic: number;\n}\n\ninterface RevenueForecastProps {\n  currentRevenue: number;\n  occupancyRate: number;\n  className?: string;\n}\n\nconst RevenueForecast = ({ currentRevenue, occupancyRate, className }: RevenueForecastProps) => {\n  // Generate 3-month forecast\n  const generateForecast = (): ForecastData[] => {\n    const months = ['Mois 1', 'Mois 2', 'Mois 3'];\n    \n    return months.map((month, index) => {\n      const growthFactor = 1 + (index * 0.05); // 5% growth per month\n      \n      return {\n        month,\n        optimistic: Math.round(currentRevenue * growthFactor * 1.15), // +15%\n        realistic: Math.round(currentRevenue * growthFactor),\n        pessimistic: Math.round(currentRevenue * growthFactor * 0.85), // -15%\n      };\n    });\n  };\n\n  const forecastData = generateForecast();\n  const realisticTotal = forecastData.reduce((sum, d) => sum + d.realistic, 0);\n  const currentTotal = currentRevenue * 3;\n  const projectedGrowth = ((realisticTotal - currentTotal) / currentTotal) * 100;\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          Prévisions de Revenus\n          <div className=\"flex items-center gap-1 text-sm font-normal\">\n            {projectedGrowth > 0 ? (\n              <>\n                <TrendingUp className=\"h-4 w-4 text-green-600\" />\n                <span className=\"text-green-600\">+{projectedGrowth.toFixed(1)}%</span>\n              </>\n            ) : projectedGrowth < 0 ? (\n              <>\n                <TrendingDown className=\"h-4 w-4 text-red-600\" />\n                <span className=\"text-red-600\">{projectedGrowth.toFixed(1)}%</span>\n              </>\n            ) : (\n              <>\n                <Minus className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"text-muted-foreground\">Stable</span>\n              </>\n            )}\n          </div>\n        </CardTitle>\n        <CardDescription>\n          Projection sur 3 mois (taux d'occupation actuel: {occupancyRate}%)\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <AreaChart data={forecastData}>\n            <defs>\n              <linearGradient id=\"colorOptimistic\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#22c55e\" stopOpacity={0.3}/>\n                <stop offset=\"95%\" stopColor=\"#22c55e\" stopOpacity={0}/>\n              </linearGradient>\n              <linearGradient id=\"colorRealistic\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"hsl(var(--primary))\" stopOpacity={0.4}/>\n                <stop offset=\"95%\" stopColor=\"hsl(var(--primary))\" stopOpacity={0}/>\n              </linearGradient>\n              <linearGradient id=\"colorPessimistic\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#ef4444\" stopOpacity={0.3}/>\n                <stop offset=\"95%\" stopColor=\"#ef4444\" stopOpacity={0}/>\n              </linearGradient>\n            </defs>\n            <CartesianGrid strokeDasharray=\"3 3\" className=\"stroke-muted\" />\n            <XAxis \n              dataKey=\"month\" \n              className=\"text-xs\"\n              tick={{ fill: 'hsl(var(--muted-foreground))' }}\n            />\n            <YAxis \n              className=\"text-xs\"\n              tick={{ fill: 'hsl(var(--muted-foreground))' }}\n              tickFormatter={(value) => `${(value / 1000).toFixed(0)}K`}\n            />\n            <Tooltip \n              contentStyle={{ \n                backgroundColor: 'hsl(var(--background))',\n                border: '1px solid hsl(var(--border))',\n                borderRadius: '8px'\n              }}\n              formatter={(value: number) => `${value.toLocaleString()} FCFA`}\n            />\n            <Legend />\n            <Area\n              type=\"monotone\"\n              dataKey=\"optimistic\"\n              stroke=\"#22c55e\"\n              strokeWidth={1}\n              fill=\"url(#colorOptimistic)\"\n              name=\"Optimiste (+15%)\"\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"realistic\"\n              stroke=\"hsl(var(--primary))\"\n              strokeWidth={2}\n              fill=\"url(#colorRealistic)\"\n              name=\"Réaliste\"\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"pessimistic\"\n              stroke=\"#ef4444\"\n              strokeWidth={1}\n              fill=\"url(#colorPessimistic)\"\n              name=\"Pessimiste (-15%)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n        \n        <div className=\"mt-4 pt-4 border-t space-y-2 text-sm\">\n          <div className=\"flex justify-between\">\n            <span className=\"text-muted-foreground\">Revenus actuels (mois)</span>\n            <span className=\"font-medium\">{currentRevenue.toLocaleString()} FCFA</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-muted-foreground\">Projection réaliste (3 mois)</span>\n            <span className=\"font-medium\">{realisticTotal.toLocaleString()} FCFA</span>\n          </div>\n          <p className=\"text-xs text-muted-foreground mt-3\">\n            * Basé sur le taux d'occupation actuel et les tendances du marché\n          </p>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RevenueForecast;\n","import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from './useAuth';\nimport { logger } from '@/services/logger';\n\ninterface PropertyAnalytics {\n  property_id: string;\n  property_title: string;\n  property_image: string | null;\n  monthly_rent: number;\n  views_7d: number;\n  views_30d: number;\n  applications_count: number;\n  conversion_rate: number;\n  status: string;\n}\n\ninterface OwnerAnalyticsStats {\n  total_properties: number;\n  total_views_7d: number;\n  total_applications: number;\n  avg_conversion_rate: number;\n}\n\nexport const useOwnerAnalytics = () => {\n  const { user } = useAuth();\n  const [analytics, setAnalytics] = useState<PropertyAnalytics[]>([]);\n  const [stats, setStats] = useState<OwnerAnalyticsStats | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!user) {\n      setLoading(false);\n      return;\n    }\n\n    const fetchAnalytics = async () => {\n      try {\n        setLoading(true);\n        const { data, error } = await supabase\n          .rpc('get_owner_analytics', { owner_user_id: user.id });\n\n        if (error) throw error;\n\n        setAnalytics(data || []);\n\n        // Calculer les stats globales\n        if (data && data.length > 0) {\n          const totalViews7d = data.reduce((sum, p) => sum + Number(p.views_7d), 0);\n          const totalApplications = data.reduce((sum, p) => sum + Number(p.applications_count), 0);\n          const avgConversion = data.reduce((sum, p) => sum + Number(p.conversion_rate), 0) / data.length;\n\n          setStats({\n            total_properties: data.length,\n            total_views_7d: totalViews7d,\n            total_applications: totalApplications,\n            avg_conversion_rate: Math.round(avgConversion * 100) / 100\n          });\n        } else {\n          setStats({\n            total_properties: 0,\n            total_views_7d: 0,\n            total_applications: 0,\n            avg_conversion_rate: 0\n          });\n        }\n      } catch (err: any) {\n        logger.error('Failed to fetch owner analytics', { error: err.message, userId: user.id });\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAnalytics();\n  }, [user]);\n\n  return { analytics, stats, loading, error };\n};\n","import { useState, useEffect } from 'react';\nimport { useAuth } from '@/hooks/useAuth';\nimport { supabase } from '@/lib/supabase';\nimport { Navigate } from 'react-router-dom';\nimport Navbar from '@/components/Navbar';\nimport Footer from '@/components/Footer';\nimport { PropertyStatsCompact } from '@/components/dashboard/PropertyStatsCompact';\nimport PropertyStats from '@/components/dashboard/PropertyStats';\nimport ViewsChart from '@/components/dashboard/ViewsChart';\nimport ApplicationsChart from '@/components/dashboard/ApplicationsChart';\nimport MarketComparison from '@/components/dashboard/MarketComparison';\nimport { TopPropertiesTable } from '@/components/dashboard/TopPropertiesTable';\nimport { PropertyPerformanceTable } from '@/components/dashboard/PropertyPerformanceTable';\nimport { UrgentActionsCardCompact } from '@/components/dashboard/UrgentActionsCardCompact';\nimport RevenueForecast from '@/components/dashboard/RevenueForecast';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { DynamicBreadcrumb } from '@/components/navigation/DynamicBreadcrumb';\nimport { RefreshCw, Eye, Download, FileText, BarChart3 } from 'lucide-react';\nimport { StickyHeader } from '@/components/ui/sticky-header';\nimport { toast } from 'sonner';\nimport { logger } from '@/services/logger';\nimport { useOwnerAnalytics } from '@/hooks/useOwnerAnalytics';\n\nconst OwnerDashboard = () => {\n  const { user, profile, loading: authLoading } = useAuth();\n  const { analytics, stats: analyticsStats, loading: analyticsLoading } = useOwnerAnalytics();\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState({\n    totalProperties: 0,\n    totalViews: 0,\n    totalFavorites: 0,\n    totalApplications: 0,\n    averageRent: 0,\n    occupancyRate: 0,\n  });\n  \n  const [viewsData, setViewsData] = useState<Array<{ date: string; views: number; favorites: number }>>([]);\n  const [applicationsData, setApplicationsData] = useState<Array<{ property: string; pending: number; approved: number; rejected: number }>>([]);\n  const [marketData, setMarketData] = useState<Array<{ propertyType: string; myAverage: number; marketAverage: number; difference: number; trend: 'up' | 'down' | 'neutral' }>>([]);\n  const [topProperties, setTopProperties] = useState<Array<{ id: string; title: string; views: number; favorites: number; applications: number; conversionRate: number }>>([]);\n  const [urgentActions, setUrgentActions] = useState<Array<{ id: string; type: 'overdue_application' | 'expiring_lease' | 'incomplete_property'; title: string; description: string; priority: 'critical' | 'important' | 'info'; link: string; daysOverdue?: number }>>([]);\n  const [reports, setReports] = useState<Array<{\n    id: string;\n    period_start: string;\n    period_end: string;\n    report_type: string;\n    generated_at: string;\n    period_label: string;\n    report_data: any;\n  }>>([]);\n\n  useEffect(() => {\n    if (user && profile) {\n      fetchDashboardData();\n    }\n  }, [user, profile]);\n\n  const fetchDashboardData = async () => {\n    if (!user) return;\n    \n    setLoading(true);\n    try {\n      // Fetch properties\n      const { data: properties, error: propertiesError } = await supabase\n        .from('properties')\n        .select('*')\n        .eq('owner_id', user.id);\n\n      if (propertiesError) throw propertiesError;\n\n      // Fetch all properties for market comparison\n      const { data: allProperties } = await supabase\n        .from('properties')\n        .select('property_type, monthly_rent');\n\n      // Fetch favorites count\n      const { data: favorites } = await supabase\n        .from('user_favorites')\n        .select('property_id')\n        .in('property_id', properties?.map(p => p.id) || []);\n\n      // Fetch applications\n      const { data: applications } = await supabase\n        .from('rental_applications')\n        .select('property_id, status, created_at')\n        .in('property_id', properties?.map(p => p.id) || []);\n\n      // Calculate stats\n      const totalProperties = properties?.length || 0;\n      const totalViews = properties?.reduce((sum, p) => sum + (p.view_count || 0), 0) || 0;\n      const totalFavorites = favorites?.length || 0;\n      const totalApplications = applications?.length || 0;\n      const averageRent = properties?.reduce((sum, p) => sum + p.monthly_rent, 0) / Math.max(totalProperties, 1) || 0;\n      const occupiedProperties = properties?.filter(p => p.status === 'loué').length || 0;\n      const occupancyRate = Math.round((occupiedProperties / Math.max(totalProperties, 1)) * 100);\n\n      setStats({\n        totalProperties,\n        totalViews,\n        totalFavorites,\n        totalApplications,\n        averageRent: Math.round(averageRent),\n        occupancyRate,\n      });\n\n      // Generate mock views data (last 30 days)\n      const viewsChartData = Array.from({ length: 30 }, (_, i) => {\n        const date = new Date();\n        date.setDate(date.getDate() - (29 - i));\n        return {\n          date: date.toLocaleDateString('fr-FR', { day: '2-digit', month: '2-digit' }),\n          views: Math.floor(Math.random() * 50) + 10,\n          favorites: Math.floor(Math.random() * 10) + 2,\n        };\n      });\n      setViewsData(viewsChartData);\n\n      // Applications by property\n      const applicationsChart = properties?.slice(0, 5).map(property => {\n        const propertyApps = applications?.filter(a => a.property_id === property.id) || [];\n        return {\n          property: property.title.slice(0, 20) + (property.title.length > 20 ? '...' : ''),\n          pending: propertyApps.filter(a => a.status === 'pending').length,\n          approved: propertyApps.filter(a => a.status === 'approved').length,\n          rejected: propertyApps.filter(a => a.status === 'rejected').length,\n        };\n      }) || [];\n      setApplicationsData(applicationsChart);\n\n      // Market comparison\n      const propertyTypes = [...new Set(properties?.map(p => p.property_type) || [])];\n      const marketComparison = propertyTypes.map(type => {\n        const myProperties = properties?.filter(p => p.property_type === type) || [];\n        const myAverage = myProperties.reduce((sum, p) => sum + p.monthly_rent, 0) / Math.max(myProperties.length, 1);\n        \n        const marketProperties = allProperties?.filter(p => p.property_type === type) || [];\n        const marketAverage = marketProperties.reduce((sum, p) => sum + p.monthly_rent, 0) / Math.max(marketProperties.length, 1);\n        \n        const difference = Math.round(((myAverage - marketAverage) / marketAverage) * 100);\n        \n        return {\n          propertyType: type.charAt(0).toUpperCase() + type.slice(1),\n          myAverage: Math.round(myAverage),\n          marketAverage: Math.round(marketAverage),\n          difference,\n          trend: (difference > 5 ? 'up' : difference < -5 ? 'down' : 'neutral') as 'up' | 'down' | 'neutral',\n        };\n      });\n      setMarketData(marketComparison);\n\n      // Top performing properties\n      const propertiesWithMetrics = properties?.map(property => {\n        const propertyFavorites = favorites?.filter(f => f.property_id === property.id).length || 0;\n        const propertyApps = applications?.filter(a => a.property_id === property.id).length || 0;\n        const conversionRate = property.view_count > 0 \n          ? Math.round((propertyApps / property.view_count) * 100) \n          : 0;\n        \n        return {\n          id: property.id,\n          title: property.title,\n          views: property.view_count || 0,\n          favorites: propertyFavorites,\n          applications: propertyApps,\n          conversionRate,\n        };\n      }).sort((a, b) => b.conversionRate - a.conversionRate).slice(0, 5) || [];\n      \n      setTopProperties(propertiesWithMetrics);\n\n      // Generate urgent actions\n      const actions: Array<{ id: string; type: 'overdue_application' | 'expiring_lease' | 'incomplete_property'; title: string; description: string; priority: 'critical' | 'important' | 'info'; link: string; daysOverdue?: number }> = [];\n      \n      // Check overdue applications (>48h)\n      const now = new Date();\n      const overdueApps = applications?.filter(app => {\n        if (app.status !== 'pending') return false;\n        const createdAt = new Date(app.created_at);\n        const hoursDiff = (now.getTime() - createdAt.getTime()) / (1000 * 60 * 60);\n        return hoursDiff > 48;\n      }) || [];\n\n      if (overdueApps.length > 0) {\n        actions.push({\n          id: 'overdue-apps',\n          type: 'overdue_application',\n          title: `${overdueApps.length} candidature${overdueApps.length > 1 ? 's' : ''} en attente`,\n          description: 'Des candidatures attendent une réponse depuis plus de 48h',\n          priority: 'critical',\n          link: '/applications',\n          daysOverdue: Math.floor(Math.max(...overdueApps.map(app => {\n            const createdAt = new Date(app.created_at);\n            return (now.getTime() - createdAt.getTime()) / (1000 * 60 * 60 * 24);\n          }))),\n        });\n      }\n\n      // Check incomplete properties\n      const incompleteProperties = properties?.filter(p => \n        !p.main_image || !p.description || p.description.length < 50\n      ) || [];\n\n      if (incompleteProperties.length > 0) {\n        actions.push({\n          id: 'incomplete-props',\n          type: 'incomplete_property',\n          title: `${incompleteProperties.length} bien${incompleteProperties.length > 1 ? 's' : ''} incomplet${incompleteProperties.length > 1 ? 's' : ''}`,\n          description: 'Ajoutez photos et descriptions pour améliorer vos annonces',\n          priority: 'important',\n          link: '/my-properties',\n        });\n      }\n\n      setUrgentActions(actions);\n\n      // Fetch report history\n      const { data: reportHistory } = await supabase\n        .from('report_history')\n        .select('*')\n        .eq('owner_id', user.id)\n        .order('generated_at', { ascending: false })\n        .limit(12);\n\n      if (reportHistory) {\n        const formattedReports = reportHistory.map(report => ({\n          ...report,\n          period_label: `${new Date(report.period_start).toLocaleDateString('fr-FR', { month: 'long', year: 'numeric' })} - ${new Date(report.period_end).toLocaleDateString('fr-FR', { month: 'long', year: 'numeric' })}`\n        }));\n        setReports(formattedReports);\n      }\n\n    } catch (error) {\n      logger.logError(error, { context: 'OwnerDashboard', action: 'fetchDashboardData' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const viewReport = (report: any) => {\n    toast.info('Prévisualisation du rapport', {\n      description: `Rapport ${report.report_type} - ${report.period_label}`\n    });\n  };\n\n  const downloadReport = (report: any) => {\n    const blob = new Blob([JSON.stringify(report.report_data, null, 2)], { \n      type: 'application/json' \n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `rapport-${report.report_type}-${report.period_start}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n    toast.success('Rapport téléchargé');\n  };\n\n  if (authLoading || loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  if (!profile || (profile.user_type !== 'proprietaire' && profile.user_type !== 'agence')) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Navbar />\n      \n      <main className=\"flex-1 container mx-auto px-4 py-8 pt-24\">\n        <div className=\"max-w-7xl mx-auto space-y-4\">\n          <DynamicBreadcrumb />\n          <StickyHeader className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold\">Tableau de Bord</h1>\n              <p className=\"text-sm text-muted-foreground\">\n                Analysez les performances de vos biens\n              </p>\n            </div>\n            <Button onClick={fetchDashboardData} variant=\"outline\" size=\"sm\">\n              <RefreshCw className=\"h-4 w-4 mr-2\" />\n              Actualiser\n            </Button>\n          </StickyHeader>\n\n          <Tabs defaultValue=\"overview\" className=\"space-y-4\">\n            <TabsList>\n              <TabsTrigger value=\"overview\">Vue d'ensemble</TabsTrigger>\n              <TabsTrigger value=\"analytics\">\n                <BarChart3 className=\"h-4 w-4 mr-2\" />\n                Analytics\n              </TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"overview\" className=\"space-y-4\">\n              {/* Stats Overview Compact */}\n              <PropertyStatsCompact stats={stats} />\n\n          {/* Urgent Actions + Charts Row */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n            <UrgentActionsCardCompact className=\"lg:col-span-1\" />\n            <div className=\"lg:col-span-2 grid grid-cols-2 gap-4 h-[320px]\">\n              <ViewsChart data={viewsData} className=\"h-full\" />\n              <ApplicationsChart data={applicationsData} className=\"h-full\" />\n            </div>\n          </div>\n\n          {/* Revenue & Market Row */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 h-[280px]\">\n            <RevenueForecast \n              currentRevenue={stats.averageRent * stats.totalProperties} \n              occupancyRate={stats.occupancyRate}\n              className=\"h-full\"\n            />\n            <MarketComparison data={marketData} className=\"h-full\" />\n          </div>\n\n          {/* Top Properties Table */}\n          <TopPropertiesTable properties={topProperties} />\n\n              {/* Report History */}\n              {reports.length > 0 && (\n                <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <FileText className=\"h-5 w-5\" />\n                  Historique des Rapports\n                </CardTitle>\n                <CardDescription>\n                  Consultez vos rapports de performance des 12 derniers mois\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Période</TableHead>\n                      <TableHead>Type</TableHead>\n                      <TableHead>Généré le</TableHead>\n                      <TableHead className=\"text-right\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {reports.map((report) => (\n                      <TableRow key={report.id}>\n                        <TableCell className=\"font-medium\">\n                          {report.period_label}\n                        </TableCell>\n                        <TableCell>\n                          <Badge variant=\"outline\">\n                            {report.report_type === 'monthly' ? 'Mensuel' : \n                             report.report_type === 'quarterly' ? 'Trimestriel' : 'Annuel'}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          {new Date(report.generated_at).toLocaleDateString('fr-FR', {\n                            day: 'numeric',\n                            month: 'long',\n                            year: 'numeric'\n                          })}\n                        </TableCell>\n                        <TableCell className=\"text-right space-x-2\">\n                          <Button \n                            variant=\"ghost\" \n                            size=\"sm\"\n                            onClick={() => viewReport(report)}\n                            title=\"Voir le rapport\"\n                          >\n                            <Eye className=\"h-4 w-4\" />\n                          </Button>\n                          <Button \n                            variant=\"ghost\" \n                            size=\"sm\"\n                            onClick={() => downloadReport(report)}\n                            title=\"Télécharger\"\n                          >\n                            <Download className=\"h-4 w-4\" />\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </CardContent>\n                </Card>\n              )}\n            </TabsContent>\n\n            <TabsContent value=\"analytics\" className=\"space-y-6\">\n              {/* Analytics KPIs */}\n              <PropertyStats\n                stats={{\n                  totalProperties: analyticsStats?.total_properties || 0,\n                  totalViews: analyticsStats?.total_views_7d || 0,\n                  totalFavorites: 0,\n                  totalApplications: analyticsStats?.total_applications || 0,\n                  averageRent: 0,\n                  occupancyRate: analyticsStats?.avg_conversion_rate || 0\n                }}\n              />\n\n              {/* Charts Grid */}\n              <div className=\"grid gap-6 lg:grid-cols-3\">\n                <ViewsChart data={[]} loading={analyticsLoading} className=\"lg:col-span-2\" />\n              </div>\n\n              {/* Performance Table */}\n              <PropertyPerformanceTable properties={analytics} loading={analyticsLoading} />\n            </TabsContent>\n          </Tabs>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default OwnerDashboard;\n","import { Tabs, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\n\ninterface PropertyStatusTabsProps {\n  activeStatus: string;\n  onStatusChange: (status: string) => void;\n  counts: {\n    all: number;\n    disponible: number;\n    loué: number;\n    en_maintenance: number;\n    en_negociation: number;\n    pending: number;\n    rejected: number;\n  };\n}\n\nconst PropertyStatusTabs = ({ activeStatus, onStatusChange, counts }: PropertyStatusTabsProps) => {\n  return (\n    <Tabs value={activeStatus} onValueChange={onStatusChange} className=\"w-full\">\n      <TabsList className=\"grid w-full grid-cols-3 lg:grid-cols-7\">\n        <TabsTrigger value=\"all\" className=\"gap-2\">\n          Tous\n          <Badge variant=\"secondary\" className=\"ml-1\">\n            {counts.all}\n          </Badge>\n        </TabsTrigger>\n        <TabsTrigger value=\"disponible\" className=\"gap-2\">\n          Disponible\n          <Badge variant=\"secondary\" className=\"ml-1\">\n            {counts.disponible}\n          </Badge>\n        </TabsTrigger>\n        <TabsTrigger value=\"loué\" className=\"gap-2\">\n          Loué\n          <Badge variant=\"secondary\" className=\"ml-1\">\n            {counts.loué}\n          </Badge>\n        </TabsTrigger>\n        <TabsTrigger value=\"en_maintenance\" className=\"gap-2\">\n          Maintenance\n          <Badge variant=\"secondary\" className=\"ml-1\">\n            {counts.en_maintenance}\n          </Badge>\n        </TabsTrigger>\n        <TabsTrigger value=\"en_negociation\" className=\"gap-2\">\n          En négociation\n          <Badge variant=\"secondary\" className=\"ml-1 bg-negotiation/20 text-negotiation\">\n            {counts.en_negociation}\n          </Badge>\n        </TabsTrigger>\n        <TabsTrigger value=\"pending\" className=\"gap-2\">\n          En attente\n          <Badge variant=\"secondary\" className=\"ml-1\">\n            {counts.pending}\n          </Badge>\n        </TabsTrigger>\n        <TabsTrigger value=\"rejected\" className=\"gap-2\">\n          Rejeté\n          <Badge variant=\"secondary\" className=\"ml-1\">\n            {counts.rejected}\n          </Badge>\n        </TabsTrigger>\n      </TabsList>\n    </Tabs>\n  );\n};\n\nexport default PropertyStatusTabs;\n","import { Button } from '@/components/ui/button';\nimport { Grid3x3, List, Table } from 'lucide-react';\n\ninterface ViewToggleProps {\n  view: 'grid' | 'list' | 'table';\n  onViewChange: (view: 'grid' | 'list' | 'table') => void;\n  options?: ('grid' | 'list' | 'table')[];\n}\n\nconst ViewToggle = ({ view, onViewChange, options = ['grid', 'list'] }: ViewToggleProps) => {\n  return (\n    <div className=\"flex gap-1 border rounded-lg p-1\">\n      {options.includes('grid') && (\n        <Button\n          variant={view === 'grid' ? 'default' : 'ghost'}\n          size=\"sm\"\n          onClick={() => onViewChange('grid')}\n          className=\"gap-2\"\n        >\n          <Grid3x3 className=\"h-4 w-4\" />\n          Grille\n        </Button>\n      )}\n      {options.includes('list') && (\n        <Button\n          variant={view === 'list' ? 'default' : 'ghost'}\n          size=\"sm\"\n          onClick={() => onViewChange('list')}\n          className=\"gap-2\"\n        >\n          <List className=\"h-4 w-4\" />\n          Liste\n        </Button>\n      )}\n      {options.includes('table') && (\n        <Button\n          variant={view === 'table' ? 'default' : 'ghost'}\n          size=\"sm\"\n          onClick={() => onViewChange('table')}\n          className=\"gap-2\"\n        >\n          <Table className=\"h-4 w-4\" />\n          Tableau\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default ViewToggle;\n","import { useState, useEffect } from 'react';\nimport { toast } from '@/hooks/use-toast';\nimport { logger } from '@/services/logger';\n\ndeclare global {\n  interface Window {\n    webkitSpeechRecognition: any;\n    SpeechRecognition: any;\n  }\n}\n\nexport const useVoiceSearch = () => {\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [isSupported, setIsSupported] = useState(false);\n\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    setIsSupported(!!SpeechRecognition);\n  }, []);\n\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    \n    if (!SpeechRecognition || !isListening) return;\n\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'fr-FR';\n    recognition.continuous = false;\n    recognition.interimResults = true;\n\n    recognition.onresult = (event: any) => {\n      const current = event.resultIndex;\n      const transcriptText = event.results[current][0].transcript;\n      setTranscript(transcriptText);\n    };\n\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n\n    recognition.onerror = (event: any) => {\n      logger.warn('Speech recognition error', { error: event.error });\n      setIsListening(false);\n      \n      if (event.error === 'no-speech') {\n        toast({\n          title: \"Aucun son détecté\",\n          description: \"Veuillez réessayer et parler clairement\",\n          variant: \"destructive\",\n        });\n      }\n    };\n\n    recognition.start();\n\n    return () => {\n      recognition.stop();\n    };\n  }, [isListening]);\n\n  const startListening = () => {\n    if (!isSupported) {\n      toast({\n        title: \"Non supporté\",\n        description: \"La recherche vocale n'est pas supportée sur ce navigateur\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    setIsListening(true);\n  };\n\n  const stopListening = () => {\n    setIsListening(false);\n  };\n\n  return {\n    isListening,\n    transcript,\n    isSupported,\n    startListening,\n    stopListening,\n  };\n};\n","import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { logger } from '@/services/logger';\n\nexport const useSearchSuggestions = (query: string) => {\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query.length < 2) {\n      setSuggestions([]);\n      return;\n    }\n\n    const debounce = setTimeout(async () => {\n      setIsLoading(true);\n      \n      try {\n        const { data, error } = await supabase\n          .from('properties')\n          .select('city, title, neighborhood')\n          .or(`city.ilike.%${query}%,title.ilike.%${query}%,neighborhood.ilike.%${query}%`)\n          .eq('moderation_status', 'approved')\n          .limit(10);\n\n        if (error) throw error;\n\n        if (data) {\n          const uniqueSuggestions = [\n            ...new Set([\n              ...data.map(p => p.city).filter(Boolean),\n              ...data.map(p => p.neighborhood).filter(Boolean),\n              ...data.map(p => p.title.split(' ')[0]).filter(Boolean),\n            ])\n          ];\n          \n          setSuggestions(uniqueSuggestions.slice(0, 5));\n        }\n      } catch (error) {\n        logger.debug('Failed to fetch search suggestions', { query });\n        setSuggestions([]);\n      } finally {\n        setIsLoading(false);\n      }\n    }, 300);\n\n    return () => clearTimeout(debounce);\n  }, [query]);\n\n  return { suggestions, isLoading };\n};\n","import { useEffect, useState } from 'react';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Search, Mic } from 'lucide-react';\nimport { useVoiceSearch } from '@/hooks/useVoiceSearch';\nimport { useSearchSuggestions } from '@/hooks/useSearchSuggestions';\nimport { triggerHapticFeedback } from '@/utils/haptics';\nimport { cn } from '@/lib/utils';\n\ninterface PropertySearchBarProps {\n  searchQuery: string;\n  onSearchChange: (query: string) => void;\n}\n\nconst PropertySearchBar = ({ searchQuery, onSearchChange }: PropertySearchBarProps) => {\n  const [query, setQuery] = useState(searchQuery);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const { isListening, transcript, isSupported, startListening, stopListening } = useVoiceSearch();\n  const { suggestions } = useSearchSuggestions(query);\n\n  useEffect(() => {\n    if (transcript) {\n      setQuery(transcript);\n      onSearchChange(transcript);\n    }\n  }, [transcript, onSearchChange]);\n\n  useEffect(() => {\n    setQuery(searchQuery);\n  }, [searchQuery]);\n\n  const handleInputChange = (value: string) => {\n    setQuery(value);\n    onSearchChange(value);\n    setShowSuggestions(true);\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    setQuery(suggestion);\n    onSearchChange(suggestion);\n    setShowSuggestions(false);\n    triggerHapticFeedback('light');\n  };\n\n  return (\n    <div className=\"relative\">\n      <div className=\"flex gap-2\">\n        <div className=\"relative flex-1\">\n          <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n          <Input\n            value={query}\n            onChange={(e) => handleInputChange(e.target.value)}\n            onFocus={() => setShowSuggestions(true)}\n            onBlur={() => setTimeout(() => setShowSuggestions(false), 200)}\n            placeholder=\"Rechercher par ville, quartier...\"\n            className=\"pl-10\"\n            aria-label=\"Rechercher des propriétés\"\n            aria-autocomplete=\"list\"\n            aria-expanded={showSuggestions && suggestions.length > 0}\n          />\n        </div>\n        \n        {isSupported && (\n          <Button\n            size=\"icon\"\n            variant={isListening ? \"default\" : \"outline\"}\n            onClick={() => {\n              triggerHapticFeedback('medium');\n              if (isListening) {\n                stopListening();\n              } else {\n                startListening();\n              }\n            }}\n            aria-label={isListening ? \"Arrêter l'écoute\" : \"Recherche vocale\"}\n            className=\"min-h-[44px] min-w-[44px]\"\n          >\n            <Mic className={cn(\"h-4 w-4\", isListening && \"animate-pulse\")} />\n          </Button>\n        )}\n      </div>\n      \n      {showSuggestions && suggestions.length > 0 && (\n        <Card className=\"absolute top-full left-0 right-0 mt-2 z-50 shadow-lg\">\n          <CardContent className=\"p-0\">\n            {suggestions.map((suggestion, index) => (\n              <button\n                key={index}\n                className=\"w-full text-left px-4 py-3 hover:bg-muted transition-colors border-b last:border-0 min-h-[44px] flex items-center gap-2\"\n                onClick={() => handleSuggestionClick(suggestion)}\n                onMouseDown={(e) => e.preventDefault()}\n              >\n                <Search className=\"h-4 w-4 text-muted-foreground\" />\n                <span>{suggestion}</span>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default PropertySearchBar;\n","import { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Trash2, Eye, EyeOff, X } from 'lucide-react';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\n\ninterface BulkActionsBarProps {\n  selectedCount: number;\n  onClearSelection: () => void;\n  onBulkDelete: () => void;\n  onBulkStatusChange: (status: string) => void;\n}\n\nconst BulkActionsBar = ({ \n  selectedCount, \n  onClearSelection, \n  onBulkDelete,\n  onBulkStatusChange \n}: BulkActionsBarProps) => {\n  if (selectedCount === 0) return null;\n\n  return (\n    <div className=\"fixed bottom-6 left-1/2 -translate-x-1/2 z-50 animate-fade-in\">\n      <div className=\"bg-primary text-primary-foreground rounded-lg shadow-lg p-4 flex items-center gap-4\">\n        <Badge variant=\"secondary\" className=\"px-3 py-1\">\n          {selectedCount} sélectionné{selectedCount > 1 ? 's' : ''}\n        </Badge>\n        \n        <div className=\"flex gap-2\">\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={() => onBulkStatusChange('disponible')}\n            className=\"gap-2\"\n          >\n            <Eye className=\"h-4 w-4\" />\n            Rendre disponible\n          </Button>\n          \n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            onClick={() => onBulkStatusChange('en_maintenance')}\n            className=\"gap-2\"\n          >\n            <EyeOff className=\"h-4 w-4\" />\n            Maintenance\n          </Button>\n          \n          <AlertDialog>\n            <AlertDialogTrigger asChild>\n              <Button variant=\"destructive\" size=\"sm\" className=\"gap-2\">\n                <Trash2 className=\"h-4 w-4\" />\n                Supprimer\n              </Button>\n            </AlertDialogTrigger>\n            <AlertDialogContent>\n              <AlertDialogHeader>\n                <AlertDialogTitle>Confirmer la suppression</AlertDialogTitle>\n                <AlertDialogDescription>\n                  Êtes-vous sûr de vouloir supprimer {selectedCount} bien{selectedCount > 1 ? 's' : ''} ?\n                  Cette action est irréversible.\n                </AlertDialogDescription>\n              </AlertDialogHeader>\n              <AlertDialogFooter>\n                <AlertDialogCancel>Annuler</AlertDialogCancel>\n                <AlertDialogAction onClick={onBulkDelete}>\n                  Supprimer\n                </AlertDialogAction>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialog>\n        </div>\n\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={onClearSelection}\n          className=\"ml-2\"\n        >\n          <X className=\"h-4 w-4\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default BulkActionsBar;\n","import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Link } from 'react-router-dom';\nimport { \n  MapPin, BedDouble, Bath, Square, Eye, Heart, FileText, \n  TrendingUp, AlertCircle \n} from 'lucide-react';\nimport type { Property as PropertyType } from '@/types';\nimport { PROPERTY_STATUS_LABELS, PROPERTY_STATUS_COLORS } from '@/constants';\n\ntype Property = Pick<PropertyType, \n  'id' | 'title' | 'description' | 'property_type' | 'status' | \n  'address' | 'city' | 'bedrooms' | 'bathrooms' | 'surface_area' | \n  'monthly_rent' | 'main_image' | 'view_count' | 'created_at'\n> & {\n  moderation_status?: string;\n  moderation_notes?: string;\n  favorites_count?: number;\n  applications_count?: number;\n  conversion_rate?: number;\n};\n\ninterface PropertyCardEnhancedProps {\n  property: Property;\n  view: 'grid' | 'list';\n  isSelected: boolean;\n  onToggleSelect: (id: string) => void;\n}\n\nconst PropertyCardEnhanced = ({ property, view, isSelected, onToggleSelect }: PropertyCardEnhancedProps) => {\n  if (view === 'list') {\n    return (\n      <Card className=\"overflow-hidden hover:shadow-lg transition-shadow\">\n        <div className=\"flex flex-col md:flex-row\">\n          {/* Selection Checkbox */}\n          <div className=\"absolute top-4 left-4 z-10\">\n            <Checkbox\n              checked={isSelected}\n              onCheckedChange={() => onToggleSelect(property.id)}\n              className=\"bg-background\"\n            />\n          </div>\n\n          {/* Image */}\n          <div className=\"md:w-64 aspect-video md:aspect-auto bg-muted relative\">\n            {property.main_image ? (\n              <img\n                src={property.main_image}\n                alt={property.title}\n                className=\"w-full h-full object-cover\"\n              />\n            ) : (\n              <div className=\"w-full h-full flex items-center justify-center\">\n                <MapPin className=\"h-12 w-12 text-muted-foreground\" />\n              </div>\n            )}\n            <Badge className={`absolute top-2 right-2 ${PROPERTY_STATUS_COLORS[property.status]}`}>\n              {PROPERTY_STATUS_LABELS[property.status]}\n            </Badge>\n          </div>\n\n          {/* Content */}\n          <div className=\"flex-1 p-6\">\n            {/* Moderation Alert */}\n            {property.moderation_status === 'pending' && (\n              <Alert className=\"mb-4\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <AlertDescription>En attente de modération</AlertDescription>\n              </Alert>\n            )}\n            {property.moderation_status === 'rejected' && (\n              <Alert variant=\"destructive\" className=\"mb-4\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <AlertDescription>\n                  Rejeté: {property.moderation_notes || 'Non spécifié'}\n                </AlertDescription>\n              </Alert>\n            )}\n\n            <div className=\"space-y-4\">\n              <div>\n                <h3 className=\"text-2xl font-bold\">{property.title}</h3>\n                <p className=\"text-muted-foreground flex items-center gap-1 mt-1\">\n                  <MapPin className=\"h-4 w-4\" />\n                  {property.city}\n                </p>\n              </div>\n\n              {/* Stats Row */}\n              <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 py-4 border-y\">\n                <div className=\"flex items-center gap-2\">\n                  <BedDouble className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">{property.bedrooms} chambres</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Bath className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">{property.bathrooms} bains</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Square className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">{property.surface_area}m²</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Eye className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">{property.view_count} vues</span>\n                </div>\n                {property.conversion_rate !== undefined && (\n                  <div className=\"flex items-center gap-2\">\n                    <TrendingUp className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm font-medium\">{property.conversion_rate}% conv.</span>\n                  </div>\n                )}\n              </div>\n\n              {/* Performance Stats */}\n              {(property.favorites_count !== undefined || property.applications_count !== undefined) && (\n                <div className=\"flex gap-4 text-sm\">\n                  {property.favorites_count !== undefined && (\n                    <div className=\"flex items-center gap-1\">\n                      <Heart className=\"h-4 w-4 text-red-500\" />\n                      <span>{property.favorites_count} favoris</span>\n                    </div>\n                  )}\n                  {property.applications_count !== undefined && (\n                    <div className=\"flex items-center gap-1\">\n                      <FileText className=\"h-4 w-4 text-blue-500\" />\n                      <span>{property.applications_count} candidatures</span>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-3xl font-bold text-primary\">\n                  {property.monthly_rent.toLocaleString()} FCFA\n                  <span className=\"text-sm text-muted-foreground font-normal\">/mois</span>\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <Button variant=\"outline\" size=\"sm\" asChild>\n                    <Link to={`/biens/${property.id}`}>Voir</Link>\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" asChild>\n                    <Link to={`/biens/${property.id}/modifier`}>Modifier</Link>\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Card>\n    );\n  }\n\n  // Grid view\n  return (\n    <Card className=\"overflow-hidden hover:shadow-lg transition-shadow\">\n      {/* Selection Checkbox */}\n      <div className=\"absolute top-2 left-2 z-10\">\n        <Checkbox\n          checked={isSelected}\n          onCheckedChange={() => onToggleSelect(property.id)}\n          className=\"bg-background\"\n        />\n      </div>\n\n      {/* Moderation Status Alert */}\n      {property.moderation_status === 'pending' && (\n        <Alert className=\"m-4 mb-0\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>En attente de modération</AlertDescription>\n        </Alert>\n      )}\n      {property.moderation_status === 'rejected' && (\n        <Alert variant=\"destructive\" className=\"m-4 mb-0\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            Rejeté: {property.moderation_notes || 'Non spécifié'}\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Property Image */}\n      <div className=\"aspect-video bg-muted relative\">\n        {property.main_image ? (\n          <img\n            src={property.main_image}\n            alt={property.title}\n            className=\"w-full h-full object-cover\"\n          />\n        ) : (\n          <div className=\"w-full h-full flex items-center justify-center\">\n            <MapPin className=\"h-12 w-12 text-muted-foreground\" />\n          </div>\n        )}\n        <Badge className={`absolute top-2 right-2 ${PROPERTY_STATUS_COLORS[property.status]}`}>\n          {PROPERTY_STATUS_LABELS[property.status]}\n        </Badge>\n      </div>\n\n      <CardHeader>\n        <CardTitle className=\"line-clamp-1\">{property.title}</CardTitle>\n        <CardDescription className=\"flex items-center gap-1\">\n          <MapPin className=\"h-3 w-3\" />\n          {property.city}\n        </CardDescription>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        {/* Property Details */}\n        <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n          <div className=\"flex items-center gap-1\">\n            <BedDouble className=\"h-4 w-4\" />\n            {property.bedrooms}\n          </div>\n          <div className=\"flex items-center gap-1\">\n            <Bath className=\"h-4 w-4\" />\n            {property.bathrooms}\n          </div>\n          <div className=\"flex items-center gap-1\">\n            <Square className=\"h-4 w-4\" />\n            {property.surface_area}m²\n          </div>\n        </div>\n\n        {/* Stats */}\n        <div className=\"grid grid-cols-2 gap-2 text-sm\">\n          <div className=\"flex items-center gap-1 text-muted-foreground\">\n            <Eye className=\"h-4 w-4\" />\n            {property.view_count} vues\n          </div>\n          {property.conversion_rate !== undefined && (\n            <div className=\"flex items-center gap-1 text-green-600\">\n              <TrendingUp className=\"h-4 w-4\" />\n              {property.conversion_rate}%\n            </div>\n          )}\n        </div>\n\n        {/* Performance Metrics */}\n        {(property.favorites_count !== undefined || property.applications_count !== undefined) && (\n          <div className=\"flex gap-3 text-xs border-t pt-3\">\n            {property.favorites_count !== undefined && (\n              <div className=\"flex items-center gap-1\">\n                <Heart className=\"h-3 w-3 text-red-500\" />\n                {property.favorites_count}\n              </div>\n            )}\n            {property.applications_count !== undefined && (\n              <div className=\"flex items-center gap-1\">\n                <FileText className=\"h-3 w-3 text-blue-500\" />\n                {property.applications_count}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Price */}\n        <div className=\"text-2xl font-bold text-primary\">\n          {property.monthly_rent.toLocaleString()} FCFA/mois\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" className=\"flex-1\" asChild>\n            <Link to={`/biens/${property.id}`}>Voir</Link>\n          </Button>\n          <Button variant=\"outline\" className=\"flex-1\" asChild>\n            <Link to={`/biens/${property.id}/modifier`}>Modifier</Link>\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PropertyCardEnhanced;\n","import { Link } from 'react-router-dom';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Button } from '@/components/ui/button';\nimport { Eye, Edit, Trash2 } from 'lucide-react';\nimport { StatusBadge } from './StatusBadge';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\n\ninterface Property {\n  id: string;\n  title: string;\n  property_type: string;\n  city: string;\n  monthly_rent: number;\n  status: string;\n  main_image?: string | null;\n  view_count?: number;\n  favorites_count?: number;\n  applications_count?: number;\n}\n\ninterface PropertyTableViewProps {\n  properties: Property[];\n  selectedProperties: string[];\n  onToggleSelect: (id: string) => void;\n  onEdit: (id: string) => void;\n  onDelete: (id: string) => void;\n}\n\nexport const PropertyTableView = ({\n  properties,\n  selectedProperties,\n  onToggleSelect,\n  onEdit,\n  onDelete,\n}: PropertyTableViewProps) => {\n  return (\n    <div className=\"rounded-md border\">\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead className=\"w-12\"></TableHead>\n            <TableHead className=\"w-20\">Image</TableHead>\n            <TableHead>Titre</TableHead>\n            <TableHead className=\"w-24\">Type</TableHead>\n            <TableHead className=\"w-32\">Prix/mois</TableHead>\n            <TableHead className=\"text-center w-32\">Stats</TableHead>\n            <TableHead className=\"w-24\">Statut</TableHead>\n            <TableHead className=\"w-20 text-right\">Actions</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {properties.map((property) => (\n            <TableRow key={property.id} className=\"hover:bg-muted/50\">\n              <TableCell>\n                <Checkbox\n                  checked={selectedProperties.includes(property.id)}\n                  onCheckedChange={() => onToggleSelect(property.id)}\n                />\n              </TableCell>\n              <TableCell>\n                <div className=\"h-10 w-14 rounded overflow-hidden bg-muted\">\n                  {property.main_image ? (\n                    <img\n                      src={property.main_image}\n                      alt={property.title}\n                      className=\"h-full w-full object-cover\"\n                    />\n                  ) : (\n                    <div className=\"h-full w-full flex items-center justify-center\">\n                      <Eye className=\"h-4 w-4 text-muted-foreground\" />\n                    </div>\n                  )}\n                </div>\n              </TableCell>\n              <TableCell>\n                <Link\n                  to={`/bien/${property.id}`}\n                  className=\"font-medium hover:text-primary transition-colors line-clamp-1\"\n                >\n                  {property.title}\n                </Link>\n                <div className=\"text-xs text-muted-foreground\">{property.city}</div>\n              </TableCell>\n              <TableCell className=\"text-sm\">{property.property_type}</TableCell>\n              <TableCell className=\"font-medium\">\n                {property.monthly_rent.toLocaleString()} FCFA\n              </TableCell>\n              <TableCell>\n                <div className=\"flex items-center justify-center gap-3 text-xs\">\n                  <span className=\"flex items-center gap-1\">\n                    <Eye className=\"h-3.5 w-3.5 text-muted-foreground\" />\n                    {property.view_count || 0}\n                  </span>\n                  <span className=\"flex items-center gap-1\">\n                    ⭐ {property.favorites_count || 0}\n                  </span>\n                  <span className=\"flex items-center gap-1\">\n                    ✉ {property.applications_count || 0}\n                  </span>\n                </div>\n              </TableCell>\n              <TableCell>\n                <StatusBadge status={property.status} variant=\"compact\" />\n              </TableCell>\n              <TableCell className=\"text-right\">\n                <DropdownMenu>\n                  <DropdownMenuTrigger asChild>\n                    <Button variant=\"ghost\" size=\"sm\">\n                      •••\n                    </Button>\n                  </DropdownMenuTrigger>\n                  <DropdownMenuContent align=\"end\">\n                    <DropdownMenuItem asChild>\n                      <Link to={`/bien/${property.id}`}>\n                        <Eye className=\"h-4 w-4 mr-2\" />\n                        Voir\n                      </Link>\n                    </DropdownMenuItem>\n                    <DropdownMenuItem onClick={() => onEdit(property.id)}>\n                      <Edit className=\"h-4 w-4 mr-2\" />\n                      Modifier\n                    </DropdownMenuItem>\n                    <DropdownMenuSeparator />\n                    <DropdownMenuItem\n                      onClick={() => onDelete(property.id)}\n                      className=\"text-destructive\"\n                    >\n                      <Trash2 className=\"h-4 w-4 mr-2\" />\n                      Supprimer\n                    </DropdownMenuItem>\n                  </DropdownMenuContent>\n                </DropdownMenu>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};","import { useEffect, useState, useMemo } from 'react';\nimport { useAuth } from '@/hooks/useAuth';\nimport { supabase } from '@/lib/supabase';\nimport { Navigate, Link, useNavigate } from 'react-router-dom';\nimport Navbar from '@/components/Navbar';\nimport Footer from '@/components/Footer';\nimport { DynamicBreadcrumb } from '@/components/navigation/DynamicBreadcrumb';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus } from 'lucide-react';\nimport { logger } from '@/services/logger';\nimport { toast } from 'sonner';\nimport type { Property as PropertyType } from '@/types';\nimport PropertyStatusTabs from '@/components/properties/PropertyStatusTabs';\nimport ViewToggle from '@/components/properties/ViewToggle';\nimport PropertySearchBar from '@/components/properties/PropertySearchBar';\nimport BulkActionsBar from '@/components/properties/BulkActionsBar';\nimport PropertyCardEnhanced from '@/components/properties/PropertyCardEnhanced';\nimport { PropertyTableView } from '@/components/properties/PropertyTableView';\nimport { PropertyCardSkeleton } from '@/components/properties/PropertyCardSkeleton';\nimport { StickyHeader } from '@/components/ui/sticky-header';\n\ntype Property = Pick<PropertyType, \n  'id' | 'title' | 'description' | 'property_type' | 'status' | \n  'address' | 'city' | 'bedrooms' | 'bathrooms' | 'surface_area' | \n  'monthly_rent' | 'main_image' | 'view_count' | 'created_at'\n> & {\n  moderation_status?: string;\n  moderation_notes?: string;\n  favorites_count?: number;\n  applications_count?: number;\n  conversion_rate?: number;\n};\n\nconst MyProperties = () => {\n  const { user, profile, loading: authLoading } = useAuth();\n  const navigate = useNavigate();\n  const [properties, setProperties] = useState<Property[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeStatus, setActiveStatus] = useState('all');\n  const [view, setView] = useState<'grid' | 'list' | 'table'>('table');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortBy, setSortBy] = useState('created_desc');\n  const [selectedProperties, setSelectedProperties] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (user) {\n      fetchProperties();\n    }\n  }, [user]);\n\n  const fetchProperties = async () => {\n    setLoading(true);\n    try {\n      const { data: propertiesData, error } = await supabase\n        .from('properties')\n        .select('*')\n        .eq('owner_id', user!.id)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      // Fetch additional metrics for each property\n      const propertiesWithMetrics = await Promise.all(\n        (propertiesData || []).map(async (property) => {\n          // Fetch favorites count\n          const { count: favoritesCount } = await supabase\n            .from('user_favorites')\n            .select('*', { count: 'exact', head: true })\n            .eq('property_id', property.id);\n\n          // Fetch applications count\n          const { count: applicationsCount } = await supabase\n            .from('rental_applications')\n            .select('*', { count: 'exact', head: true })\n            .eq('property_id', property.id);\n\n          // Calculate conversion rate\n          const conversionRate = property.view_count > 0\n            ? Math.round(((applicationsCount || 0) / property.view_count) * 100)\n            : 0;\n\n          return {\n            ...property,\n            favorites_count: favoritesCount || 0,\n            applications_count: applicationsCount || 0,\n            conversion_rate: conversionRate,\n          };\n        })\n      );\n\n      setProperties(propertiesWithMetrics);\n    } catch (error) {\n      logger.error('Failed to fetch user properties', { error, userId: user?.id });\n      toast.error('Erreur lors du chargement des propriétés');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Filter and sort properties\n  const filteredAndSortedProperties = useMemo(() => {\n    let filtered = properties;\n\n    // Filter by status\n    if (activeStatus !== 'all') {\n      if (activeStatus === 'pending' || activeStatus === 'rejected') {\n        filtered = filtered.filter(p => p.moderation_status === activeStatus);\n      } else {\n        filtered = filtered.filter(p => p.status === activeStatus);\n      }\n    }\n\n    // Filter by search query\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      filtered = filtered.filter(p =>\n        p.title.toLowerCase().includes(query) ||\n        p.city.toLowerCase().includes(query) ||\n        p.address.toLowerCase().includes(query)\n      );\n    }\n\n    // Sort\n    const sorted = [...filtered].sort((a, b) => {\n      switch (sortBy) {\n        case 'created_desc':\n          return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();\n        case 'created_asc':\n          return new Date(a.created_at).getTime() - new Date(b.created_at).getTime();\n        case 'price_desc':\n          return b.monthly_rent - a.monthly_rent;\n        case 'price_asc':\n          return a.monthly_rent - b.monthly_rent;\n        case 'views_desc':\n          return (b.view_count || 0) - (a.view_count || 0);\n        case 'views_asc':\n          return (a.view_count || 0) - (b.view_count || 0);\n        default:\n          return 0;\n      }\n    });\n\n    return sorted;\n  }, [properties, activeStatus, searchQuery, sortBy]);\n\n  // Calculate status counts\n  const statusCounts = useMemo(() => ({\n    all: properties.length,\n    disponible: properties.filter(p => p.status === 'disponible').length,\n    loué: properties.filter(p => p.status === 'loué').length,\n    en_maintenance: properties.filter(p => p.status === 'en_maintenance').length,\n    en_negociation: properties.filter(p => p.status === 'en_negociation').length,\n    pending: properties.filter(p => p.moderation_status === 'pending').length,\n    rejected: properties.filter(p => p.moderation_status === 'rejected').length,\n  }), [properties]);\n\n  // Handlers\n  const handleToggleSelect = (id: string) => {\n    setSelectedProperties(prev =>\n      prev.includes(id) ? prev.filter(p => p !== id) : [...prev, id]\n    );\n  };\n\n  const handleClearSelection = () => {\n    setSelectedProperties([]);\n  };\n\n  const handleBulkDelete = async () => {\n    try {\n      const { error } = await supabase\n        .from('properties')\n        .delete()\n        .in('id', selectedProperties);\n\n      if (error) throw error;\n\n      toast.success(`${selectedProperties.length} bien(s) supprimé(s)`);\n      setSelectedProperties([]);\n      fetchProperties();\n    } catch (error) {\n      logger.error('Failed to delete properties', { error });\n      toast.error('Erreur lors de la suppression');\n    }\n  };\n\n  const handleBulkStatusChange = async (status: string) => {\n    try {\n      const { error } = await supabase\n        .from('properties')\n        .update({ status })\n        .in('id', selectedProperties);\n\n      if (error) throw error;\n\n      toast.success(`Statut mis à jour pour ${selectedProperties.length} bien(s)`);\n      setSelectedProperties([]);\n      fetchProperties();\n    } catch (error) {\n      logger.error('Failed to update status', { error });\n      toast.error('Erreur lors de la mise à jour');\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    try {\n      const { error } = await supabase\n        .from('properties')\n        .delete()\n        .eq('id', id);\n\n      if (error) throw error;\n\n      toast.success('Bien supprimé');\n      fetchProperties();\n    } catch (error) {\n      logger.error('Failed to delete property', { error });\n      toast.error('Erreur lors de la suppression');\n    }\n  };\n\n  if (authLoading || loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  if (!user || (profile && profile.user_type === 'locataire')) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Navbar />\n      \n      <main className=\"flex-1 container mx-auto px-4 py-8 pt-24\">\n        <div className=\"max-w-7xl mx-auto space-y-8\">\n          <DynamicBreadcrumb />\n          \n          {/* Header */}\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-4xl font-bold\">Mes Biens Immobiliers</h1>\n              <p className=\"text-muted-foreground mt-2\">\n                {properties.length} {properties.length > 1 ? 'biens' : 'bien'} au total\n              </p>\n            </div>\n            <Button asChild>\n              <Link to=\"/ajouter-bien\">\n                <Plus className=\"mr-2 h-4 w-4\" />\n                Ajouter un bien\n              </Link>\n            </Button>\n          </div>\n\n          {/* Status Tabs */}\n          <PropertyStatusTabs\n            activeStatus={activeStatus}\n            onStatusChange={setActiveStatus}\n            counts={statusCounts}\n          />\n\n          {/* Search and View Controls */}\n          <StickyHeader>\n            <div className=\"flex flex-col md:flex-row gap-4 justify-between items-start md:items-center w-full\">\n              <PropertySearchBar\n                searchQuery={searchQuery}\n                onSearchChange={setSearchQuery}\n              />\n              <ViewToggle \n                view={view} \n                onViewChange={setView}\n                options={['grid', 'list', 'table']}\n              />\n            </div>\n          </StickyHeader>\n\n          {/* Properties Display */}\n          {filteredAndSortedProperties.length === 0 ? (\n            <Card className=\"p-12 text-center\">\n              <div className=\"space-y-4\">\n                <p className=\"text-muted-foreground\">\n                  {properties.length === 0 \n                    ? \"Vous n'avez pas encore ajouté de biens\"\n                    : \"Aucun bien ne correspond à vos critères\"\n                  }\n                </p>\n                {properties.length === 0 && (\n                  <Button asChild>\n                    <Link to=\"/ajouter-bien\">\n                      <Plus className=\"mr-2 h-4 w-4\" />\n                      Ajouter mon premier bien\n                    </Link>\n                  </Button>\n                )}\n              </div>\n            </Card>\n          ) : view === 'table' ? (\n            <PropertyTableView\n              properties={filteredAndSortedProperties}\n              selectedProperties={selectedProperties}\n              onToggleSelect={handleToggleSelect}\n              onEdit={(id) => navigate(`/modifier-bien/${id}`)}\n              onDelete={handleDelete}\n            />\n          ) : (\n            <div className={\n              view === 'grid'\n                ? 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'\n                : 'space-y-4'\n            }>\n              {filteredAndSortedProperties.map((property) => (\n                <PropertyCardEnhanced\n                  key={property.id}\n                  property={property}\n                  view={view}\n                  isSelected={selectedProperties.includes(property.id)}\n                  onToggleSelect={handleToggleSelect}\n                />\n              ))}\n            </div>\n          )}\n\n          {/* Bulk Actions Bar */}\n          <BulkActionsBar\n            selectedCount={selectedProperties.length}\n            onClearSelection={handleClearSelection}\n            onBulkDelete={handleBulkDelete}\n            onBulkStatusChange={handleBulkStatusChange}\n          />\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default MyProperties;\n"],"names":["Breadcrumb","React.forwardRef","props","ref","jsx","BreadcrumbList","className","cn","BreadcrumbItem","BreadcrumbLink","asChild","Comp","Slot","BreadcrumbPage","BreadcrumbSeparator","children","ChevronRight","routeLabels","DynamicBreadcrumb","pathnames","useLocation","x","buildPath","index","Link","Home","_","path","isLast","label","jsxs","statusBadgeVariants","cva","STATUS_TOOLTIPS","StatusBadge","status","variant","size","showIcon","showLabel","animate","semanticVariant","STATUS_VARIANTS","Icon","STATUS_ICONS","PROPERTY_STATUS_LABELS","tooltip","iconSize","TooltipProvider","Tooltip","TooltipTrigger","TooltipContent","StatusBadgeUI","PropertyStatsCompact","stats","statItems","Eye","Heart","FileText","DollarSign","TrendingUp","stat","Card","CardContent","StatCard","title","value","trend","description","CardHeader","CardTitle","PropertyStats","trends","statCards","ViewsChart","data","loading","period","setPeriod","useState","showViews","setShowViews","showFavorites","setShowFavorites","periods","chartData","i","date","CardDescription","p","Button","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","Legend","e","Line","ApplicationsChart","selectedProperty","setSelectedProperty","selectedData","d","totalApplications","Fragment","BarChart","Bar","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","MarketComparison","getTrendIcon","TrendingDown","Minus","getTrendBadge","difference","Badge","item","TopPropertiesTable","properties","Table","TableHeader","TableRow","TableHead","TableBody","property","TableCell","Users","PropertyPerformanceTable","navigate","useNavigate","Skeleton","Edit","UrgentActionsCardCompact","actions","setActions","setLoading","showAll","setShowAll","useEffect","fetchUrgentActions","overdueApps","error","supabase","urgentActions","app","deadline","diffMs","daysOverdue","_a","logger","getPriorityColor","priority","displayedActions","AlertCircle","action","Clock","RevenueForecast","currentRevenue","occupancyRate","forecastData","month","growthFactor","realisticTotal","sum","currentTotal","projectedGrowth","AreaChart","Area","useOwnerAnalytics","user","useAuth","analytics","setAnalytics","setStats","setError","totalViews7d","avgConversion","err","OwnerDashboard","profile","authLoading","analyticsStats","analyticsLoading","viewsData","setViewsData","applicationsData","setApplicationsData","marketData","setMarketData","topProperties","setTopProperties","setUrgentActions","reports","setReports","fetchDashboardData","propertiesError","allProperties","favorites","applications","totalProperties","totalViews","totalFavorites","averageRent","occupiedProperties","viewsChartData","applicationsChart","propertyApps","a","marketComparison","type","myProperties","myAverage","marketProperties","marketAverage","propertiesWithMetrics","propertyFavorites","f","conversionRate","b","now","createdAt","incompleteProperties","reportHistory","formattedReports","report","viewReport","toast","downloadReport","blob","url","Navigate","Navbar","StickyHeader","RefreshCw","Tabs","TabsList","TabsTrigger","BarChart3","TabsContent","Download","Footer","PropertyStatusTabs","activeStatus","onStatusChange","counts","ViewToggle","view","onViewChange","options","Grid3x3","List","useVoiceSearch","isListening","setIsListening","transcript","setTranscript","isSupported","setIsSupported","SpeechRecognition","recognition","event","current","transcriptText","useSearchSuggestions","query","suggestions","setSuggestions","isLoading","setIsLoading","debounce","uniqueSuggestions","PropertySearchBar","searchQuery","onSearchChange","setQuery","showSuggestions","setShowSuggestions","startListening","stopListening","handleInputChange","handleSuggestionClick","suggestion","triggerHapticFeedback","Search","Input","Mic","BulkActionsBar","selectedCount","onClearSelection","onBulkDelete","onBulkStatusChange","EyeOff","AlertDialog","AlertDialogTrigger","Trash2","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","X","PropertyCardEnhanced","isSelected","onToggleSelect","Checkbox","MapPin","PROPERTY_STATUS_COLORS","Alert","AlertDescription","BedDouble","Bath","Square","PropertyTableView","selectedProperties","onEdit","onDelete","DropdownMenu","DropdownMenuTrigger","DropdownMenuContent","DropdownMenuItem","DropdownMenuSeparator","MyProperties","setProperties","setActiveStatus","setView","setSearchQuery","sortBy","setSortBy","setSelectedProperties","fetchProperties","propertiesData","favoritesCount","applicationsCount","filteredAndSortedProperties","useMemo","filtered","statusCounts","handleToggleSelect","id","prev","handleClearSelection","handleBulkDelete","handleBulkStatusChange","handleDelete","Plus"],"mappings":"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"}